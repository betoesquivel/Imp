
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe8"\x18\xe0\xf9KV\xf4)\xd0\xab\x8dR5\xb6$'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[49,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,49,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,134,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'READ':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[50,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,50,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[52,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,52,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,132,168,169,170,171,172,182,208,211,215,216,240,242,265,275,],[-85,-91,-94,-41,-42,-89,-97,-99,-98,-101,-100,177,-155,-102,-104,-103,-106,-105,-92,-155,-90,-141,-146,-147,-149,-145,-148,]),'PRINT':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[53,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,53,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,137,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'TRUE':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,181,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[-155,-23,124,-93,-107,-108,-96,-95,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-59,-23,-23,-155,-96,-23,-23,-155,-155,-155,-155,-155,-155,-155,-110,-155,-23,-155,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-155,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,141,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,106,167,209,244,245,283,],[-155,-155,-155,-3,-2,33,-155,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-32,-27,-18,-36,-30,-26,-29,-25,-28,]),'FORGET':([55,],[99,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,181,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[-155,-23,120,-93,-107,-108,-96,-95,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-59,-23,-23,-155,-96,-23,-23,-155,-155,-155,-155,-155,-155,-155,-110,-155,-23,-155,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-155,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,156,159,160,161,162,168,169,170,171,172,173,175,176,179,180,181,182,185,186,194,195,196,197,200,202,204,206,207,208,211,214,215,216,217,218,221,222,223,224,225,226,227,228,230,236,239,240,242,246,247,248,249,250,251,253,262,265,267,275,277,284,286,288,289,],[80,-85,-91,-155,-94,-80,-155,-155,-155,-41,-42,-89,-97,-99,-98,-101,-100,-155,-65,-67,-155,-155,-155,-71,-78,-68,-70,-20,-124,-20,-131,-59,-46,203,-155,-35,-102,-104,-103,-106,-105,211,-84,-88,216,-144,-143,-92,-79,-83,-125,229,-131,231,-155,238,-34,-154,-152,-155,-90,-66,-141,-146,-155,-142,-77,-76,-74,-75,-72,-73,-69,-155,231,216,-155,-147,-149,-87,-86,216,-82,-81,266,-127,-153,-145,-20,-148,-125,-155,-121,-126,290,]),'(':([38,49,50,52,53,62,68,70,74,79,82,91,97,98,107,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[47,82,95,-110,98,104,-20,108,111,-23,-93,131,147,82,156,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,82,-59,-23,-23,82,-23,-23,82,82,82,82,82,82,82,-110,82,-23,82,82,82,82,82,82,82,82,82,-23,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,132,168,169,170,171,172,182,208,211,215,216,240,242,265,275,],[-85,-91,-94,-41,-42,-89,-97,-99,-98,-101,-100,174,-155,-102,-104,-103,-106,-105,-92,-155,-90,-141,-146,-147,-149,-145,-148,]),'-':([49,79,82,86,88,91,92,98,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,156,168,169,170,171,172,174,175,176,177,178,182,183,184,187,188,189,190,191,192,193,199,200,201,208,211,212,213,215,216,217,219,220,232,235,237,240,241,242,246,247,257,265,269,275,280,],[84,-23,-93,-85,-91,-94,-80,84,84,-41,84,-42,84,-89,-97,-99,-98,-101,-100,84,-155,-23,84,-155,184,-23,-23,-23,-23,-23,-23,-23,84,-59,-102,-104,-103,-106,-105,-23,-84,-88,-23,84,-92,-23,-23,84,84,84,84,84,84,84,-110,84,-23,-155,-90,84,84,-141,-146,84,84,84,84,84,84,-147,84,-149,-87,-86,-23,-145,84,-148,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,156,161,165,166,168,169,170,171,172,175,176,179,180,181,182,185,186,194,196,197,200,207,208,210,211,214,215,216,217,218,221,222,223,224,225,226,227,228,230,236,239,240,242,246,247,248,249,250,265,267,275,276,277,284,],[-20,76,-155,-85,-91,-155,-94,-80,-155,-155,-41,-19,-42,-89,-97,-99,-98,-101,-100,-155,-65,-67,-155,-155,-155,-71,-78,-68,-70,-20,-124,-20,-131,-59,205,76,-24,-102,-104,-103,-106,-105,-84,-88,217,-144,-143,-92,-79,-83,-125,-131,232,-155,-152,-155,243,-90,-66,-141,-146,-155,-142,-77,-76,-74,-75,-72,-73,-69,252,232,217,205,-147,-149,-87,-86,217,-82,-81,-145,-20,-148,76,-125,252,]),'SCONST':([49,79,81,82,83,84,87,90,98,100,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,181,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[-155,-23,121,-93,-107,-108,-96,-95,148,151,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-59,-23,-23,-155,-96,-23,-23,-155,-155,-155,-155,-155,-155,-155,-110,-155,-23,-155,-155,-155,-155,-155,148,-155,-155,-155,-23,-155,-155,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,54,56,57,58,59,60,65,66,67,69,71,72,76,77,78,79,82,95,96,98,99,101,102,103,104,105,106,108,110,113,116,117,125,129,131,134,135,137,138,139,141,142,147,151,152,156,163,174,177,178,183,184,187,188,189,190,191,192,193,199,200,201,209,212,213,217,219,220,232,235,237,241,243,244,245,252,257,261,264,268,269,273,274,278,280,282,283,287,291,292,],[-115,-113,-21,-114,-116,45,68,-117,74,-118,91,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,68,-63,-22,-27,-18,-23,-93,146,-49,91,-136,-135,152,-51,153,-52,-36,91,-50,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,91,-137,-134,-59,207,-23,-23,91,-23,-23,91,91,91,91,91,91,91,-110,91,-23,-26,91,91,91,91,91,91,91,91,91,-22,-29,-25,146,-23,-155,45,-112,91,-45,-48,-109,91,-43,-28,-44,-122,-119,]),'TRACKDECISION':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[57,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,57,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),';':([45,46,51,61,63,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,130,132,133,136,140,143,144,150,154,155,157,165,166,168,169,170,171,172,175,176,182,185,186,208,210,211,214,215,216,221,222,223,224,225,226,227,231,233,240,242,246,247,249,250,255,256,258,259,260,265,266,270,271,275,276,279,285,],[-20,77,96,103,105,110,-155,-151,-85,-91,-155,-94,-80,-155,-155,-41,-19,-42,-89,-97,-99,-98,-101,-100,-150,-155,-65,-67,-155,-155,-71,-78,-68,-70,-128,199,-58,-61,77,-24,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,244,-90,-66,-141,-146,-77,-76,-74,-75,-72,-73,-69,-132,-130,-147,-149,-87,-86,-82,-81,-129,-133,-120,-60,-24,-145,-123,280,-40,-148,77,-24,-39,]),'=':([1,2,4,45,46,68,75,107,112,114,115,153,158,165,198,208,234,240,242,275,276,],[8,9,11,-20,79,-20,-155,-155,-41,-19,-42,-20,201,79,-155,-155,257,-147,-149,-148,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,139,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'$end':([5,12,30,34,37,39,41,48,106,167,],[0,-1,-155,-15,-14,-155,-32,-13,-36,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,205,209,244,245,261,268,273,274,278,282,283,287,291,292,],[-155,-155,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,14,-63,-27,-18,-49,-51,-52,-36,-50,14,-137,-134,14,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'FOR':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[62,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,62,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'SHOW':([55,],[100,]),'#':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[55,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,55,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'ELSE':([106,261,],[-36,272,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[65,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,65,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'ICONST':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,181,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[-155,-23,122,-93,-107,-108,-96,-95,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-59,-23,-23,-155,-96,-23,-23,-155,-155,-155,-155,-155,-155,-155,-110,-155,-23,-155,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-155,]),'[':([45,68,75,91,107,132,153,198,208,],[-20,-20,113,-94,113,113,-20,113,241,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,164,168,169,170,171,172,175,176,182,185,186,208,211,214,215,216,221,222,223,224,225,226,227,240,242,246,247,249,250,263,265,275,],[-85,-91,-155,-94,-80,-155,-155,-41,-42,-89,-97,-99,-98,-101,-100,-155,-65,-67,-155,-155,-71,-78,-68,-70,208,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-66,-141,-146,-77,-76,-74,-75,-72,-73,-69,-147,-149,-87,-86,-82,-81,275,-145,-148,]),'YES':([11,],[27,]),'IF':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[70,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,70,-63,-27,-18,-49,-51,-52,-36,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,168,169,170,171,172,175,176,182,185,186,208,211,215,216,221,222,223,224,225,226,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,-155,142,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-71,-78,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-77,-76,-74,-75,-72,-73,-147,-149,-87,-86,-82,-81,-145,-148,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,174,177,178,181,183,184,187,188,189,190,191,192,193,199,200,201,212,213,217,219,220,232,235,237,241,257,269,280,],[-155,-23,123,-93,-107,-108,-96,-95,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-59,-23,-23,-155,-96,-23,-23,-155,-155,-155,-155,-155,-155,-155,-110,-155,-23,-155,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-155,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,205,209,244,245,261,268,273,274,278,282,283,287,291,292,],[-155,-155,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,15,-63,-27,-18,-49,-51,-52,-36,-50,15,-137,-134,15,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,138,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,168,169,170,171,172,175,176,182,185,186,208,211,215,216,240,242,246,247,249,250,265,275,],[-85,-91,-94,-80,135,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-147,-149,-87,-86,-82,-81,-145,-148,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,205,209,244,245,261,268,273,274,278,282,283,287,291,292,],[-155,-155,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,17,-63,-27,-18,-49,-51,-52,-36,-50,17,-137,-134,17,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,143,144,168,169,170,171,172,175,176,182,185,186,208,211,215,216,221,222,223,224,225,226,227,240,242,246,247,249,250,265,275,],[-85,-91,129,-94,-80,-155,-155,-41,-42,-89,-97,-99,-98,-101,-100,-155,-155,-155,-71,-78,-68,-70,-102,-104,-103,-106,-105,-84,-88,-92,-79,-83,-155,-90,-141,-146,-77,-76,-74,-75,-72,-73,-69,-147,-149,-87,-86,-82,-81,-145,-148,]),'TRACK':([55,],[101,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,205,209,244,245,261,268,273,274,278,282,283,287,291,292,],[-155,-155,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-55,-62,-138,-64,-140,-56,-139,-57,-53,-54,18,-63,-27,-18,-49,-51,-52,-36,-50,18,-137,-134,18,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'{':([32,80,118,203,229,238,254,272,281,290,],[40,-31,40,-33,-111,40,40,-47,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,106,209,244,245,283,],[-155,-155,-155,-3,-2,-155,-155,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-155,38,-15,-16,-14,-32,-27,-18,-36,-26,-29,-25,-28,]),'}':([40,54,56,57,58,59,60,64,65,66,67,69,71,72,77,78,96,103,105,106,109,110,151,152,209,244,245,261,268,273,274,278,282,283,287,291,292,],[-155,-55,-62,-138,-64,-38,-56,106,-139,-57,-53,-54,-155,-63,-27,-18,-49,-51,-52,-36,-37,-50,-137,-134,-26,-29,-25,-155,-112,-45,-48,-109,-43,-28,-44,-122,-119,]),'+':([49,79,82,86,88,91,92,98,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,156,168,169,170,171,172,174,175,176,177,178,182,183,184,187,188,189,190,191,192,193,199,200,201,208,211,212,213,215,216,217,219,220,232,235,237,240,241,242,246,247,257,265,269,275,280,],[83,-23,-93,-85,-91,-94,-80,83,83,-41,83,-42,83,-89,-97,-99,-98,-101,-100,83,-155,-23,83,-155,183,-23,-23,-23,-23,-23,-23,-23,83,-59,-102,-104,-103,-106,-105,-23,-84,-88,-23,83,-92,-23,-23,83,83,83,83,83,83,83,-110,83,-23,-155,-90,83,83,-141,-146,83,83,83,83,83,83,-147,83,-149,-87,-86,-23,-145,83,-148,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[160,]),'superexpressionB':([94,],[143,]),'while_quadruple':([229,],[254,]),'seen_term':([92,],[133,]),'validate_id':([95,252,],[145,267,]),'for_quadruple':([258,],[270,]),'forloop':([40,71,],[60,60,]),'seen_iconst':([122,],[170,]),'signB':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,212,213,217,219,220,232,235,237,241,269,280,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([274,],[282,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,129,134,135,137,138,139,141,142,174,177,183,184,201,257,],[117,178,187,188,189,190,191,192,193,212,213,219,220,237,269,]),'program':([0,],[5,]),'factor':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,212,213,217,219,220,232,235,237,241,269,280,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[61,61,]),'read':([40,71,],[63,63,]),'paramsB':([161,239,],[204,262,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([166,260,279,],[210,271,285,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,212,213,217,219,220,232,235,237,241,269,280,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,246,247,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([52,199,],[97,235,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[169,]),'assignfunccallB':([107,],[155,]),'sign':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,212,213,217,219,220,232,235,237,241,269,280,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([179,236,248,],[215,259,265,]),'funccallB':([131,200,217,],[179,236,248,]),'dimensions':([75,107,132,198,],[112,112,112,112,]),'condition_quadruple':([159,],[202,]),'hyperexpression':([49,98,108,113,117,125,131,147,178,200,217,232,235,237,241,269,280,],[85,149,159,164,166,173,180,195,214,180,180,149,258,260,263,279,286,]),'seen_param':([180,],[218,]),'body':([6,],[12,]),'whileloop':([40,71,],[54,54,]),'superexpression':([49,98,108,113,117,125,131,147,178,193,200,217,232,235,237,241,269,280,],[89,89,89,89,89,89,89,89,89,227,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[51,51,]),'seen_main':([80,],[118,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[172,]),'repush_type':([76,243,],[116,264,]),'localmsgdirective':([40,71,],[58,58,]),'termB':([127,],[175,]),'expression':([49,98,108,113,117,125,131,147,178,193,200,217,232,235,237,241,269,280,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([104,],[154,]),'block':([32,118,238,254,281,290,],[41,167,261,268,287,291,]),'read_quadruple':([194,277,],[228,284,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([149,196,],[197,230,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([55,],[102,]),'localvardirective':([40,71,],[56,56,]),'seen_parentheses':([82,],[125,]),'params':([111,205,],[161,239,]),'type':([6,19,33,40,71,111,205,],[16,16,44,16,16,163,163,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,98,107,108,111,113,117,125,127,131,132,133,147,161,178,187,188,189,190,191,192,193,198,200,208,212,213,217,219,220,228,232,235,237,239,241,261,269,280,284,],[7,7,20,34,20,34,34,59,87,59,115,130,140,144,87,115,87,162,87,87,87,176,181,115,186,87,206,87,87,87,87,87,87,87,87,115,181,242,87,87,181,87,87,253,87,87,87,206,87,273,87,87,253,]),'for_expression':([286,],[289,]),'else':([261,],[274,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([133,],[185,]),'declarationB':([35,116,264,],[46,165,276,]),'declarationC':([46,165,276,],[78,209,283,]),'declarationD':([210,],[245,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([156,],[200,]),'outputB':([98,232,],[150,256,]),'outputC':([197,230,],[233,255,]),'dimensionsB':([208,],[240,]),'push_operand':([45,68,145,148,153,267,],[75,107,194,196,198,277,]),'dimensionsOpt':([75,107,132,198,],[114,158,182,234,]),'readB':([228,284,],[251,288,]),'seen_ID':([91,],[132,]),'hyperexpressionB':([89,],[128,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([272,],[281,]),'funccall':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,212,213,217,219,220,232,235,237,241,269,280,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[64,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[168,]),'seen_false':([123,],[171,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([291,],[292,]),'assignB':([107,],[157,]),'exp':([49,98,108,113,117,125,131,147,178,187,188,189,190,191,192,193,200,217,219,220,232,235,237,241,269,280,],[93,93,93,93,93,93,93,93,93,221,222,223,224,225,226,93,93,93,249,250,93,93,93,93,93,93,]),'endwhile_quadruple':([268,],[278,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',26),
  ('config -> configdirective config','config',2,'p_config','parser.py',30),
  ('config -> empty','config',1,'p_config','parser.py',31),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',35),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',36),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',37),
  ('options -> SOME','options',1,'p_options','parser.py',40),
  ('options -> ALL','options',1,'p_options','parser.py',41),
  ('options -> MOST','options',1,'p_options','parser.py',42),
  ('options -> NONE','options',1,'p_options','parser.py',43),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',46),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',47),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',51),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',54),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',55),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',58),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',59),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',63),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',71),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',93),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',101),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',105),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',110),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',114),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',132),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',133),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',134),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',142),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',143),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',147),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',150),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',155),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',161),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',174),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',175),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',179),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',182),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',183),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',187),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',194),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',197),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',198),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',204),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',208),
  ('else -> empty','else',1,'p_else','parser.py',209),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',212),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',224),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',233),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',243),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',244),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',245),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',246),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',247),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',248),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',249),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',250),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',251),
  ('assignfunccall -> ID push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',256),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',274),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',280),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',281),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',286),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',287),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',288),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',292),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',295),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',296),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',304),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',307),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',308),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',316),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',320),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',321),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',322),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',323),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',324),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',325),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',326),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',335),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',338),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',345),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',346),
  ('expB -> empty','expB',1,'p_expB','parser.py',347),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',351),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',354),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',360),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',361),
  ('termB -> empty','termB',1,'p_termB','parser.py',362),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',368),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',369),
  ('factor -> funccall','factor',1,'p_factor','parser.py',370),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',371),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',381),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',385),
  ('signB -> sign','signB',1,'p_signB','parser.py',396),
  ('signB -> empty','signB',1,'p_signB','parser.py',397),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',402),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',407),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',412),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',417),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',422),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',427),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',428),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',429),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',430),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',431),
  ('sign -> +','sign',1,'p_sign','parser.py',443),
  ('sign -> -','sign',1,'p_sign','parser.py',444),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',449),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',452),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',456),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',468),
  ('type -> INT','type',1,'p_type','parser.py',479),
  ('type -> FLOAT','type',1,'p_type','parser.py',480),
  ('type -> STRING','type',1,'p_type','parser.py',481),
  ('type -> BOOL','type',1,'p_type','parser.py',482),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',488),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',489),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',494),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',498),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',513),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',525),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',535),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',538),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',546),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',553),
  ('readB -> empty','readB',1,'p_readB','parser.py',554),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',557),
  ('outputB -> SCONST push_operand print_quadruple outputC','outputB',4,'p_outputB','parser.py',560),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',561),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',564),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',571),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',572),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',576),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',579),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',580),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',584),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',588),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',589),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',590),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',594),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',606),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',607),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',610),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',614),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',615),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',619),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',623),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',624),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',629),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',633),
  ('params -> type ID','params',2,'p_params','parser.py',652),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',661),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',662),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',665),
]
