
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '4T]\xdd\xb6@\xb9I-\xb9\x96S\xca\x97\xfa\xf2'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,52,-46,-52,-107,-109,-47,-108,-48,-44,-45,52,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'VOID':([33,],[43,]),'SOME':([8,9,],[22,22,]),'WHILE':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,54,-46,-52,-107,-109,-47,-108,-48,-44,-45,54,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'SCONST':([99,101,187,],[147,150,147,]),'PRINT':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,55,-46,-52,-107,-109,-47,-108,-48,-44,-45,55,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'TRUE':([48,52,78,82,83,84,85,86,88,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[-122,-122,-122,-79,123,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'>':([47,49,87,89,91,92,93,119,120,121,122,123,127,128,129,131,134,135,138,156,167,168,169,170,172,173,174,175,194,195,220,224,],[-35,-36,-122,-77,-122,-122,140,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,179,-112,-76,-73,-72,-115,-117,-110,-69,-68,-111,-114,-116,-113,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,35,37,40,42,80,81,107,118,145,165,166,201,],[-122,-122,-122,-3,-2,33,-122,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-18,-16,33,-26,-22,-19,-30,-21,-25,-20,-24,-23,]),'FORGET':([57,],[100,]),'#':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,57,-46,-52,-107,-109,-47,-108,-48,-44,-45,57,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'FCONST':([48,52,78,82,83,84,85,86,88,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[-122,-122,-122,-79,120,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'NO':([11,],[29,]),')':([47,49,50,87,89,91,92,93,94,110,116,119,120,121,122,123,124,127,128,129,130,131,134,135,136,139,142,144,146,147,148,154,156,157,159,160,161,162,167,168,169,170,172,173,174,175,177,180,192,193,194,195,200,203,204,205,206,207,208,213,215,217,218,220,223,224,229,231,233,],[-35,-36,95,-122,-77,-122,-122,-122,-122,156,-122,-84,-81,-82,-75,-83,167,-71,-74,-122,156,-78,-67,-70,-59,-66,-55,-58,184,185,185,-122,-112,195,198,199,-28,-29,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,214,-97,-111,-114,-122,-63,-64,-62,-65,-56,-57,-122,195,-119,-121,-116,-96,-113,232,-122,-120,]),'(':([39,48,52,54,55,64,69,70,72,77,78,84,91,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[50,84,84,98,99,106,108,110,113,116,84,84,130,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([47,49,87,89,91,119,120,121,122,123,129,131,156,167,170,172,173,194,195,220,224,],[-35,-36,125,-77,-122,-84,-81,-82,-75,-83,-122,-78,-112,-76,-115,-117,-110,-111,-114,-116,-113,]),'-':([47,48,49,52,78,84,87,89,91,92,98,99,110,113,119,120,121,122,123,125,126,127,128,129,130,131,132,133,138,140,156,158,167,168,169,170,171,172,173,176,178,179,181,182,183,187,190,194,195,196,211,220,222,224,],[-35,86,-36,86,86,86,-122,-77,-122,133,86,86,86,86,-84,-81,-82,-75,-83,86,86,-71,-74,-122,86,-78,86,86,86,86,-112,86,-76,-73,-72,-115,86,-117,-110,86,86,86,86,86,86,86,86,-111,-114,86,86,-116,86,-113,]),',':([36,46,47,49,87,89,91,92,93,94,117,119,120,121,122,123,127,128,129,131,134,135,136,139,142,144,147,148,154,156,157,167,168,169,170,172,173,174,175,177,180,194,195,200,203,204,205,206,207,208,213,215,220,224,231,],[-122,79,-35,-36,-122,-77,-122,-122,-122,-122,164,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-59,-66,-55,-58,187,187,191,-112,196,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,-111,-114,219,-63,-64,-62,-65,-56,-57,191,196,-116,-113,219,]),'/':([47,49,87,89,91,119,120,121,122,123,129,131,156,167,170,172,173,194,195,220,224,],[-35,-36,126,-77,-122,-84,-81,-82,-75,-83,-122,-78,-112,-76,-115,-117,-110,-111,-114,-116,-113,]),'ID':([14,15,16,17,18,35,41,43,44,45,48,52,56,58,59,61,62,66,67,68,71,73,74,75,78,79,80,81,84,97,98,99,100,102,103,104,105,106,107,108,110,113,115,118,125,126,130,132,133,138,140,150,151,158,163,164,165,166,171,176,178,179,181,182,183,187,190,191,196,201,209,211,216,222,225,226,228,230,234,],[-90,-88,36,-89,-91,-18,70,-92,77,-93,91,91,-46,-52,-107,-109,-47,-108,-48,-44,-45,70,-54,-53,91,36,-22,-19,91,-40,91,91,-105,-104,151,-43,-42,152,-30,154,91,91,-41,-21,91,91,91,91,91,91,91,-106,-103,91,200,36,-20,-24,91,91,91,91,91,91,91,91,91,213,91,-23,-87,91,-122,91,-37,-39,231,-38,-94,]),'TRACKDECISION':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,59,-46,-52,-107,-109,-47,-108,-48,-44,-45,59,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),';':([36,46,47,49,53,60,63,76,87,89,91,92,93,94,96,109,111,117,119,120,121,122,123,127,128,129,131,134,135,136,139,142,144,149,153,155,156,167,168,169,170,172,173,174,175,177,180,185,186,188,194,195,197,203,204,205,206,207,208,210,212,214,220,221,224,],[-122,80,-35,-36,97,104,105,115,-122,-77,-122,-122,-122,-122,-118,-49,-51,166,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-59,-66,-55,-58,-98,190,-50,-112,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,-101,-99,-100,-111,-114,-34,-63,-64,-62,-65,-56,-57,-102,222,-95,-116,-33,-113,]),'=':([1,2,4,36,46,47,49,70,87,89,91,92,93,112,119,120,121,122,123,127,128,129,131,134,135,137,138,140,152,156,167,168,169,170,172,173,174,175,189,194,195,220,224,],[8,9,11,-122,78,-35,-36,-122,-122,-77,-122,-122,137,158,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,176,178,181,-122,-112,-76,-73,-72,-115,-117,-110,-69,-68,211,-111,-114,-116,-113,]),'<':([47,49,87,89,91,92,93,119,120,121,122,123,127,128,129,131,134,135,156,167,168,169,170,172,173,174,175,194,195,220,224,],[-35,-36,-122,-77,-122,-122,138,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-112,-76,-73,-72,-115,-117,-110,-69,-68,-111,-114,-116,-113,]),'$end':([5,12,30,34,38,40,42,51,107,145,],[0,-1,-122,-15,-14,-122,-26,-13,-30,-25,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,116,118,150,151,165,166,201,209,216,219,225,226,230,234,],[-122,-122,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,-18,14,-46,-52,-107,-109,-47,-108,-48,-44,-45,14,-54,-53,-22,-19,-40,-43,-42,-30,-41,14,-21,-106,-103,-20,-24,-23,-87,-122,14,-37,-39,-38,-94,]),'FOR':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,64,-46,-52,-107,-109,-47,-108,-48,-44,-45,64,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'SHOW':([57,],[101,]),'NONE':([8,9,],[23,23,]),'ELSE':([107,216,],[-30,227,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,66,-46,-52,-107,-109,-47,-108,-48,-44,-45,66,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'ICONST':([48,52,78,82,83,84,85,86,88,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[-122,-122,-122,-79,121,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'INPUT':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,69,-46,-52,-107,-109,-47,-108,-48,-44,-45,69,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'[':([36,70,91,129,152,],[48,48,48,171,48,]),']':([47,49,87,89,90,91,92,93,94,119,120,121,122,123,127,128,129,131,134,135,136,139,142,144,156,167,168,169,170,172,173,174,175,177,180,194,195,202,203,204,205,206,207,208,220,224,],[-35,-36,-122,-77,129,-122,-122,-122,-122,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-59,-66,-55,-58,-112,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,-111,-114,220,-63,-64,-62,-65,-56,-57,-116,-113,]),'YES':([11,],[27,]),'IF':([35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,72,-46,-52,-107,-109,-47,-108,-48,-44,-45,72,-54,-53,-22,-19,-40,-43,-42,-30,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'&':([47,49,87,89,91,92,93,94,119,120,121,122,123,127,128,129,131,134,135,136,139,141,156,167,168,169,170,172,173,174,175,177,180,194,195,203,204,205,206,220,224,],[-35,-36,-122,-77,-122,-122,-122,141,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-59,-66,182,-112,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,-111,-114,-63,-64,-62,-65,-116,-113,]),'ALL':([8,9,],[21,21,]),'FALSE':([48,52,78,82,83,84,85,86,88,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[-122,-122,-122,-79,119,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,116,118,150,151,165,166,201,209,216,219,225,226,230,234,],[-122,-122,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,-18,15,-46,-52,-107,-109,-47,-108,-48,-44,-45,15,-54,-53,-22,-19,-40,-43,-42,-30,-41,15,-21,-106,-103,-20,-24,-23,-87,-122,15,-37,-39,-38,-94,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,116,118,150,151,165,166,201,209,216,219,225,226,230,234,],[-122,-122,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,-18,17,-46,-52,-107,-109,-47,-108,-48,-44,-45,17,-54,-53,-22,-19,-40,-43,-42,-30,-41,17,-21,-106,-103,-20,-24,-23,-87,-122,17,-37,-39,-38,-94,]),'|':([47,49,87,89,91,92,93,94,119,120,121,122,123,127,128,129,131,134,135,136,139,143,156,167,168,169,170,172,173,174,175,177,180,194,195,203,204,205,206,220,224,],[-35,-36,-122,-77,-122,-122,-122,143,-84,-81,-82,-75,-83,-71,-74,-122,-78,-67,-70,-59,-66,183,-112,-76,-73,-72,-115,-117,-110,-69,-68,-60,-61,-111,-114,-63,-64,-62,-65,-116,-113,]),'TRACK':([57,],[102,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,35,41,56,58,59,61,62,66,67,68,71,73,74,75,80,81,97,104,105,107,115,116,118,150,151,165,166,201,209,216,219,225,226,230,234,],[-122,-122,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,-18,18,-46,-52,-107,-109,-47,-108,-48,-44,-45,18,-54,-53,-22,-19,-40,-43,-42,-30,-41,18,-21,-106,-103,-20,-24,-23,-87,-122,18,-37,-39,-38,-94,]),'{':([32,95,184,198,199,227,232,],[41,41,41,41,-27,41,41,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,37,38,42,80,81,107,118,165,166,201,],[-122,-122,-122,-3,-2,-122,-122,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-122,39,-15,-18,-16,-14,-26,-22,-19,-30,-21,-20,-24,-23,]),'}':([35,41,56,58,59,61,62,65,66,67,68,71,73,74,75,80,81,97,104,105,107,114,115,118,150,151,165,166,201,209,216,225,226,230,234,],[-18,-122,-46,-52,-107,-32,-47,107,-108,-48,-44,-45,-122,-54,-53,-22,-19,-40,-43,-42,-30,-31,-41,-21,-106,-103,-20,-24,-23,-87,-122,-37,-39,-38,-94,]),'+':([47,48,49,52,78,84,87,89,91,92,98,99,110,113,119,120,121,122,123,125,126,127,128,129,130,131,132,133,138,140,156,158,167,168,169,170,171,172,173,176,178,179,181,182,183,187,190,194,195,196,211,220,222,224,],[-35,85,-36,85,85,85,-122,-77,-122,132,85,85,85,85,-84,-81,-82,-75,-83,85,85,-71,-74,-122,85,-78,85,85,85,85,-112,85,-76,-73,-72,-115,85,-117,-110,85,85,85,85,85,85,85,85,-111,-114,85,85,-116,85,-113,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([83,],[122,]),'localdirective':([41,73,],[67,67,]),'assignfunccallB':([70,],[109,]),'assignfunccall':([41,73,],[53,53,]),'paramsOpt':([116,],[160,]),'assignB':([70,],[111,]),'sign':([48,52,78,84,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'localvardirective':([41,73,],[58,58,]),'dimensionsB':([129,],[170,]),'dimensionsOpt':([36,70,91,152,],[46,112,131,189,]),'forloop':([41,73,],[62,62,]),'funccallB':([110,130,],[155,173,]),'funccallC':([157,215,],[194,224,]),'dimensions':([36,70,91,152,],[47,47,47,47,]),'optionsyesno':([11,],[28,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,40,],[31,38,51,]),'localvardirectiveB':([57,],[103,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([116,],[161,]),'factor':([48,52,78,84,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'input':([41,73,],[60,60,]),'main':([31,],[40,]),'type':([6,19,33,41,73,116,219,],[16,16,45,16,16,163,228,]),'empty':([0,3,6,13,19,30,36,40,41,48,52,70,73,78,84,87,91,92,93,94,98,99,110,113,116,125,126,129,130,132,133,138,140,152,154,158,171,176,178,179,181,182,183,187,190,196,200,211,213,216,222,231,],[7,7,20,34,20,34,49,34,61,88,88,49,61,88,88,128,49,135,139,144,88,88,88,88,162,88,88,172,88,88,88,88,88,49,193,88,88,88,88,88,88,88,88,88,88,88,218,88,193,226,88,218,]),'body':([6,],[12,]),'whileloop':([41,73,],[56,56,]),'return':([41,73,],[63,63,]),'superexpressionB':([94,],[142,]),'funccall':([48,52,78,84,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'instructionsOpt':([41,73,],[65,114,]),'else':([216,],[225,]),'superexpression':([48,52,78,84,98,99,110,113,130,158,171,182,183,187,190,196,211,222,],[90,96,117,124,146,148,157,159,157,197,202,207,208,148,212,215,221,229,]),'paramsB':([200,231,],[217,233,]),'func':([13,30,40,],[32,32,32,]),'declaration':([6,19,41,73,],[19,19,68,68,]),'returntype':([33,],[44,]),'expB':([92,],[134,]),'declarationB':([16,79,164,],[35,118,201,]),'declarationC':([46,],[81,]),'declarationD':([117,],[165,]),'condition':([41,73,],[71,71,]),'suprafunc':([13,30,40,],[30,30,30,]),'declarationsOpt':([6,19,],[13,37,]),'term':([48,52,78,84,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[92,92,92,92,92,92,92,92,168,169,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'signB':([48,52,78,84,98,99,110,113,125,126,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'config':([0,3,],[6,10,]),'instruction':([41,73,],[73,73,]),'assign':([106,],[153,]),'inputB':([154,213,],[192,223,]),'localmsgdirective':([41,73,],[74,74,]),'localdecisiondirective':([41,73,],[75,75,]),'termB':([87,],[127,]),'exp':([48,52,78,84,98,99,110,113,130,132,133,138,140,158,171,176,178,179,181,182,183,187,190,196,211,222,],[93,93,93,93,93,93,93,93,93,174,175,177,180,93,93,203,204,205,206,93,93,93,93,93,93,93,]),'outputB':([99,187,],[149,210,]),'output':([41,73,],[76,76,]),'expression':([48,52,78,84,98,99,110,113,130,158,171,182,183,187,190,196,211,222,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'options':([8,9,],[25,26,]),'block':([32,95,184,198,227,232,],[42,145,209,216,230,234,]),'outputC':([147,148,],[186,188,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',14),
  ('config -> configdirective config','config',2,'p_config','parser.py',18),
  ('config -> empty','config',1,'p_config','parser.py',19),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',23),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',24),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',25),
  ('options -> SOME','options',1,'p_options','parser.py',28),
  ('options -> ALL','options',1,'p_options','parser.py',29),
  ('options -> MOST','options',1,'p_options','parser.py',30),
  ('options -> NONE','options',1,'p_options','parser.py',31),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',34),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',35),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',39),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',42),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',43),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',46),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',47),
  ('declaration -> type declarationB','declaration',2,'p_declaration','parser.py',51),
  ('declarationB -> ID dimensionsOpt declarationC','declarationB',3,'p_declarationB','parser.py',55),
  ('declarationC -> = superexpression declarationD','declarationC',3,'p_declarationC','parser.py',59),
  ('declarationC -> , declarationB','declarationC',2,'p_declarationC','parser.py',60),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',61),
  ('declarationD -> , declarationB','declarationD',2,'p_declarationD','parser.py',79),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',80),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',84),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',88),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',91),
  ('paramsOpt -> params','paramsOpt',1,'p_paramsOpt','parser.py',94),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',95),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',99),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',102),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',103),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',107),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',110),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',113),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',114),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',118),
  ('else -> ELSE block','else',2,'p_else','parser.py',122),
  ('else -> empty','else',1,'p_else','parser.py',123),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',127),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',128),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',129),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',130),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',131),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',132),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',133),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',134),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',135),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',140),
  ('assignfunccallB -> ( funccallB','assignfunccallB',2,'p_assignfunccallB','parser.py',143),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',144),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',148),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',149),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',150),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',154),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',157),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',158),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',159),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',163),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',166),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',167),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',168),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',169),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',170),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',171),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',172),
  ('exp -> term expB','exp',2,'p_exp','parser.py',176),
  ('expB -> - exp','expB',2,'p_expB','parser.py',179),
  ('expB -> + exp','expB',2,'p_expB','parser.py',180),
  ('expB -> empty','expB',1,'p_expB','parser.py',181),
  ('term -> factor termB','term',2,'p_term','parser.py',185),
  ('termB -> / term','termB',2,'p_termB','parser.py',188),
  ('termB -> * term','termB',2,'p_termB','parser.py',189),
  ('termB -> empty','termB',1,'p_termB','parser.py',190),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',196),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',197),
  ('factor -> funccall','factor',1,'p_factor','parser.py',198),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',199),
  ('signB -> sign','signB',1,'p_signB','parser.py',202),
  ('signB -> empty','signB',1,'p_signB','parser.py',203),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',207),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',208),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',209),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',210),
  ('sign -> +','sign',1,'p_sign','parser.py',214),
  ('sign -> -','sign',1,'p_sign','parser.py',215),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',219),
  ('type -> INT','type',1,'p_type','parser.py',223),
  ('type -> FLOAT','type',1,'p_type','parser.py',224),
  ('type -> STRING','type',1,'p_type','parser.py',225),
  ('type -> BOOL','type',1,'p_type','parser.py',226),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',231),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',232),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',236),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',240),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',243),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',244),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',247),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',250),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',251),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',254),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',255),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',259),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',262),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',263),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',267),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',271),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',272),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',273),
  ('funccall -> ID ( funccallB','funccall',3,'p_funccall','parser.py',277),
  ('funccallB -> superexpression funccallC','funccallB',2,'p_funccallB','parser.py',280),
  ('funccallB -> )','funccallB',1,'p_funccallB','parser.py',281),
  ('funccallC -> , superexpression funccallC','funccallC',3,'p_funccallC','parser.py',284),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',285),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',289),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',293),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',294),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',299),
  ('params -> type ID paramsB','params',3,'p_params','parser.py',303),
  ('paramsB -> , type ID paramsB','paramsB',4,'p_paramsB','parser.py',306),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',307),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',310),
]
