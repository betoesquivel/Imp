
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'T\xe2\xe6$\x1e2</\x95\xc8\x8b\xb3\xe1y\x1f\xbc'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[49,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,49,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,134,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'READ':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[50,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,50,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[51,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,51,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,132,164,165,166,167,168,178,205,208,212,213,236,238,260,271,],[-86,-92,-95,-41,-42,-90,-98,-100,-99,-102,-101,173,-155,-103,-105,-104,-107,-106,-93,-155,-91,-141,-146,-147,-149,-145,-148,]),'PRINT':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[52,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,52,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,137,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'TRUE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,170,173,174,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[-155,-23,124,-94,-108,-109,-97,-96,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-23,-23,-155,-97,-23,-23,-155,-155,-155,-155,-155,-155,-155,-111,-60,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-23,-155,-155,-155,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,141,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,163,206,240,241,280,],[-155,-155,-155,-3,-2,33,-155,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-32,-27,-18,-36,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,170,173,174,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[-155,-23,120,-94,-108,-109,-97,-96,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-23,-23,-155,-97,-23,-23,-155,-155,-155,-155,-155,-155,-155,-111,-60,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-23,-155,-155,-155,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,155,156,157,158,164,165,166,167,168,169,171,172,175,176,177,178,181,182,190,191,192,196,199,201,203,204,205,208,211,212,213,214,215,218,219,220,221,222,223,224,225,232,235,236,238,242,243,244,245,246,247,249,254,257,260,262,271,273,281,283,285,286,],[80,-86,-92,-155,-95,-81,-155,-155,-155,-41,-42,-90,-98,-100,-99,-102,-101,-155,-66,-68,-155,-155,-155,-72,-79,-69,-71,-20,-125,-131,-46,200,-155,-35,-103,-105,-104,-107,-106,208,-85,-89,213,-144,-143,-93,-80,-84,-126,226,227,-60,234,-34,-154,-152,-155,-91,-67,-141,-146,-155,-142,-78,-77,-75,-76,-73,-74,-70,-155,-155,-155,-147,-149,-88,-87,213,-83,-82,261,-128,213,-153,-145,-20,-148,-126,-155,-122,-127,287,]),'(':([38,49,50,51,52,61,68,70,74,79,82,91,96,97,107,108,113,117,125,129,131,134,135,137,138,139,141,142,147,154,170,173,174,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[47,82,95,-111,97,103,-59,108,111,-23,-94,131,147,82,-20,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,82,196,-23,-23,82,-23,-23,82,82,82,82,82,82,82,-111,-60,82,82,82,82,82,82,82,82,-23,82,-23,82,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,132,164,165,166,167,168,178,205,208,212,213,236,238,260,271,],[-86,-92,-95,-41,-42,-90,-98,-100,-99,-102,-101,170,-155,-103,-105,-104,-107,-106,-93,-155,-91,-141,-146,-147,-149,-145,-148,]),'-':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,164,165,166,167,168,170,171,172,173,174,178,179,180,183,184,185,186,187,188,189,194,196,205,208,209,210,212,213,214,216,217,228,231,232,233,236,237,238,242,243,252,255,260,264,271,276,],[84,-23,-94,-86,-92,-95,-81,84,84,-41,84,-42,84,-90,-98,-100,-99,-102,-101,84,-155,-23,84,-155,180,-23,-23,-23,-23,-23,-23,-23,84,-103,-105,-104,-107,-106,-23,-85,-89,-23,84,-93,-23,-23,84,84,84,84,84,84,84,-111,-60,-155,-91,84,84,-141,-146,84,84,84,84,84,84,-23,-147,84,-149,-88,-87,-23,84,-145,84,-148,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,157,161,162,164,165,166,167,168,171,172,175,176,177,178,181,182,190,192,196,204,205,207,208,211,212,213,214,215,218,219,220,221,222,223,224,225,232,235,236,238,242,243,244,245,246,254,260,262,271,272,273,281,],[-20,76,-155,-86,-92,-155,-95,-81,-155,-155,-41,-19,-42,-90,-98,-100,-99,-102,-101,-155,-66,-68,-155,-155,-155,-72,-79,-69,-71,-20,-125,-131,202,76,-24,-103,-105,-104,-107,-106,-85,-89,214,-144,-143,-93,-80,-84,-126,228,-60,-152,-155,239,-91,-67,-141,-146,-155,-142,-78,-77,-75,-76,-73,-74,-70,248,-155,202,-147,-149,-88,-87,214,-83,-82,214,-145,-20,-148,76,-126,248,]),'SCONST':([49,79,81,82,83,84,87,90,97,99,108,113,117,125,129,131,134,135,137,138,139,141,142,147,170,173,174,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[-155,-23,121,-94,-108,-109,-97,-96,-155,150,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-23,-23,-155,-97,-23,-23,-155,-155,-155,-155,-155,-155,-155,-111,-60,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-23,-155,-155,-155,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,57,58,59,65,66,67,69,71,72,76,77,78,79,82,95,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,129,131,134,135,137,138,139,141,142,147,150,151,159,170,173,174,179,180,183,184,185,186,187,188,189,194,196,206,209,210,214,216,217,228,231,232,233,237,239,240,241,248,252,255,256,259,263,264,269,270,274,276,279,280,284,288,289,],[-116,-114,-21,-115,-117,45,68,-118,74,-119,91,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,68,-64,-22,-27,-18,-23,-94,146,91,-136,-135,151,-51,152,-52,-36,-49,91,-50,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,91,-137,-134,204,-23,-23,91,-23,-23,91,91,91,91,91,91,91,-111,-60,-26,91,91,91,91,91,91,91,91,-23,91,-22,-29,-25,146,-23,91,-155,45,-113,91,-45,-48,-110,91,-43,-28,-44,-123,-120,]),'TRACKDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[56,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,56,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),';':([45,46,60,62,64,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,130,132,133,136,140,143,144,149,153,161,162,164,165,166,167,168,171,172,178,181,182,195,197,205,207,208,211,212,213,218,219,220,221,222,223,224,227,229,236,238,242,243,245,246,251,253,260,261,265,266,267,271,272,275,277,282,],[-20,77,102,104,106,110,-155,-151,-86,-92,-155,-95,-81,-155,-155,-41,-19,-42,-90,-98,-100,-99,-102,-101,-150,-155,-66,-68,-155,-155,-72,-79,-69,-71,-129,194,77,-24,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-58,-62,-155,240,-91,-67,-141,-146,-78,-77,-75,-76,-73,-74,-70,-132,-130,-147,-149,-88,-87,-83,-82,-133,-121,-145,-124,276,-61,-24,-148,77,-24,-40,-39,]),'=':([1,2,4,45,46,68,75,107,112,114,115,152,154,161,193,198,205,230,236,238,271,272,],[8,9,11,-20,79,-59,-155,-20,-41,-19,-42,-20,-155,79,-155,233,-155,252,-147,-149,-148,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,139,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'$end':([5,12,30,34,37,39,41,48,105,163,],[0,-1,-155,-15,-14,-155,-32,-13,-36,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,202,206,240,241,256,263,269,270,274,279,280,284,288,289,],[-155,-155,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,14,-64,-27,-18,-51,-52,-36,-49,-50,14,-137,-134,14,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'FOR':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[61,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,61,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[54,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,54,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'ELSE':([105,256,],[-36,268,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[65,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,65,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'ICONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,170,173,174,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[-155,-23,122,-94,-108,-109,-97,-96,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-23,-23,-155,-97,-23,-23,-155,-155,-155,-155,-155,-155,-155,-111,-60,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-23,-155,-155,-155,]),'[':([45,68,75,91,107,132,152,154,193,205,],[-20,-59,113,-95,-20,113,-20,113,113,237,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,160,164,165,166,167,168,171,172,178,181,182,205,208,211,212,213,218,219,220,221,222,223,224,236,238,242,243,245,246,258,260,271,],[-86,-92,-155,-95,-81,-155,-155,-41,-42,-90,-98,-100,-99,-102,-101,-155,-66,-68,-155,-155,-72,-79,-69,-71,205,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-67,-141,-146,-78,-77,-75,-76,-73,-74,-70,-147,-149,-88,-87,-83,-82,271,-145,-148,]),'YES':([11,],[27,]),'IF':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[70,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,70,-64,-27,-18,-51,-52,-36,-49,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,164,165,166,167,168,171,172,178,181,182,205,208,212,213,218,219,220,221,222,223,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,-155,142,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-72,-79,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-78,-77,-75,-76,-73,-74,-147,-149,-88,-87,-83,-82,-145,-148,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,170,173,174,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,216,217,228,231,232,233,237,252,255,264,276,],[-155,-23,123,-94,-108,-109,-97,-96,-155,-155,-155,-155,-155,-23,-155,-23,-23,-23,-23,-23,-23,-23,-155,-23,-23,-155,-97,-23,-23,-155,-155,-155,-155,-155,-155,-155,-111,-60,-155,-155,-155,-155,-155,-155,-155,-155,-23,-155,-23,-155,-155,-155,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,202,206,240,241,256,263,269,270,274,279,280,284,288,289,],[-155,-155,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,15,-64,-27,-18,-51,-52,-36,-49,-50,15,-137,-134,15,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,138,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,178,181,182,205,208,212,213,236,238,242,243,245,246,260,271,],[-86,-92,-95,-81,135,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-147,-149,-88,-87,-83,-82,-145,-148,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,202,206,240,241,256,263,269,270,274,279,280,284,288,289,],[-155,-155,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,17,-64,-27,-18,-51,-52,-36,-49,-50,17,-137,-134,17,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,143,144,164,165,166,167,168,171,172,178,181,182,205,208,212,213,218,219,220,221,222,223,224,236,238,242,243,245,246,260,271,],[-86,-92,129,-95,-81,-155,-155,-41,-42,-90,-98,-100,-99,-102,-101,-155,-155,-155,-72,-79,-69,-71,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-155,-91,-141,-146,-78,-77,-75,-76,-73,-74,-70,-147,-149,-88,-87,-83,-82,-145,-148,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,202,206,240,241,256,263,269,270,274,279,280,284,288,289,],[-155,-155,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-55,-63,-138,-65,-140,-56,-139,-57,-53,-54,18,-64,-27,-18,-51,-52,-36,-49,-50,18,-137,-134,18,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'{':([32,80,118,200,226,234,250,268,278,287,],[40,-31,40,-33,-112,40,40,-47,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,206,240,241,280,],[-155,-155,-155,-3,-2,-155,-155,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-155,38,-15,-16,-14,-32,-27,-18,-36,-26,-29,-25,-28,]),'}':([40,53,55,56,57,58,59,63,65,66,67,69,71,72,77,78,102,104,105,106,109,110,150,151,206,240,241,256,263,269,270,274,279,280,284,288,289,],[-155,-55,-63,-138,-65,-38,-56,105,-139,-57,-53,-54,-155,-64,-27,-18,-51,-52,-36,-49,-37,-50,-137,-134,-26,-29,-25,-155,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'+':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,164,165,166,167,168,170,171,172,173,174,178,179,180,183,184,185,186,187,188,189,194,196,205,208,209,210,212,213,214,216,217,228,231,232,233,236,237,238,242,243,252,255,260,264,271,276,],[83,-23,-94,-86,-92,-95,-81,83,83,-41,83,-42,83,-90,-98,-100,-99,-102,-101,83,-155,-23,83,-155,179,-23,-23,-23,-23,-23,-23,-23,83,-103,-105,-104,-107,-106,-23,-85,-89,-23,83,-93,-23,-23,83,83,83,83,83,83,83,-111,-60,-155,-91,83,83,-141,-146,83,83,83,83,83,83,-23,-147,83,-149,-88,-87,-23,83,-145,83,-148,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[156,]),'superexpressionB':([94,],[143,]),'while_quadruple':([226,],[250,]),'seen_term':([92,],[133,]),'validate_id':([95,248,],[145,262,]),'for_quadruple':([253,],[265,]),'forloop':([40,71,],[59,59,]),'seen_iconst':([122,],[166,]),'signB':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,209,210,214,216,217,228,231,232,237,255,264,276,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([270,],[279,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,129,134,135,137,138,139,141,142,170,173,179,180,233,252,],[117,174,183,184,185,186,187,188,189,209,210,216,217,255,264,]),'program':([0,],[5,]),'factor':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,209,210,214,216,217,228,231,232,237,255,264,276,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[60,60,]),'read':([40,71,],[62,62,]),'paramsB':([157,235,],[201,257,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([162,267,275,],[207,277,282,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,209,210,214,216,217,228,231,232,237,255,264,276,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,242,243,92,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([51,194,],[96,231,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[165,]),'assignfunccallB':([154,],[195,]),'sign':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,209,210,214,216,217,228,231,232,237,255,264,276,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([175,244,254,],[212,260,266,]),'funccallB':([131,214,232,],[175,244,254,]),'dimensions':([75,132,154,193,],[112,112,112,112,]),'condition_quadruple':([155,],[199,]),'hyperexpression':([49,97,108,113,117,125,131,147,174,214,228,231,232,237,255,264,276,],[85,148,155,160,162,169,176,191,211,176,148,253,176,258,267,275,283,]),'seen_param':([176,],[215,]),'body':([6,],[12,]),'whileloop':([40,71,],[53,53,]),'superexpression':([49,97,108,113,117,125,131,147,174,189,214,228,231,232,237,255,264,276,],[89,89,89,89,89,89,89,89,89,224,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[64,64,]),'seen_main':([80,],[118,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[168,]),'repush_type':([76,239,],[116,259,]),'localmsgdirective':([40,71,],[57,57,]),'termB':([127,],[171,]),'expression':([49,97,108,113,117,125,131,147,174,189,214,228,231,232,237,255,264,276,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([103,],[153,]),'block':([32,118,234,250,278,287,],[41,163,256,263,284,288,]),'seen_funccall':([68,],[107,]),'read_quadruple':([190,273,],[225,281,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([148,],[192,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([54,],[101,]),'localvardirective':([40,71,],[55,55,]),'seen_parentheses':([82,],[125,]),'params':([111,202,],[157,235,]),'type':([6,19,33,40,71,111,202,],[16,16,44,16,16,159,159,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,97,108,111,113,117,125,127,131,132,133,147,154,157,174,183,184,185,186,187,188,189,193,205,209,210,214,216,217,225,228,231,232,235,237,255,256,264,276,281,],[7,7,20,34,20,34,34,58,87,58,115,130,140,144,87,87,158,87,87,87,172,177,115,182,87,115,203,87,87,87,87,87,87,87,87,115,238,87,87,177,87,87,249,87,87,177,203,87,87,269,87,87,249,]),'for_expression':([283,],[286,]),'else':([256,],[270,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([133,],[181,]),'declarationB':([35,116,259,],[46,161,272,]),'declarationC':([46,161,272,],[78,206,280,]),'declarationD':([207,],[241,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([196,],[232,]),'outputB':([97,228,],[149,251,]),'outputC':([192,],[229,]),'dimensionsB':([205,],[236,]),'push_operand':([45,107,145,152,262,],[75,154,190,193,273,]),'dimensionsOpt':([75,132,154,193,],[114,178,198,230,]),'readB':([225,281,],[247,285,]),'seen_ID':([91,],[132,]),'hyperexpressionB':([89,],[128,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([268,],[278,]),'funccall':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,209,210,214,216,217,228,231,232,237,255,264,276,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[63,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[164,]),'seen_false':([123,],[167,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([288,],[289,]),'assignB':([154,],[197,]),'exp':([49,97,108,113,117,125,131,147,174,183,184,185,186,187,188,189,214,216,217,228,231,232,237,255,264,276,],[93,93,93,93,93,93,93,93,93,218,219,220,221,222,223,93,93,245,246,93,93,93,93,93,93,93,]),'endwhile_quadruple':([263,],[274,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',26),
  ('config -> configdirective config','config',2,'p_config','parser.py',30),
  ('config -> empty','config',1,'p_config','parser.py',31),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',35),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',36),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',37),
  ('options -> SOME','options',1,'p_options','parser.py',40),
  ('options -> ALL','options',1,'p_options','parser.py',41),
  ('options -> MOST','options',1,'p_options','parser.py',42),
  ('options -> NONE','options',1,'p_options','parser.py',43),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',46),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',47),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',51),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',54),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',55),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',58),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',59),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',63),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',71),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',93),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',102),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',106),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',111),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',115),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',133),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',134),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',135),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',143),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',144),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',148),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',151),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',157),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',176),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',190),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',191),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',195),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',198),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',199),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',203),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',210),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',213),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',214),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',220),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',224),
  ('else -> empty','else',1,'p_else','parser.py',225),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',228),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',240),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',249),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',259),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',260),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',261),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',262),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',263),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',264),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',265),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',266),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',267),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',272),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',303),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',308),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',314),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',315),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',320),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',321),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',322),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',326),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',329),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',330),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',338),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',341),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',342),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',350),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',354),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',355),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',356),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',357),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',358),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',359),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',360),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',369),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',372),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',379),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',380),
  ('expB -> empty','expB',1,'p_expB','parser.py',381),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',385),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',388),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',394),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',395),
  ('termB -> empty','termB',1,'p_termB','parser.py',396),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',402),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',403),
  ('factor -> funccall','factor',1,'p_factor','parser.py',404),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',405),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',415),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',419),
  ('signB -> sign','signB',1,'p_signB','parser.py',437),
  ('signB -> empty','signB',1,'p_signB','parser.py',438),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',443),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',448),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',453),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',458),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',463),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',468),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',469),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',470),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',471),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',472),
  ('sign -> +','sign',1,'p_sign','parser.py',484),
  ('sign -> -','sign',1,'p_sign','parser.py',485),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',490),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',493),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',497),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',509),
  ('type -> INT','type',1,'p_type','parser.py',520),
  ('type -> FLOAT','type',1,'p_type','parser.py',521),
  ('type -> STRING','type',1,'p_type','parser.py',522),
  ('type -> BOOL','type',1,'p_type','parser.py',523),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',529),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',530),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',535),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',539),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',554),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',566),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',576),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',579),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',587),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',594),
  ('readB -> empty','readB',1,'p_readB','parser.py',595),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',598),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',601),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',604),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',613),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',614),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',618),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',621),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',622),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',626),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',630),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',631),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',632),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',636),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',649),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',650),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',653),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',671),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',672),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',676),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',680),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',681),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',686),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',690),
  ('params -> type ID','params',2,'p_params','parser.py',709),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',718),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',719),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',722),
]
