
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '^.\xfa\xb6\xed]\xaaVy~\x80\xcf\xe6O\n\xb8'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[49,-50,-56,-123,-125,-51,-124,-52,-48,-49,49,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'GTEQ':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,136,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[51,-50,-56,-123,-125,-51,-124,-52,-48,-49,51,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'/':([86,88,91,107,113,122,123,124,125,126,127,129,134,168,169,170,171,172,180,203,205,214,218,235,237,250,259,],[-79,-85,-88,-39,-40,-83,-91,-93,-92,-95,-94,177,-138,-96,-98,-97,-100,-99,-86,-130,-138,-84,-126,-131,-133,-129,-132,]),'PRINT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[52,-50,-56,-123,-125,-51,-124,-52,-48,-49,52,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'DIFF':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,139,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'TRUE':([49,79,81,82,83,84,87,90,96,97,109,111,114,120,128,131,133,136,137,139,140,141,143,144,158,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[-138,-22,127,-87,-101,-102,-90,-89,-138,-138,-138,-138,-138,-138,-138,-22,-138,-22,-22,-22,-22,-22,-22,-22,-90,-138,-22,-22,-138,-22,-22,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-22,-138,-138,]),'>':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,143,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,121,166,241,242,261,],[-138,-138,-138,-3,-2,33,-138,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-30,-26,-18,-34,-29,-25,-28,-24,-27,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,96,97,109,111,114,120,128,131,133,136,137,139,140,141,143,144,158,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[-138,-22,123,-87,-101,-102,-90,-89,-138,-138,-138,-138,-138,-138,-138,-22,-138,-22,-22,-22,-22,-22,-22,-22,-90,-138,-22,-22,-138,-22,-22,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-22,-138,-138,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,107,109,113,117,122,123,124,125,126,127,129,130,132,133,134,135,138,142,145,146,147,148,149,155,156,157,158,161,162,163,164,168,169,170,171,172,173,175,176,179,180,183,184,200,201,203,204,205,209,211,212,214,217,218,221,222,223,224,225,226,227,232,234,235,237,239,243,244,245,246,249,250,255,258,259,],[80,-79,-85,-138,-88,-74,-138,-138,-39,-138,-40,-138,-83,-91,-93,-92,-95,-94,-138,-59,-61,-138,-138,-138,-65,-72,-62,-64,192,193,193,-138,203,-127,-128,207,208,-138,-33,-96,-98,-97,-100,-99,214,-78,-82,203,-86,-73,-77,233,-113,-130,-138,-138,-32,-137,-135,-84,-60,-126,-71,-70,-68,-69,-66,-67,-63,-138,203,-131,-133,-138,-81,-80,-76,-75,-112,-129,-136,263,-132,]),'(':([38,49,51,52,61,66,67,69,74,79,82,91,96,97,109,111,114,120,128,131,133,136,137,139,140,141,143,144,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[47,82,96,97,104,106,109,114,117,-22,-87,133,82,82,82,82,82,82,82,-22,82,-22,-22,-22,-22,-22,-22,-22,82,-22,-22,82,-22,-22,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-22,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,107,113,122,123,124,125,126,127,129,134,168,169,170,171,172,180,203,205,214,218,235,237,250,259,],[-79,-85,-88,-39,-40,-83,-91,-93,-92,-95,-94,174,-138,-96,-98,-97,-100,-99,-86,-130,-138,-84,-126,-131,-133,-129,-132,]),'-':([49,79,82,86,88,91,92,96,97,107,109,111,113,114,120,122,123,124,125,126,127,128,129,131,133,134,135,136,137,139,140,141,143,144,160,168,169,170,171,172,174,175,176,177,178,180,181,182,185,186,187,188,189,190,191,195,198,203,204,205,214,215,216,218,219,220,235,236,237,243,244,247,248,250,257,259,],[84,-22,-87,-79,-85,-88,-74,84,84,-39,84,84,-40,84,84,-83,-91,-93,-92,-95,-94,84,-138,-22,84,-138,182,-22,-22,-22,-22,-22,-22,-22,84,-96,-98,-97,-100,-99,-22,-78,-82,-22,84,-86,-22,-22,84,84,84,84,84,84,84,84,84,-130,84,-138,-84,84,84,-126,84,84,-131,84,-133,-81,-80,-22,84,-129,84,-132,]),',':([45,46,75,86,88,89,91,92,93,94,107,109,113,118,119,122,123,124,125,126,127,129,130,132,133,134,135,138,142,145,146,148,149,155,156,157,158,163,167,168,169,170,171,172,175,176,179,180,183,184,203,204,205,212,213,214,217,218,221,222,223,224,225,226,227,232,234,235,237,239,243,244,245,246,250,256,259,],[-20,76,-138,-79,-85,-138,-88,-74,-138,-138,-39,-138,-40,-19,76,-83,-91,-93,-92,-95,-94,-138,-59,-61,-138,-138,-138,-65,-72,-62,-64,195,195,199,204,-127,-128,210,-23,-96,-98,-97,-100,-99,-78,-82,204,-86,-73,-77,-130,-138,-138,-135,240,-84,-60,-126,-71,-70,-68,-69,-66,-67,-63,199,204,-131,-133,210,-81,-80,-76,-75,-129,76,-132,]),'SCONST':([49,79,81,82,83,84,87,90,96,97,99,109,111,114,120,128,131,133,136,137,139,140,141,143,144,158,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[-138,-22,124,-87,-101,-102,-90,-89,-138,148,151,-138,-138,-138,-138,-138,-22,-138,-22,-22,-22,-22,-22,-22,-22,-90,-138,-22,-22,-138,-22,-22,-138,-138,-138,-138,-138,-138,-138,148,-138,-138,-138,-138,-138,-138,-138,-22,-138,-138,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,58,59,63,64,65,68,70,71,72,76,77,78,79,82,95,96,97,98,100,101,102,103,104,105,106,109,111,114,116,120,128,131,133,136,137,139,140,141,143,144,151,152,160,165,166,174,177,178,181,182,185,186,187,188,189,190,191,195,198,199,204,215,216,219,220,228,236,238,240,241,242,247,248,253,254,257,260,261,265,],[-106,-104,-21,-105,-107,45,67,-108,74,-109,91,-50,-56,-123,-125,-51,-124,-52,-48,-49,67,-58,-57,45,-26,-18,-22,-87,-44,91,91,-121,-120,152,-47,-46,153,-34,155,91,91,91,-45,91,91,-22,91,-22,-22,-22,-22,-22,-22,-22,-122,-119,91,212,-25,-22,-22,91,-22,-22,91,91,91,91,91,91,91,91,91,232,91,91,91,91,91,-103,91,-138,45,-28,-24,-22,91,-41,-43,91,-42,-27,-110,]),'TRACKDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[56,-50,-56,-123,-125,-51,-124,-52,-48,-49,56,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),';':([45,46,50,57,60,73,75,85,86,88,89,91,92,93,94,107,108,110,113,118,119,122,123,124,125,126,127,129,130,132,134,135,138,142,145,146,150,154,167,168,169,170,171,172,175,176,180,183,184,193,194,196,202,203,205,206,213,214,217,218,221,222,223,224,225,226,227,229,231,233,235,237,243,244,245,246,250,256,259,262,264,],[-20,77,95,102,103,116,-138,-134,-79,-85,-138,-88,-74,-138,-138,-39,-53,-55,-40,-19,77,-83,-91,-93,-92,-95,-94,-138,-59,-61,-138,-138,-65,-72,-62,-64,-114,198,-23,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-117,-115,-116,-54,-130,-138,-38,241,-84,-60,-126,-71,-70,-68,-69,-66,-67,-63,-118,248,-111,-131,-133,-81,-80,-76,-75,-129,77,-132,-23,-37,]),'=':([1,2,4,45,46,67,75,107,112,113,118,119,153,197,205,230,235,237,256,259,],[8,9,11,-20,79,-138,-138,-39,160,-40,-19,79,-20,-138,-138,247,-131,-133,79,-132,]),'<':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,141,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'$end':([5,12,30,34,37,39,41,48,105,121,],[0,-1,-138,-15,-14,-138,-30,-13,-34,-29,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,117,151,152,166,210,228,238,241,242,253,254,260,261,265,],[-138,-138,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-50,-56,-123,-125,-51,-124,-52,-48,-49,14,-58,-57,-26,-18,-44,-47,-46,-34,-45,14,-122,-119,-25,14,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'FOR':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[61,-50,-56,-123,-125,-51,-124,-52,-48,-49,61,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[54,-50,-56,-123,-125,-51,-124,-52,-48,-49,54,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'ELSE':([105,238,],[-34,252,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[63,-50,-56,-123,-125,-51,-124,-52,-48,-49,63,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'ICONST':([49,79,81,82,83,84,87,90,96,97,109,111,114,120,128,131,133,136,137,139,140,141,143,144,158,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[-138,-22,125,-87,-101,-102,-90,-89,-138,-138,-138,-138,-138,-138,-138,-22,-138,-22,-22,-22,-22,-22,-22,-22,-90,-138,-22,-22,-138,-22,-22,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-22,-138,-138,]),'INPUT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[66,-50,-56,-123,-125,-51,-124,-52,-48,-49,66,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'[':([45,67,75,91,134,153,197,205,],[-20,111,111,-88,111,-20,111,236,]),']':([86,88,89,91,92,93,94,107,113,122,123,124,125,126,127,129,130,132,134,135,138,142,145,146,159,168,169,170,171,172,175,176,180,183,184,203,205,214,217,218,221,222,223,224,225,226,227,235,237,243,244,245,246,250,251,259,],[-79,-85,-138,-88,-74,-138,-138,-39,-40,-83,-91,-93,-92,-95,-94,-138,-59,-61,-138,-138,-65,-72,-62,-64,205,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-60,-126,-71,-70,-68,-69,-66,-67,-63,-131,-133,-81,-80,-76,-75,-129,259,-132,]),'YES':([11,],[27,]),'IF':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,151,152,166,228,238,241,242,253,254,260,261,265,],[69,-50,-56,-123,-125,-51,-124,-52,-48,-49,69,-58,-57,-26,-18,-44,-47,-46,-34,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'AND':([86,88,91,92,93,94,107,113,122,123,124,125,126,127,129,134,135,138,142,168,169,170,171,172,175,176,180,183,184,203,205,214,218,221,222,223,224,225,226,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,-138,144,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-65,-72,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-71,-70,-68,-69,-66,-67,-131,-133,-81,-80,-76,-75,-129,-132,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,96,97,109,111,114,120,128,131,133,136,137,139,140,141,143,144,158,160,174,177,178,181,182,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,247,248,257,],[-138,-22,126,-87,-101,-102,-90,-89,-138,-138,-138,-138,-138,-138,-138,-22,-138,-22,-22,-22,-22,-22,-22,-22,-90,-138,-22,-22,-138,-22,-22,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-138,-22,-138,-138,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,117,151,152,166,210,228,238,241,242,253,254,260,261,265,],[-138,-138,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-50,-56,-123,-125,-51,-124,-52,-48,-49,15,-58,-57,-26,-18,-44,-47,-46,-34,-45,15,-122,-119,-25,15,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'EQ':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,140,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'LTEQ':([86,88,91,92,93,107,113,122,123,124,125,126,127,129,134,135,168,169,170,171,172,175,176,180,183,184,203,205,214,218,235,237,243,244,245,246,250,259,],[-79,-85,-88,-74,137,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-131,-133,-81,-80,-76,-75,-129,-132,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,117,151,152,166,210,228,238,241,242,253,254,260,261,265,],[-138,-138,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-50,-56,-123,-125,-51,-124,-52,-48,-49,17,-58,-57,-26,-18,-44,-47,-46,-34,-45,17,-122,-119,-25,17,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'OR':([86,88,89,91,92,93,94,107,113,122,123,124,125,126,127,129,134,135,138,142,145,146,168,169,170,171,172,175,176,180,183,184,203,205,214,218,221,222,223,224,225,226,227,235,237,243,244,245,246,250,259,],[-79,-85,131,-88,-74,-138,-138,-39,-40,-83,-91,-93,-92,-95,-94,-138,-138,-138,-65,-72,-62,-64,-96,-98,-97,-100,-99,-78,-82,-86,-73,-77,-130,-138,-84,-126,-71,-70,-68,-69,-66,-67,-63,-131,-133,-81,-80,-76,-75,-129,-132,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,116,117,151,152,166,210,228,238,241,242,253,254,260,261,265,],[-138,-138,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-50,-56,-123,-125,-51,-124,-52,-48,-49,18,-58,-57,-26,-18,-44,-47,-46,-34,-45,18,-122,-119,-25,18,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'{':([32,80,192,207,208,252,263,],[40,40,40,40,-31,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,166,241,242,261,],[-138,-138,-138,-3,-2,-138,-138,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-138,38,-15,-16,-14,-30,-26,-18,-34,-25,-28,-24,-27,]),'}':([40,53,55,56,58,59,62,63,64,65,68,70,71,72,77,78,95,102,103,105,115,116,151,152,166,228,238,241,242,253,254,260,261,265,],[-138,-50,-56,-123,-36,-51,105,-124,-52,-48,-49,-138,-58,-57,-26,-18,-44,-47,-46,-34,-35,-45,-122,-119,-25,-103,-138,-28,-24,-41,-43,-42,-27,-110,]),'+':([49,79,82,86,88,91,92,96,97,107,109,111,113,114,120,122,123,124,125,126,127,128,129,131,133,134,135,136,137,139,140,141,143,144,160,168,169,170,171,172,174,175,176,177,178,180,181,182,185,186,187,188,189,190,191,195,198,203,204,205,214,215,216,218,219,220,235,236,237,243,244,247,248,250,257,259,],[83,-22,-87,-79,-85,-88,-74,83,83,-39,83,83,-40,83,83,-83,-91,-93,-92,-95,-94,83,-138,-22,83,-138,181,-22,-22,-22,-22,-22,-22,-22,83,-96,-98,-97,-100,-99,-22,-78,-82,-22,83,-86,-22,-22,83,83,83,83,83,83,83,83,83,-130,83,-138,-84,83,83,-126,83,83,-131,83,-133,-81,-80,-22,83,-129,83,-132,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'seen_iconst':([125,],[170,]),'constant':([81,],[122,]),'localdirective':([40,70,],[64,64,]),'assignfunccallB':([67,],[108,]),'assignfunccall':([40,70,],[50,50,]),'paramsOpt':([117,],[162,]),'assignB':([67,],[110,]),'expB':([135,],[183,]),'sign':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,248,257,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'localvardirective':([40,70,],[55,55,]),'push_operator':([79,131,136,137,139,140,141,143,144,174,177,181,182,247,],[120,178,185,186,187,188,189,190,191,215,216,219,220,257,]),'seen_term':([92,],[135,]),'dimensionsB':([205,],[235,]),'push_operand':([45,153,],[75,197,]),'dimensionsOpt':([67,75,134,197,],[112,118,180,230,]),'forloop':([40,70,],[59,59,]),'seen_ID':([91,],[134,]),'funccallC':([156,179,234,],[202,218,250,]),'dimensions':([67,75,134,197,],[107,107,107,107,]),'optionsyesno':([11,],[28,]),'expressionB':([93,],[138,]),'funcsOpt':([13,30,39,],[31,37,48,]),'localvardirectiveB':([54,],[101,]),'configdirective':([0,3,],[3,3,]),'hyperexpression':([49,96,97,109,111,114,120,128,133,160,178,195,198,204,236,248,257,],[85,147,149,157,159,161,167,173,157,206,217,149,231,157,251,258,262,]),'seen_parentheses':([82,],[128,]),'hyperexpressionB':([89,],[130,]),'program':([0,],[5,]),'params':([117,210,],[163,239,]),'factor':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,248,257,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'input':([40,70,],[57,57,]),'main':([31,],[39,]),'type':([6,19,33,40,70,117,210,],[16,16,44,16,16,165,165,]),'empty':([0,3,6,13,19,30,39,40,49,67,70,75,89,93,94,96,97,109,111,114,117,120,128,129,133,134,135,155,160,163,178,185,186,187,188,189,190,191,195,197,198,204,205,215,216,219,220,232,236,238,239,248,257,],[7,7,20,34,20,34,34,58,87,113,58,113,132,142,146,87,87,158,87,87,164,87,87,176,158,113,184,201,87,211,87,87,87,87,87,87,87,87,87,113,87,158,237,87,87,87,87,201,87,254,211,87,87,]),'body':([6,],[12,]),'whileloop':([40,70,],[53,53,]),'return':([40,70,],[60,60,]),'superexpressionB':([94,],[145,]),'funccall':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,248,257,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'funccallB':([109,133,204,],[156,179,234,]),'seen_fconst':([123,],[168,]),'instructionsOpt':([40,70,],[62,115,]),'else':([238,],[253,]),'superexpression':([49,96,97,109,111,114,120,128,133,160,178,191,195,198,204,236,248,257,],[89,89,89,89,89,89,89,89,89,89,89,227,89,89,89,89,89,89,]),'paramsB':([163,239,],[209,255,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,70,],[19,19,65,65,]),'returntype':([33,],[43,]),'seen_factor':([86,],[129,]),'declarationB':([35,76,240,],[46,119,256,]),'declarationC':([46,119,256,],[78,166,261,]),'declarationD':([213,],[242,]),'quadruple_assign':([167,262,],[213,264,]),'condition':([40,70,],[68,68,]),'suprafunc':([13,30,39,],[30,30,30,]),'declarationsOpt':([6,19,],[13,36,]),'term':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,248,257,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,243,244,92,92,92,92,92,]),'seen_false':([126,],[171,]),'signB':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,215,216,219,220,236,248,257,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'config':([0,3,],[6,10,]),'push_type':([16,],[35,]),'instruction':([40,70,],[70,70,]),'assign':([104,],[154,]),'inputB':([155,232,],[200,249,]),'localmsgdirective':([40,70,],[71,71,]),'localdecisiondirective':([40,70,],[72,72,]),'termB':([129,],[175,]),'exp':([49,96,97,109,111,114,120,128,133,160,178,185,186,187,188,189,190,191,195,198,204,219,220,236,248,257,],[93,93,93,93,93,93,93,93,93,93,93,221,222,223,224,225,226,93,93,93,93,245,246,93,93,93,]),'seen_true':([127,],[172,]),'outputB':([97,195,],[150,229,]),'output':([40,70,],[73,73,]),'seen_sconst':([124,],[169,]),'expression':([49,96,97,109,111,114,120,128,133,160,178,191,195,198,204,236,248,257,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'options':([8,9,],[25,26,]),'block':([32,80,192,207,252,263,],[41,121,228,238,260,265,]),'outputC':([148,149,],[194,196,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',58),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',76),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',82),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',86),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',90),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',102),
  ('declarationC -> , declarationB declarationC','declarationC',3,'p_declarationC','parser.py',103),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',104),
  ('declarationD -> , declarationB declarationC','declarationD',3,'p_declarationD','parser.py',112),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',113),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',117),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',121),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',126),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',137),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',138),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',142),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',145),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',146),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',150),
  ('assignB -> dimensionsOpt = hyperexpression','assignB',3,'p_assignB','parser.py',157),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',160),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',161),
  ('condition -> IF ( hyperexpression ) block else','condition',6,'p_condition','parser.py',167),
  ('else -> ELSE block','else',2,'p_else','parser.py',171),
  ('else -> empty','else',1,'p_else','parser.py',172),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',176),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',177),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',178),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',179),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',180),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',181),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',182),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',183),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',184),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',189),
  ('assignfunccallB -> ( funccallB funccallC','assignfunccallB',3,'p_assignfunccallB','parser.py',208),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',209),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',214),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',215),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',216),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',220),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',223),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',224),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',232),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',235),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',236),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',244),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',248),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',249),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',250),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',251),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',252),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',253),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',254),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',263),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',266),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',273),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',274),
  ('expB -> empty','expB',1,'p_expB','parser.py',275),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',279),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',282),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',288),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',289),
  ('termB -> empty','termB',1,'p_termB','parser.py',290),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',296),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',297),
  ('factor -> funccall','factor',1,'p_factor','parser.py',298),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',299),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',309),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',313),
  ('signB -> sign','signB',1,'p_signB','parser.py',324),
  ('signB -> empty','signB',1,'p_signB','parser.py',325),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',330),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',335),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',340),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',345),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',350),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',355),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',356),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',357),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',358),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',359),
  ('sign -> +','sign',1,'p_sign','parser.py',371),
  ('sign -> -','sign',1,'p_sign','parser.py',372),
  ('whileloop -> WHILE ( hyperexpression ) block','whileloop',5,'p_whileloop','parser.py',377),
  ('type -> INT','type',1,'p_type','parser.py',381),
  ('type -> FLOAT','type',1,'p_type','parser.py',382),
  ('type -> STRING','type',1,'p_type','parser.py',383),
  ('type -> BOOL','type',1,'p_type','parser.py',384),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',390),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',391),
  ('forloop -> FOR ( assign ; hyperexpression ; hyperexpression ) block','forloop',9,'p_forloop','parser.py',396),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',400),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',403),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',404),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',407),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',410),
  ('outputB -> hyperexpression outputC','outputB',2,'p_outputB','parser.py',411),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',414),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',415),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',419),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',422),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',423),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',427),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',431),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',432),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',433),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',437),
  ('funccallB -> hyperexpression','funccallB',1,'p_funccallB','parser.py',449),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',450),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',455),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',456),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',460),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',464),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',465),
  ('return -> RETURN hyperexpression','return',2,'p_return','parser.py',470),
  ('params -> type ID','params',2,'p_params','parser.py',474),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',483),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',484),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',487),
]
