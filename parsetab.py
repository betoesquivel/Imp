
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'l)\xb6\xcf\x93\xa4G\xd4\xca\xba\x17\xc5E\xbf\x95\x9a'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[49,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,49,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,133,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[51,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,51,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'/':([86,88,91,112,115,119,120,121,122,123,124,126,131,165,166,167,168,169,179,207,210,214,215,240,242,263,271,],[-84,-90,-93,-40,-41,-88,-96,-98,-97,-100,-99,174,-151,-101,-103,-102,-105,-104,-91,-151,-89,-138,-143,-144,-146,-142,-145,]),'PRINT':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[52,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,52,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,136,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'TRUE':([49,79,81,82,83,84,87,90,97,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[-151,-23,124,-92,-106,-107,-95,-94,-151,-151,-151,-151,-151,-23,-151,-23,-23,-23,-23,-23,-23,-23,-151,-58,-23,-23,-151,-95,-23,-23,-151,-151,-151,-151,-151,-151,-151,-109,-151,-23,-151,-151,-151,-151,-151,-151,-151,-151,-151,-23,-151,-151,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,140,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,118,208,244,245,278,],[-151,-151,-151,-3,-2,33,-151,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-31,-27,-18,-35,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[-151,-23,120,-92,-106,-107,-95,-94,-151,-151,-151,-151,-151,-23,-151,-23,-23,-23,-23,-23,-23,-23,-151,-58,-23,-23,-151,-95,-23,-23,-151,-151,-151,-151,-151,-151,-151,-109,-151,-23,-151,-151,-151,-151,-151,-151,-151,-151,-151,-23,-151,-151,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,126,127,129,130,131,132,135,139,142,143,145,146,152,154,157,158,159,160,165,166,167,168,169,170,172,173,176,177,178,179,182,183,191,192,193,197,198,199,201,203,205,206,207,210,213,214,215,216,217,220,221,222,223,224,225,226,228,234,236,239,240,242,246,247,248,249,250,256,260,263,271,280,282,],[80,-84,-90,-151,-93,-79,-151,-151,-151,-40,-41,-88,-96,-98,-97,-100,-99,-151,-64,-66,-151,-151,-151,-70,-77,-67,-69,-20,-128,-151,-58,-45,202,-151,-34,-101,-103,-102,-105,-104,210,-83,-87,215,-141,-140,-91,-78,-82,227,-128,229,235,-124,-151,238,-33,-150,-148,-151,-89,-65,-138,-143,-151,-139,-76,-75,-73,-74,-71,-72,-68,229,-151,215,-151,-144,-146,-86,-85,215,-81,-80,-123,-149,-142,-145,-120,283,]),'(':([38,49,51,52,62,67,68,70,74,79,82,91,96,97,107,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[47,82,-109,97,104,106,-20,108,111,-23,-92,130,144,82,154,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,82,-58,-23,-23,82,-23,-23,82,82,82,82,82,82,82,-109,82,-23,82,82,82,82,82,82,82,82,82,-23,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,126,131,165,166,167,168,169,179,207,210,214,215,240,242,263,271,],[-84,-90,-93,-40,-41,-88,-96,-98,-97,-100,-99,171,-151,-101,-103,-102,-105,-104,-91,-151,-89,-138,-143,-144,-146,-142,-145,]),'-':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,126,128,130,131,132,133,134,136,137,138,140,141,144,154,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,195,199,200,207,210,211,212,214,215,216,218,219,230,233,237,240,241,242,246,247,254,263,265,271,275,],[84,-23,-92,-84,-90,-93,-79,84,84,-40,84,-41,84,-88,-96,-98,-97,-100,-99,84,-151,-23,84,-151,181,-23,-23,-23,-23,-23,-23,-23,84,-58,-101,-103,-102,-105,-104,-23,-83,-87,-23,84,-91,-23,-23,84,84,84,84,84,84,84,-109,84,-23,-151,-89,84,84,-138,-143,84,84,84,84,84,84,-144,84,-146,-86,-85,-23,-142,84,-145,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,129,130,131,132,135,139,142,143,145,146,152,154,159,163,164,165,166,167,168,169,172,173,176,177,178,179,182,183,192,193,199,206,207,209,210,213,214,215,216,217,220,221,222,223,224,225,226,228,234,236,239,240,242,246,247,248,249,250,263,271,272,],[-20,76,-151,-84,-90,-151,-93,-79,-151,-151,-40,-19,-41,-88,-96,-98,-97,-100,-99,-151,-64,-66,-151,-151,-151,-70,-77,-67,-69,-20,-128,196,-58,204,76,-24,-101,-103,-102,-105,-104,-83,-87,216,-141,-140,-91,-78,-82,-128,230,-151,-148,-151,243,-89,-65,-138,-143,-151,-139,-76,-75,-73,-74,-71,-72,-68,230,196,216,204,-144,-146,-86,-85,216,-81,-80,-142,-145,76,]),'SCONST':([49,79,81,82,83,84,87,90,97,99,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[-151,-23,121,-92,-106,-107,-95,-94,145,148,-151,-151,-151,-151,-23,-151,-23,-23,-23,-23,-23,-23,-23,-151,-58,-23,-23,-151,-95,-23,-23,-151,-151,-151,-151,-151,-151,-151,-109,-151,-23,-151,-151,-151,-151,-151,145,-151,-151,-151,-23,-151,-151,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,57,59,60,64,65,66,69,71,72,76,77,78,79,82,95,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,128,130,133,134,136,137,138,140,141,144,148,149,154,161,171,174,175,180,181,184,185,186,187,188,189,190,195,196,199,200,208,211,212,216,218,219,230,233,237,241,243,244,245,254,259,262,264,265,269,270,273,275,277,278,281,284,285,],[-114,-112,-21,-113,-115,45,68,-116,74,-117,91,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,68,-62,-22,-27,-18,-23,-92,-48,91,-133,-132,149,-51,-50,150,-35,152,91,-49,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,91,-134,-131,-58,206,-23,-23,91,-23,-23,91,91,91,91,91,91,91,-109,234,91,-23,-26,91,91,91,91,91,91,91,91,91,-22,-29,-25,-23,-151,45,-111,91,-44,-47,-108,91,-42,-28,-43,-121,-118,]),'TRACKDECISION':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[57,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,57,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),';':([45,46,50,58,61,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,129,131,132,135,139,142,143,147,151,153,155,163,164,165,166,167,168,169,172,173,179,182,183,207,209,210,213,214,215,220,221,222,223,224,225,226,229,231,235,240,242,246,247,249,250,252,253,255,257,258,263,266,267,271,272,274,279,],[-20,77,95,102,103,110,-151,-147,-84,-90,-151,-93,-79,-151,-151,-40,-19,-41,-88,-96,-98,-97,-100,-99,-151,-64,-66,-151,-151,-70,-77,-67,-69,-125,195,-57,-60,77,-24,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,244,-89,-65,-138,-143,-76,-75,-73,-74,-71,-72,-68,-129,-127,-122,-144,-146,-86,-85,-81,-80,-126,-130,-119,-59,-24,-142,275,-39,-145,77,-24,-38,]),'=':([1,2,4,45,46,68,75,107,112,114,115,150,156,163,194,207,232,240,242,271,272,],[8,9,11,-20,79,-20,-151,-151,-40,-19,-41,-20,200,79,-151,-151,254,-144,-146,-145,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,138,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'$end':([5,12,30,34,37,39,41,48,105,118,],[0,-1,-151,-15,-14,-151,-31,-13,-35,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,111,148,149,204,208,244,245,259,264,269,270,273,277,278,281,284,285,],[-151,-151,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,14,-62,-27,-18,-48,-51,-50,-35,-49,14,-134,-131,14,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'FOR':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[62,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,62,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[54,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,54,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'ELSE':([105,259,],[-35,268,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[64,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,64,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'ICONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[-151,-23,122,-92,-106,-107,-95,-94,-151,-151,-151,-151,-151,-23,-151,-23,-23,-23,-23,-23,-23,-23,-151,-58,-23,-23,-151,-95,-23,-23,-151,-151,-151,-151,-151,-151,-151,-109,-151,-23,-151,-151,-151,-151,-151,-151,-151,-151,-151,-23,-151,-151,]),'INPUT':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[67,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,67,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'[':([45,68,75,91,107,131,150,194,207,],[-20,-20,113,-93,113,113,-20,113,241,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,126,127,129,131,132,135,139,142,143,162,165,166,167,168,169,172,173,179,182,183,207,210,213,214,215,220,221,222,223,224,225,226,240,242,246,247,249,250,261,263,271,],[-84,-90,-151,-93,-79,-151,-151,-40,-41,-88,-96,-98,-97,-100,-99,-151,-64,-66,-151,-151,-70,-77,-67,-69,207,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-65,-138,-143,-76,-75,-73,-74,-71,-72,-68,-144,-146,-86,-85,-81,-80,271,-142,-145,]),'YES':([11,],[27,]),'IF':([40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[70,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,70,-62,-27,-18,-48,-51,-50,-35,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,126,131,132,135,139,165,166,167,168,169,172,173,179,182,183,207,210,214,215,220,221,222,223,224,225,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,-151,141,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-70,-77,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-76,-75,-73,-74,-71,-72,-144,-146,-86,-85,-81,-80,-142,-145,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,97,108,113,117,125,128,130,133,134,136,137,138,140,141,144,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,218,219,230,233,237,241,254,265,275,],[-151,-23,123,-92,-106,-107,-95,-94,-151,-151,-151,-151,-151,-23,-151,-23,-23,-23,-23,-23,-23,-23,-151,-58,-23,-23,-151,-95,-23,-23,-151,-151,-151,-151,-151,-151,-151,-109,-151,-23,-151,-151,-151,-151,-151,-151,-151,-151,-151,-23,-151,-151,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,111,148,149,204,208,244,245,259,264,269,270,273,277,278,281,284,285,],[-151,-151,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,15,-62,-27,-18,-48,-51,-50,-35,-49,15,-134,-131,15,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,137,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,240,242,246,247,249,250,263,271,],[-84,-90,-93,-79,134,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-144,-146,-86,-85,-81,-80,-142,-145,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,111,148,149,204,208,244,245,259,264,269,270,273,277,278,281,284,285,],[-151,-151,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,17,-62,-27,-18,-48,-51,-50,-35,-49,17,-134,-131,17,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,126,131,132,135,139,142,143,165,166,167,168,169,172,173,179,182,183,207,210,214,215,220,221,222,223,224,225,226,240,242,246,247,249,250,263,271,],[-84,-90,128,-93,-79,-151,-151,-40,-41,-88,-96,-98,-97,-100,-99,-151,-151,-151,-70,-77,-67,-69,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-151,-89,-138,-143,-76,-75,-73,-74,-71,-72,-68,-144,-146,-86,-85,-81,-80,-142,-145,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,59,60,64,65,66,69,71,72,77,78,95,102,103,105,110,111,148,149,204,208,244,245,259,264,269,270,273,277,278,281,284,285,],[-151,-151,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-54,-61,-63,-135,-137,-55,-136,-56,-52,-53,18,-62,-27,-18,-48,-51,-50,-35,-49,18,-134,-131,18,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'{':([32,80,202,227,238,251,268,276,283,],[40,40,-32,-110,40,40,-46,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,208,244,245,278,],[-151,-151,-151,-3,-2,-151,-151,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-151,38,-15,-16,-14,-31,-27,-18,-35,-26,-29,-25,-28,]),'}':([40,53,55,56,57,59,60,63,64,65,66,69,71,72,77,78,95,102,103,105,109,110,148,149,208,244,245,259,264,269,270,273,277,278,281,284,285,],[-151,-54,-61,-63,-135,-37,-55,105,-136,-56,-52,-53,-151,-62,-27,-18,-48,-51,-50,-35,-36,-49,-134,-131,-26,-29,-25,-151,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'+':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,126,128,130,131,132,133,134,136,137,138,140,141,144,154,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,195,199,200,207,210,211,212,214,215,216,218,219,230,233,237,240,241,242,246,247,254,263,265,271,275,],[83,-23,-92,-84,-90,-93,-79,83,83,-40,83,-41,83,-88,-96,-98,-97,-100,-99,83,-151,-23,83,-151,180,-23,-23,-23,-23,-23,-23,-23,83,-58,-101,-103,-102,-105,-104,-23,-83,-87,-23,83,-91,-23,-23,83,83,83,83,83,83,83,-109,83,-23,-151,-89,83,83,-138,-143,83,83,83,83,83,83,-144,83,-146,-86,-85,-23,-142,83,-145,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[158,]),'superexpressionB':([94,],[142,]),'while_quadruple':([227,],[251,]),'seen_term':([92,],[132,]),'for_quadruple':([255,],[266,]),'forloop':([40,71,],[60,60,]),'seen_iconst':([122,],[167,]),'signB':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,211,212,216,218,219,230,233,237,241,265,275,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([270,],[277,]),'expressionB':([93,],[135,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,128,133,134,136,137,138,140,141,171,174,180,181,200,254,],[117,175,184,185,186,187,188,189,190,211,212,218,219,237,265,]),'program':([0,],[5,]),'factor':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,211,212,216,218,219,230,233,237,241,265,275,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'input':([40,71,],[58,58,]),'main':([31,],[39,]),'return':([40,71,],[61,61,]),'paramsB':([159,239,],[203,260,]),'localdirective':([40,71,],[65,65,]),'quadruple_assign':([164,258,274,],[209,267,279,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,211,212,216,218,219,230,233,237,241,265,275,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,246,247,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([51,195,],[96,233,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[166,]),'assignfunccallB':([107,],[153,]),'sign':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,211,212,216,218,219,230,233,237,241,265,275,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'funccallC':([176,236,248,],[214,257,263,]),'funccallB':([130,199,216,],[176,236,248,]),'dimensions':([75,107,131,194,],[112,112,112,112,]),'condition_quadruple':([157,],[201,]),'hyperexpression':([49,97,108,113,117,125,130,144,175,199,216,230,233,237,241,265,275,],[85,146,157,162,164,170,177,191,213,177,177,146,255,258,261,274,280,]),'seen_param':([177,],[217,]),'body':([6,],[12,]),'whileloop':([40,71,],[53,53,]),'superexpression':([49,97,108,113,117,125,130,144,175,190,199,216,230,233,237,241,265,275,],[89,89,89,89,89,89,89,89,89,226,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[50,50,]),'seen_factor':([86,],[126,]),'seen_true':([124,],[169,]),'repush_type':([76,243,],[116,262,]),'localmsgdirective':([40,71,],[56,56,]),'termB':([126,],[172,]),'expression':([49,97,108,113,117,125,130,144,175,190,199,216,230,233,237,241,265,275,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([104,],[151,]),'block':([32,80,238,251,276,283,],[41,118,259,264,281,284,]),'configdirective':([0,3,],[3,3,]),'dimensionsB':([207,],[240,]),'print_quadruple':([146,192,],[193,228,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([54,],[101,]),'localvardirective':([40,71,],[55,55,]),'seen_parentheses':([82,],[125,]),'options':([8,9,],[25,26,]),'params':([111,204,],[159,239,]),'type':([6,19,33,40,71,111,204,],[16,16,44,16,16,161,161,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,97,107,108,111,113,117,125,126,130,131,132,144,152,159,175,184,185,186,187,188,189,190,194,199,207,211,212,216,218,219,230,233,234,237,239,241,259,265,275,],[7,7,20,34,20,34,34,59,87,59,115,129,139,143,87,115,87,160,87,87,87,173,178,115,183,87,198,205,87,87,87,87,87,87,87,87,115,178,242,87,87,178,87,87,87,87,198,87,205,87,269,87,87,]),'for_expression':([280,],[282,]),'else':([259,],[270,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,66,66,]),'expB':([132,],[182,]),'declarationB':([35,116,262,],[46,163,272,]),'declarationC':([46,163,272,],[78,208,278,]),'declarationD':([209,],[245,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([154,],[199,]),'outputB':([97,230,],[147,253,]),'outputC':([193,228,],[231,252,]),'constant':([81,],[119,]),'push_operand':([45,68,145,150,],[75,107,192,194,]),'dimensionsOpt':([75,107,131,194,],[114,156,179,232,]),'seen_ID':([91,],[131,]),'hyperexpressionB':([89,],[127,]),'config':([0,3,],[6,10,]),'funccall':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,211,212,216,218,219,230,233,237,241,265,275,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[63,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[165,]),'seen_false':([123,],[168,]),'elsecondition_quadruple':([268,],[276,]),'inputB':([152,234,],[197,256,]),'endfor_quadruple':([284,],[285,]),'assignB':([107,],[155,]),'exp':([49,97,108,113,117,125,130,144,175,184,185,186,187,188,189,190,199,216,218,219,230,233,237,241,265,275,],[93,93,93,93,93,93,93,93,93,220,221,222,223,224,225,93,93,93,249,250,93,93,93,93,93,93,]),'endwhile_quadruple':([264,],[273,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',58),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',77),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',84),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',88),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',93),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',97),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',115),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',116),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',117),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',125),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',126),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',130),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',134),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',139),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',151),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',152),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',156),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',159),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',160),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',164),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',171),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',174),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',175),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',181),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',185),
  ('else -> empty','else',1,'p_else','parser.py',186),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',189),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',200),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',209),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',219),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',220),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',221),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',222),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',223),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',224),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',225),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',226),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',227),
  ('assignfunccall -> ID push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',232),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',249),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',255),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',256),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',261),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',262),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',263),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',267),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',270),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',271),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',279),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',282),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',283),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',291),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',295),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',296),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',297),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',298),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',299),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',300),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',301),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',310),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',313),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',320),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',321),
  ('expB -> empty','expB',1,'p_expB','parser.py',322),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',326),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',329),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',335),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',336),
  ('termB -> empty','termB',1,'p_termB','parser.py',337),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',343),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',344),
  ('factor -> funccall','factor',1,'p_factor','parser.py',345),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',346),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',356),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',360),
  ('signB -> sign','signB',1,'p_signB','parser.py',371),
  ('signB -> empty','signB',1,'p_signB','parser.py',372),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',377),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',382),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',387),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',392),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',397),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',402),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',403),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',404),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',405),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',406),
  ('sign -> +','sign',1,'p_sign','parser.py',418),
  ('sign -> -','sign',1,'p_sign','parser.py',419),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',424),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',427),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',431),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',442),
  ('type -> INT','type',1,'p_type','parser.py',453),
  ('type -> FLOAT','type',1,'p_type','parser.py',454),
  ('type -> STRING','type',1,'p_type','parser.py',455),
  ('type -> BOOL','type',1,'p_type','parser.py',456),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',462),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',463),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',468),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',472),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',484),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',495),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',505),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',508),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',509),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',512),
  ('outputB -> SCONST push_operand print_quadruple outputC','outputB',4,'p_outputB','parser.py',515),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',516),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',519),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',526),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',527),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',531),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',534),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',535),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',539),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',543),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',544),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',545),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',549),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',561),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',562),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',565),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',569),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',570),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',574),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',578),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',579),
  ('return -> RETURN hyperexpression','return',2,'p_return','parser.py',584),
  ('params -> type ID','params',2,'p_params','parser.py',588),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',597),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',598),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',601),
]
