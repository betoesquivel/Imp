
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xaa\xe6\xc4\xf3F\xd3\x014\xcc\x8a\xd2\xd9\xb1\xf1}\x15'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[49,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,49,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,134,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'READ':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[50,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,50,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[52,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,52,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,132,167,168,169,170,171,181,207,210,214,215,239,241,264,274,],[-84,-90,-93,-40,-41,-88,-96,-98,-97,-100,-99,176,-154,-101,-103,-102,-105,-104,-91,-154,-89,-140,-145,-146,-148,-144,-147,]),'PRINT':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[53,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,53,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,137,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'TRUE':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,180,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[-154,-23,124,-92,-106,-107,-95,-94,-154,-154,-154,-154,-154,-23,-154,-23,-23,-23,-23,-23,-23,-23,-154,-58,-23,-23,-154,-95,-23,-23,-154,-154,-154,-154,-154,-154,-154,-109,-154,-23,-154,-154,-154,-154,-154,-154,-154,-154,-154,-23,-154,-154,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,141,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,106,118,208,243,244,282,],[-154,-154,-154,-3,-2,33,-154,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-31,-27,-18,-35,-30,-26,-29,-25,-28,]),'FORGET':([55,],[99,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,180,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[-154,-23,120,-92,-106,-107,-95,-94,-154,-154,-154,-154,-154,-23,-154,-23,-23,-23,-23,-23,-23,-23,-154,-58,-23,-23,-154,-95,-23,-23,-154,-154,-154,-154,-154,-154,-154,-109,-154,-23,-154,-154,-154,-154,-154,-154,-154,-154,-154,-23,-154,-154,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,156,159,160,161,162,167,168,169,170,171,172,174,175,178,179,180,181,184,185,193,194,195,196,199,201,203,205,206,207,210,213,214,215,216,217,220,221,222,223,224,225,226,227,229,235,238,239,241,245,246,247,248,249,250,252,261,264,266,274,276,283,285,287,288,],[80,-84,-90,-154,-93,-79,-154,-154,-154,-40,-41,-88,-96,-98,-97,-100,-99,-154,-64,-66,-154,-154,-154,-70,-77,-67,-69,-20,-123,-20,-130,-58,-45,202,-154,-34,-101,-103,-102,-105,-104,210,-83,-87,215,-143,-142,-91,-78,-82,-124,228,-130,230,-154,237,-33,-153,-151,-154,-89,-65,-140,-145,-154,-141,-76,-75,-73,-74,-71,-72,-68,-154,230,215,-154,-146,-148,-86,-85,215,-81,-80,265,-126,-152,-144,-20,-147,-124,-154,-120,-125,289,]),'(':([38,49,50,52,53,62,68,70,74,79,82,91,97,98,107,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[47,82,95,-109,98,104,-20,108,111,-23,-92,131,147,82,156,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,82,-58,-23,-23,82,-23,-23,82,82,82,82,82,82,82,-109,82,-23,82,82,82,82,82,82,82,82,82,-23,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,132,167,168,169,170,171,181,207,210,214,215,239,241,264,274,],[-84,-90,-93,-40,-41,-88,-96,-98,-97,-100,-99,173,-154,-101,-103,-102,-105,-104,-91,-154,-89,-140,-145,-146,-148,-144,-147,]),'-':([49,79,82,86,88,91,92,98,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,156,167,168,169,170,171,173,174,175,176,177,181,182,183,186,187,188,189,190,191,192,198,199,200,207,210,211,212,214,215,216,218,219,231,234,236,239,240,241,245,246,256,264,268,274,279,],[84,-23,-92,-84,-90,-93,-79,84,84,-40,84,-41,84,-88,-96,-98,-97,-100,-99,84,-154,-23,84,-154,183,-23,-23,-23,-23,-23,-23,-23,84,-58,-101,-103,-102,-105,-104,-23,-83,-87,-23,84,-91,-23,-23,84,84,84,84,84,84,84,-109,84,-23,-154,-89,84,84,-140,-145,84,84,84,84,84,84,-146,84,-148,-86,-85,-23,-144,84,-147,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,156,161,165,166,167,168,169,170,171,174,175,178,179,180,181,184,185,193,195,196,199,206,207,209,210,213,214,215,216,217,220,221,222,223,224,225,226,227,229,235,238,239,241,245,246,247,248,249,264,266,274,275,276,283,],[-20,76,-154,-84,-90,-154,-93,-79,-154,-154,-40,-19,-41,-88,-96,-98,-97,-100,-99,-154,-64,-66,-154,-154,-154,-70,-77,-67,-69,-20,-123,-20,-130,-58,204,76,-24,-101,-103,-102,-105,-104,-83,-87,216,-143,-142,-91,-78,-82,-124,-130,231,-154,-151,-154,242,-89,-65,-140,-145,-154,-141,-76,-75,-73,-74,-71,-72,-68,251,231,216,204,-146,-148,-86,-85,216,-81,-80,-144,-20,-147,76,-124,251,]),'SCONST':([49,79,81,82,83,84,87,90,98,100,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,180,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[-154,-23,121,-92,-106,-107,-95,-94,148,151,-154,-154,-154,-154,-23,-154,-23,-23,-23,-23,-23,-23,-23,-154,-58,-23,-23,-154,-95,-23,-23,-154,-154,-154,-154,-154,-154,-154,-109,-154,-23,-154,-154,-154,-154,-154,148,-154,-154,-154,-23,-154,-154,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,54,56,57,58,59,60,65,66,67,69,71,72,76,77,78,79,82,95,96,98,99,101,102,103,104,105,106,108,110,113,116,117,125,129,131,134,135,137,138,139,141,142,147,151,152,156,163,173,176,177,182,183,186,187,188,189,190,191,192,198,199,200,208,211,212,216,218,219,231,234,236,240,242,243,244,251,256,260,263,267,268,272,273,277,279,281,282,286,290,291,],[-114,-112,-21,-113,-115,45,68,-116,74,-117,91,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,68,-62,-22,-27,-18,-23,-92,146,-48,91,-135,-134,152,-50,153,-51,-35,91,-49,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,91,-136,-133,-58,206,-23,-23,91,-23,-23,91,91,91,91,91,91,91,-109,91,-23,-26,91,91,91,91,91,91,91,91,91,-22,-29,-25,146,-23,-154,45,-111,91,-44,-47,-108,91,-42,-28,-43,-121,-118,]),'TRACKDECISION':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[57,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,57,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),';':([45,46,51,61,63,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,130,132,133,136,140,143,144,150,154,155,157,165,166,167,168,169,170,171,174,175,181,184,185,207,209,210,213,214,215,220,221,222,223,224,225,226,230,232,239,241,245,246,248,249,254,255,257,258,259,264,265,269,270,274,275,278,284,],[-20,77,96,103,105,110,-154,-150,-84,-90,-154,-93,-79,-154,-154,-40,-19,-41,-88,-96,-98,-97,-100,-99,-149,-154,-64,-66,-154,-154,-70,-77,-67,-69,-127,198,-57,-60,77,-24,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,243,-89,-65,-140,-145,-76,-75,-73,-74,-71,-72,-68,-131,-129,-146,-148,-86,-85,-81,-80,-128,-132,-119,-59,-24,-144,-122,279,-39,-147,77,-24,-38,]),'=':([1,2,4,45,46,68,75,107,112,114,115,153,158,165,197,207,233,239,241,274,275,],[8,9,11,-20,79,-20,-154,-154,-40,-19,-41,-20,200,79,-154,-154,256,-146,-148,-147,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,139,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'$end':([5,12,30,34,37,39,41,48,106,118,],[0,-1,-154,-15,-14,-154,-31,-13,-35,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,204,208,243,244,260,267,272,273,277,281,282,286,290,291,],[-154,-154,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,14,-62,-27,-18,-48,-50,-51,-35,-49,14,-136,-133,14,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'FOR':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[62,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,62,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'SHOW':([55,],[100,]),'#':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[55,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,55,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'ELSE':([106,260,],[-35,271,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[65,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,65,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'ICONST':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,180,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[-154,-23,122,-92,-106,-107,-95,-94,-154,-154,-154,-154,-154,-23,-154,-23,-23,-23,-23,-23,-23,-23,-154,-58,-23,-23,-154,-95,-23,-23,-154,-154,-154,-154,-154,-154,-154,-109,-154,-23,-154,-154,-154,-154,-154,-154,-154,-154,-154,-23,-154,-154,]),'[':([45,68,75,91,107,132,153,197,207,],[-20,-20,113,-93,113,113,-20,113,240,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,164,167,168,169,170,171,174,175,181,184,185,207,210,213,214,215,220,221,222,223,224,225,226,239,241,245,246,248,249,262,264,274,],[-84,-90,-154,-93,-79,-154,-154,-40,-41,-88,-96,-98,-97,-100,-99,-154,-64,-66,-154,-154,-70,-77,-67,-69,207,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-65,-140,-145,-76,-75,-73,-74,-71,-72,-68,-146,-148,-86,-85,-81,-80,274,-144,-147,]),'YES':([11,],[27,]),'IF':([40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[70,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,70,-62,-27,-18,-48,-50,-51,-35,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,167,168,169,170,171,174,175,181,184,185,207,210,214,215,220,221,222,223,224,225,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,-154,142,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-70,-77,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-76,-75,-73,-74,-71,-72,-146,-148,-86,-85,-81,-80,-144,-147,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,98,108,113,117,125,129,131,134,135,137,138,139,141,142,147,156,173,176,177,180,182,183,186,187,188,189,190,191,192,198,199,200,211,212,216,218,219,231,234,236,240,256,268,279,],[-154,-23,123,-92,-106,-107,-95,-94,-154,-154,-154,-154,-154,-23,-154,-23,-23,-23,-23,-23,-23,-23,-154,-58,-23,-23,-154,-95,-23,-23,-154,-154,-154,-154,-154,-154,-154,-109,-154,-23,-154,-154,-154,-154,-154,-154,-154,-154,-154,-23,-154,-154,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,204,208,243,244,260,267,272,273,277,281,282,286,290,291,],[-154,-154,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,15,-62,-27,-18,-48,-50,-51,-35,-49,15,-136,-133,15,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,138,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,167,168,169,170,171,174,175,181,184,185,207,210,214,215,239,241,245,246,248,249,264,274,],[-84,-90,-93,-79,135,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-146,-148,-86,-85,-81,-80,-144,-147,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,204,208,243,244,260,267,272,273,277,281,282,286,290,291,],[-154,-154,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,17,-62,-27,-18,-48,-50,-51,-35,-49,17,-136,-133,17,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,143,144,167,168,169,170,171,174,175,181,184,185,207,210,214,215,220,221,222,223,224,225,226,239,241,245,246,248,249,264,274,],[-84,-90,129,-93,-79,-154,-154,-40,-41,-88,-96,-98,-97,-100,-99,-154,-154,-154,-70,-77,-67,-69,-101,-103,-102,-105,-104,-83,-87,-91,-78,-82,-154,-89,-140,-145,-76,-75,-73,-74,-71,-72,-68,-146,-148,-86,-85,-81,-80,-144,-147,]),'TRACK':([55,],[101,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,54,56,57,58,59,60,65,66,67,69,71,72,77,78,96,103,105,106,110,111,151,152,204,208,243,244,260,267,272,273,277,281,282,286,290,291,],[-154,-154,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-54,-61,-137,-63,-139,-55,-138,-56,-52,-53,18,-62,-27,-18,-48,-50,-51,-35,-49,18,-136,-133,18,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'{':([32,80,202,228,237,253,271,280,289,],[40,40,-32,-110,40,40,-46,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,106,208,243,244,282,],[-154,-154,-154,-3,-2,-154,-154,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-154,38,-15,-16,-14,-31,-27,-18,-35,-26,-29,-25,-28,]),'}':([40,54,56,57,58,59,60,64,65,66,67,69,71,72,77,78,96,103,105,106,109,110,151,152,208,243,244,260,267,272,273,277,281,282,286,290,291,],[-154,-54,-61,-137,-63,-37,-55,106,-138,-56,-52,-53,-154,-62,-27,-18,-48,-50,-51,-35,-36,-49,-136,-133,-26,-29,-25,-154,-111,-44,-47,-108,-42,-28,-43,-121,-118,]),'+':([49,79,82,86,88,91,92,98,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,156,167,168,169,170,171,173,174,175,176,177,181,182,183,186,187,188,189,190,191,192,198,199,200,207,210,211,212,214,215,216,218,219,231,234,236,239,240,241,245,246,256,264,268,274,279,],[83,-23,-92,-84,-90,-93,-79,83,83,-40,83,-41,83,-88,-96,-98,-97,-100,-99,83,-154,-23,83,-154,182,-23,-23,-23,-23,-23,-23,-23,83,-58,-101,-103,-102,-105,-104,-23,-83,-87,-23,83,-91,-23,-23,83,83,83,83,83,83,83,-109,83,-23,-154,-89,83,83,-140,-145,83,83,83,83,83,83,-146,83,-148,-86,-85,-23,-144,83,-147,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[160,]),'superexpressionB':([94,],[143,]),'while_quadruple':([228,],[253,]),'seen_term':([92,],[133,]),'validate_id':([95,251,],[145,266,]),'for_quadruple':([257,],[269,]),'forloop':([40,71,],[60,60,]),'seen_iconst':([122,],[169,]),'signB':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,211,212,216,218,219,231,234,236,240,268,279,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([273,],[281,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,129,134,135,137,138,139,141,142,173,176,182,183,200,256,],[117,177,186,187,188,189,190,191,192,211,212,218,219,236,268,]),'program':([0,],[5,]),'factor':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,211,212,216,218,219,231,234,236,240,268,279,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[61,61,]),'read':([40,71,],[63,63,]),'paramsB':([161,238,],[203,261,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([166,259,278,],[209,270,284,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,211,212,216,218,219,231,234,236,240,268,279,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,245,246,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([52,198,],[97,234,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[168,]),'assignfunccallB':([107,],[155,]),'sign':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,211,212,216,218,219,231,234,236,240,268,279,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([178,235,247,],[214,258,264,]),'funccallB':([131,199,216,],[178,235,247,]),'dimensions':([75,107,132,197,],[112,112,112,112,]),'condition_quadruple':([159,],[201,]),'hyperexpression':([49,98,108,113,117,125,131,147,177,199,216,231,234,236,240,268,279,],[85,149,159,164,166,172,179,194,213,179,179,149,257,259,262,278,285,]),'seen_param':([179,],[217,]),'body':([6,],[12,]),'whileloop':([40,71,],[54,54,]),'superexpression':([49,98,108,113,117,125,131,147,177,192,199,216,231,234,236,240,268,279,],[89,89,89,89,89,89,89,89,89,226,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[51,51,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[171,]),'repush_type':([76,242,],[116,263,]),'localmsgdirective':([40,71,],[58,58,]),'termB':([127,],[174,]),'expression':([49,98,108,113,117,125,131,147,177,192,199,216,231,234,236,240,268,279,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([104,],[154,]),'block':([32,80,237,253,280,289,],[41,118,260,267,286,290,]),'read_quadruple':([193,276,],[227,283,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([149,195,],[196,229,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([55,],[102,]),'localvardirective':([40,71,],[56,56,]),'seen_parentheses':([82,],[125,]),'params':([111,204,],[161,238,]),'type':([6,19,33,40,71,111,204,],[16,16,44,16,16,163,163,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,98,107,108,111,113,117,125,127,131,132,133,147,161,177,186,187,188,189,190,191,192,197,199,207,211,212,216,218,219,227,231,234,236,238,240,260,268,279,283,],[7,7,20,34,20,34,34,59,87,59,115,130,140,144,87,115,87,162,87,87,87,175,180,115,185,87,205,87,87,87,87,87,87,87,87,115,180,241,87,87,180,87,87,252,87,87,87,205,87,272,87,87,252,]),'for_expression':([285,],[288,]),'else':([260,],[273,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([133,],[184,]),'declarationB':([35,116,263,],[46,165,275,]),'declarationC':([46,165,275,],[78,208,282,]),'declarationD':([209,],[244,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([156,],[199,]),'outputB':([98,231,],[150,255,]),'outputC':([196,229,],[232,254,]),'dimensionsB':([207,],[239,]),'push_operand':([45,68,145,148,153,266,],[75,107,193,195,197,276,]),'dimensionsOpt':([75,107,132,197,],[114,158,181,233,]),'readB':([227,283,],[250,287,]),'seen_ID':([91,],[132,]),'hyperexpressionB':([89,],[128,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([271,],[280,]),'funccall':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,211,212,216,218,219,231,234,236,240,268,279,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[64,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[167,]),'seen_false':([123,],[170,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([290,],[291,]),'assignB':([107,],[157,]),'exp':([49,98,108,113,117,125,131,147,177,186,187,188,189,190,191,192,199,216,218,219,231,234,236,240,268,279,],[93,93,93,93,93,93,93,93,93,220,221,222,223,224,225,93,93,93,248,249,93,93,93,93,93,93,]),'endwhile_quadruple':([267,],[277,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',58),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',77),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',84),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',88),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',93),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',97),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',115),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',116),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',117),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',125),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',126),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',130),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',134),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',139),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',151),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',152),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',156),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',159),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',160),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',164),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',171),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',174),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',175),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',181),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',185),
  ('else -> empty','else',1,'p_else','parser.py',186),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',189),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',201),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',210),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',220),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',221),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',222),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',223),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',224),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',225),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',226),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',227),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',228),
  ('assignfunccall -> ID push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',233),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',250),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',256),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',257),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',262),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',263),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',264),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',268),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',271),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',272),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',280),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',283),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',284),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',292),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',296),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',297),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',298),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',299),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',300),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',301),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',302),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',311),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',314),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',321),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',322),
  ('expB -> empty','expB',1,'p_expB','parser.py',323),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',327),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',330),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',336),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',337),
  ('termB -> empty','termB',1,'p_termB','parser.py',338),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',344),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',345),
  ('factor -> funccall','factor',1,'p_factor','parser.py',346),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',347),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',357),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',361),
  ('signB -> sign','signB',1,'p_signB','parser.py',372),
  ('signB -> empty','signB',1,'p_signB','parser.py',373),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',378),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',383),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',388),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',393),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',398),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',403),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',404),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',405),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',406),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',407),
  ('sign -> +','sign',1,'p_sign','parser.py',419),
  ('sign -> -','sign',1,'p_sign','parser.py',420),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',425),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',428),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',432),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',444),
  ('type -> INT','type',1,'p_type','parser.py',455),
  ('type -> FLOAT','type',1,'p_type','parser.py',456),
  ('type -> STRING','type',1,'p_type','parser.py',457),
  ('type -> BOOL','type',1,'p_type','parser.py',458),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',464),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',465),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',470),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',474),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',489),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',501),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',511),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',514),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',522),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',529),
  ('readB -> empty','readB',1,'p_readB','parser.py',530),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',533),
  ('outputB -> SCONST push_operand print_quadruple outputC','outputB',4,'p_outputB','parser.py',536),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',537),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',540),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',547),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',548),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',552),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',555),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',556),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',560),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',564),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',565),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',566),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',570),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',582),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',583),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',586),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',590),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',591),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',595),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',599),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',600),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',605),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',609),
  ('params -> type ID','params',2,'p_params','parser.py',628),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',637),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',638),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',641),
]
