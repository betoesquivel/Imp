
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd2\x1bIiJ\x08>C\x8b\xd9\xfe\x88\xccX\x8d_'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[122,-45,-51,-105,-107,-46,-106,-47,-44,122,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'VOID':([32,],[39,]),'SOME':([8,9,],[21,21,]),'WHILE':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[124,-45,-51,-105,-107,-46,-106,-47,-44,124,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'PRINT':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[125,-45,-51,-105,-107,-46,-106,-47,-44,125,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'{':([67,147,203,214,230,233,],[97,97,97,97,97,97,]),'TRUE':([44,49,53,55,56,57,58,60,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[-119,-119,-78,76,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'>':([43,45,59,61,63,64,65,72,73,74,75,76,80,81,83,86,87,90,107,108,109,110,112,113,150,151,185,186,188,216,],[-34,-35,-119,-76,-119,-119,92,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,116,-75,-72,-71,-113,-68,-67,-108,-110,-109,-112,-114,-111,]),'DEF':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,31,33,35,37,44,49,51,52,56,70,78,79,84,85,90,92,98,104,105,106,111,114,115,116,119,120,121,122,149,162,163,171,175,178,181,187,199,206,209,219,226,],[-119,-119,-119,-3,-2,32,-119,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,32,-18,-16,32,54,54,-22,-19,54,-21,54,54,54,54,54,54,-25,-20,-24,54,54,54,54,54,54,54,54,54,-23,54,54,-29,54,54,-26,54,54,54,54,54,54,]),'FORGET':([127,],[167,]),'NONE':([8,9,],[22,22,]),'FCONST':([44,49,53,55,56,57,58,60,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[-119,-119,-78,73,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'NO':([11,],[28,]),')':([43,45,46,59,61,63,64,65,66,68,72,73,74,75,76,77,80,81,83,86,87,88,91,94,96,99,100,101,106,107,108,109,110,112,113,117,118,148,150,151,152,154,155,156,157,158,159,175,182,183,185,186,188,189,190,191,197,200,202,211,212,215,216,221,224,227,231,],[-34,-35,67,-119,-76,-119,-119,-119,-119,-119,-83,-80,-81,-74,-82,107,-70,-73,-77,-66,-69,-58,-65,-54,-57,147,-28,-27,151,-75,-72,-71,-113,-68,-67,-59,-60,-119,-108,-110,186,-62,-63,-61,-64,-55,-56,151,-116,-118,-109,-112,-114,203,204,204,-119,214,186,222,-95,-119,-111,-119,-117,-94,233,]),'(':([36,44,48,49,56,71,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,124,125,134,139,140,142,162,163,175,178,187,199,206,209,219,226,],[46,56,68,56,56,106,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,162,163,170,173,175,178,56,56,56,56,56,56,56,56,56,56,]),'VARSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([43,45,59,61,63,72,73,74,75,76,83,107,110,150,151,185,186,188,216,],[-34,-35,78,-76,-119,-83,-80,-81,-74,-82,-77,-75,-113,-108,-110,-109,-112,-114,-111,]),'-':([43,44,45,49,56,59,61,63,64,72,73,74,75,76,78,79,80,81,83,84,85,90,92,106,107,108,109,110,111,114,115,116,119,120,121,122,150,151,162,163,175,178,185,186,187,188,199,206,209,216,219,226,],[-34,58,-35,58,58,-119,-76,-119,85,-83,-80,-81,-74,-82,58,58,-70,-73,-77,58,58,58,58,58,-75,-72,-71,-113,58,58,58,58,58,58,58,58,-108,-110,58,58,58,58,-109,-112,58,-114,58,58,58,-111,58,58,]),',':([34,42,43,45,59,61,63,64,65,66,69,72,73,74,75,76,80,81,83,86,87,88,91,94,96,107,108,109,110,112,113,117,118,148,150,151,152,154,155,156,157,158,159,185,186,188,190,191,197,202,215,216,221,],[-119,50,-34,-35,-119,-76,-119,-119,-119,-119,103,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-75,-72,-71,-113,-68,-67,-59,-60,184,-108,-110,187,-62,-63,-61,-64,-55,-56,-109,-112,-114,206,206,210,187,184,-111,210,]),'/':([43,45,59,61,63,72,73,74,75,76,83,107,110,150,151,185,186,188,216,],[-34,-35,79,-76,-119,-83,-80,-81,-74,-82,-77,-75,-113,-108,-110,-109,-112,-114,-111,]),'TRACKDECISION':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[129,-45,-51,-105,-107,-46,-106,-47,-44,129,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),';':([33,34,42,43,45,51,52,59,61,63,64,65,66,69,70,72,73,74,75,76,80,81,83,86,87,88,91,94,96,104,105,107,108,109,110,112,113,117,118,123,130,133,138,146,149,150,151,154,155,156,157,158,159,160,174,176,185,186,188,192,196,198,204,205,207,213,216,218,220,222,225,],[-18,-119,51,-34,-35,-22,-19,-119,-76,-119,-119,-119,-119,105,-21,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-20,-24,-75,-72,-71,-113,-68,-67,-59,-60,161,168,169,172,180,-23,-108,-110,-62,-63,-61,-64,-55,-56,-115,-48,-50,-109,-112,-114,-96,209,-49,-99,-97,-98,-33,-111,-100,226,-93,-32,]),'=':([1,2,4,34,42,43,45,59,61,63,64,65,72,73,74,75,76,80,81,83,86,87,89,90,92,107,108,109,110,112,113,140,150,151,177,185,186,188,195,208,216,],[8,9,11,-119,49,-34,-35,-119,-76,-119,-119,89,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,114,115,119,-75,-72,-71,-113,-68,-67,-119,-108,-110,199,-109,-112,-114,-119,219,-111,]),'<':([43,45,59,61,63,64,65,72,73,74,75,76,80,81,83,86,87,107,108,109,110,112,113,150,151,185,186,188,216,],[-34,-35,-119,-76,-119,-119,90,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-75,-72,-71,-113,-68,-67,-108,-110,-109,-112,-114,-111,]),'$end':([5,12,30,31,37,38,47,98,171,181,],[0,-1,-15,-119,-119,-14,-13,-25,-29,-26,]),'STRING':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,68,70,97,104,105,126,128,129,131,132,136,137,141,143,144,145,149,161,163,164,168,169,171,172,180,184,193,194,206,217,223,228,229,232,234,],[-119,-119,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,-18,-22,-19,14,-21,14,-20,-24,-45,-51,-105,-107,-46,-106,-47,-44,14,-53,-52,-23,-39,190,193,-41,-42,-29,-43,-40,14,-104,-101,190,-86,-119,-36,-38,-37,-92,]),'FOR':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[134,-45,-51,-105,-107,-46,-106,-47,-44,134,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'SHOW':([127,],[164,]),'#':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[127,-45,-51,-105,-107,-46,-106,-47,-44,127,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'ELSE':([171,223,],[-29,230,]),'MOST':([8,9,],[23,23,]),'FORGETDECISION':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[136,-45,-51,-105,-107,-46,-106,-47,-44,136,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'ICONST':([44,49,53,55,56,57,58,60,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[-119,-119,-78,74,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'INPUT':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[139,-45,-51,-105,-107,-46,-106,-47,-44,139,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'[':([34,63,82,140,195,],[44,44,111,44,44,]),']':([43,45,59,61,62,63,64,65,66,72,73,74,75,76,80,81,83,86,87,88,91,94,96,107,108,109,110,112,113,117,118,150,151,153,154,155,156,157,158,159,185,186,188,216,],[-34,-35,-119,-76,82,-119,-119,-119,-119,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-75,-72,-71,-113,-68,-67,-59,-60,-108,-110,188,-62,-63,-61,-64,-55,-56,-109,-112,-114,-111,]),'ID':([14,15,16,17,39,40,41,44,49,50,54,56,78,79,84,85,90,92,97,102,103,106,111,114,115,116,119,120,121,122,126,128,129,131,132,136,137,141,143,144,145,161,162,163,165,166,167,168,169,170,171,172,173,175,178,180,187,193,194,199,201,206,209,210,217,219,223,226,228,229,232,234,],[-89,-87,34,-88,-90,48,-91,63,63,34,71,63,63,63,63,63,63,63,140,148,34,63,63,63,63,63,63,63,63,63,-45,-51,-105,-107,-46,-106,-47,-44,140,-53,-52,-39,63,63,-102,194,-103,-41,-42,195,-29,-43,197,63,63,-40,63,-104,-101,63,215,63,63,221,-86,63,-119,63,-36,-38,-37,-92,]),'IF':([97,126,128,129,131,132,136,137,141,143,144,145,161,168,169,171,172,180,193,194,217,223,228,229,232,234,],[142,-45,-51,-105,-107,-46,-106,-47,-44,142,-53,-52,-39,-41,-42,-29,-43,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'&':([43,45,59,61,63,64,65,66,72,73,74,75,76,80,81,83,86,87,88,91,93,107,108,109,110,112,113,117,118,150,151,154,155,156,157,185,186,188,216,],[-34,-35,-119,-76,-119,-119,-119,93,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,120,-75,-72,-71,-113,-68,-67,-59,-60,-108,-110,-62,-63,-61,-64,-109,-112,-114,-111,]),'ALL':([8,9,],[20,20,]),'FALSE':([44,49,53,55,56,57,58,60,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[-119,-119,-78,72,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'INT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,68,70,97,104,105,126,128,129,131,132,136,137,141,143,144,145,149,161,168,169,171,172,180,184,193,194,217,223,228,229,232,234,],[-119,-119,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,-18,-22,-19,15,-21,15,-20,-24,-45,-51,-105,-107,-46,-106,-47,-44,15,-53,-52,-23,-39,-41,-42,-29,-43,-40,15,-104,-101,-86,-119,-36,-38,-37,-92,]),'FLOAT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,68,70,97,104,105,126,128,129,131,132,136,137,141,143,144,145,149,161,168,169,171,172,180,184,193,194,217,223,228,229,232,234,],[-119,-119,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,-18,-22,-19,17,-21,17,-20,-24,-45,-51,-105,-107,-46,-106,-47,-44,17,-53,-52,-23,-39,-41,-42,-29,-43,-40,17,-104,-101,-86,-119,-36,-38,-37,-92,]),'|':([43,45,59,61,63,64,65,66,72,73,74,75,76,80,81,83,86,87,88,91,95,107,108,109,110,112,113,117,118,150,151,154,155,156,157,185,186,188,216,],[-34,-35,-119,-76,-119,-119,-119,95,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,121,-75,-72,-71,-113,-68,-67,-59,-60,-108,-110,-62,-63,-61,-64,-109,-112,-114,-111,]),'TRACK':([127,],[165,]),'COMPLEXITYCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'YES':([11,],[26,]),'MAIN':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,35,38,51,52,70,104,105,149,171,181,],[-119,-119,-119,-3,-2,-119,-119,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,36,-15,-119,-18,-16,-14,-22,-19,-21,-20,-24,-23,-29,-26,]),'}':([97,126,128,129,131,132,135,136,137,141,143,144,145,161,168,169,171,172,179,180,193,194,217,223,228,229,232,234,],[-119,-45,-51,-105,-31,-46,171,-106,-47,-44,-119,-53,-52,-39,-41,-42,-29,-43,-30,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'+':([43,44,45,49,56,59,61,63,64,72,73,74,75,76,78,79,80,81,83,84,85,90,92,106,107,108,109,110,111,114,115,116,119,120,121,122,150,151,162,163,175,178,185,186,187,188,199,206,209,216,219,226,],[-34,57,-35,57,57,-119,-76,-119,84,-83,-80,-81,-74,-82,57,57,-70,-73,-77,57,57,57,57,57,-75,-72,-71,-113,57,57,57,57,57,57,57,57,-108,-110,57,57,57,57,-109,-112,57,-114,57,57,57,-111,57,57,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([55,],[75,]),'localdirective':([97,143,],[137,137,]),'assignfunccallB':([140,],[174,]),'assignfunccall':([97,143,],[123,123,]),'paramsOpt':([68,],[99,]),'assignB':([140,],[176,]),'sign':([44,49,56,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'localvardirective':([97,143,],[128,128,]),'dimensionsB':([82,],[110,]),'dimensionsOpt':([34,63,140,195,],[42,83,177,208,]),'whileloop':([97,143,],[126,126,]),'funccallB':([106,175,],[150,198,]),'funccallC':([152,202,],[185,216,]),'dimensions':([34,63,140,195,],[43,43,43,43,]),'optionsyesno':([11,],[27,]),'expressionB':([65,],[88,]),'funcsOpt':([13,31,37,],[29,38,47,]),'localvardirectiveB':([127,],[166,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([68,],[101,]),'factor':([44,49,56,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'input':([97,143,],[130,130,]),'main':([29,],[37,]),'type':([6,18,32,68,97,143,184,],[16,16,41,102,16,16,201,]),'empty':([0,3,6,13,18,31,34,37,44,49,56,59,63,64,65,66,68,78,79,84,85,90,92,97,106,111,114,115,116,119,120,121,122,140,143,148,162,163,175,178,187,195,197,199,206,209,215,219,221,223,226,],[7,7,19,30,19,30,45,30,60,60,60,81,45,87,91,96,100,60,60,60,60,60,60,131,60,60,60,60,60,60,60,60,60,45,131,183,60,60,60,60,60,45,212,60,60,60,183,60,212,229,60,]),'body':([6,],[12,]),'forloop':([97,143,],[132,132,]),'return':([97,143,],[133,133,]),'superexpressionB':([66,],[94,]),'funccall':([44,49,56,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'instructionsOpt':([97,143,],[135,179,]),'else':([223,],[228,]),'superexpression':([44,49,56,106,111,120,121,122,162,163,175,178,187,199,206,209,219,226,],[62,69,77,152,153,158,159,160,189,191,152,200,202,213,191,220,225,231,]),'paramsB':([148,215,],[182,224,]),'func':([13,31,37,],[31,31,31,]),'declaration':([6,18,97,143,],[18,18,138,138,]),'returntype':([32,],[40,]),'expB':([64,],[86,]),'declarationB':([16,50,103,],[33,70,149,]),'declarationC':([42,],[52,]),'declarationD':([69,],[104,]),'condition':([97,143,],[141,141,]),'declarationsOpt':([6,18,],[13,35,]),'term':([44,49,56,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[64,64,64,108,109,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'signB':([44,49,56,78,79,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'config':([0,3,],[6,10,]),'instruction':([97,143,],[143,143,]),'assign':([170,],[196,]),'inputB':([197,221,],[211,227,]),'localmsgdirective':([97,143,],[144,144,]),'localdecisiondirective':([97,143,],[145,145,]),'termB':([59,],[80,]),'exp':([44,49,56,84,85,90,92,106,111,114,115,116,119,120,121,122,162,163,175,178,187,199,206,209,219,226,],[65,65,65,112,113,117,118,65,65,154,155,156,157,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'outputB':([163,206,],[192,218,]),'output':([97,143,],[146,146,]),'expression':([44,49,56,106,111,120,121,122,162,163,175,178,187,199,206,209,219,226,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'options':([8,9,],[24,25,]),'block':([67,147,203,214,230,233,],[98,181,217,223,232,234,]),'outputC':([190,191,],[205,207,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',12),
  ('config -> configdirective config','config',2,'p_config','parser.py',16),
  ('config -> empty','config',1,'p_config','parser.py',17),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',21),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',22),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',23),
  ('options -> SOME','options',1,'p_options','parser.py',26),
  ('options -> ALL','options',1,'p_options','parser.py',27),
  ('options -> MOST','options',1,'p_options','parser.py',28),
  ('options -> NONE','options',1,'p_options','parser.py',29),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',32),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',33),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',37),
  ('funcsOpt -> func funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',40),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',41),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',44),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',45),
  ('declaration -> type declarationB','declaration',2,'p_declaration','parser.py',49),
  ('declarationB -> ID dimensionsOpt declarationC','declarationB',3,'p_declarationB','parser.py',52),
  ('declarationC -> = superexpression declarationD','declarationC',3,'p_declarationC','parser.py',55),
  ('declarationC -> , declarationB','declarationC',2,'p_declarationC','parser.py',56),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',57),
  ('declarationD -> , declarationB','declarationD',2,'p_declarationD','parser.py',60),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',61),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',65),
  ('func -> DEF returntype ID ( paramsOpt ) block','func',7,'p_func','parser.py',69),
  ('paramsOpt -> params','paramsOpt',1,'p_paramsOpt','parser.py',72),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',73),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',77),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',80),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',81),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',85),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',88),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',91),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',92),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',96),
  ('else -> ELSE block','else',2,'p_else','parser.py',100),
  ('else -> empty','else',1,'p_else','parser.py',101),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',105),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',106),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',107),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',108),
  ('instruction -> declaration ;','instruction',2,'p_instruction','parser.py',109),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',110),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',111),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',112),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',113),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',118),
  ('assignfunccallB -> ( funccallB','assignfunccallB',2,'p_assignfunccallB','parser.py',121),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',122),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',126),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',127),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',128),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',132),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',135),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',136),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',137),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',141),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',144),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',145),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',146),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',147),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',148),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',149),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',150),
  ('exp -> term expB','exp',2,'p_exp','parser.py',154),
  ('expB -> - exp','expB',2,'p_expB','parser.py',157),
  ('expB -> + exp','expB',2,'p_expB','parser.py',158),
  ('expB -> empty','expB',1,'p_expB','parser.py',159),
  ('term -> factor termB','term',2,'p_term','parser.py',163),
  ('termB -> / term','termB',2,'p_termB','parser.py',166),
  ('termB -> * term','termB',2,'p_termB','parser.py',167),
  ('termB -> empty','termB',1,'p_termB','parser.py',168),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',174),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',175),
  ('factor -> funccall','factor',1,'p_factor','parser.py',176),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',177),
  ('signB -> sign','signB',1,'p_signB','parser.py',180),
  ('signB -> empty','signB',1,'p_signB','parser.py',181),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',185),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',186),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',187),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',188),
  ('sign -> +','sign',1,'p_sign','parser.py',192),
  ('sign -> -','sign',1,'p_sign','parser.py',193),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',197),
  ('type -> INT','type',1,'p_type','parser.py',201),
  ('type -> FLOAT','type',1,'p_type','parser.py',202),
  ('type -> STRING','type',1,'p_type','parser.py',203),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',207),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',208),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',212),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',216),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',219),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',220),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',223),
  ('outputB -> STRING outputC','outputB',2,'p_outputB','parser.py',226),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',227),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',230),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',231),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',235),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',238),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',239),
  ('localmsgdirective -> # SHOW STRING','localmsgdirective',3,'p_localmsgdirective','parser.py',243),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',247),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',248),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',249),
  ('funccall -> DEF ID ( funccallB','funccall',4,'p_funccall','parser.py',253),
  ('funccallB -> superexpression funccallC','funccallB',2,'p_funccallB','parser.py',256),
  ('funccallB -> )','funccallB',1,'p_funccallB','parser.py',257),
  ('funccallC -> , superexpression funccallC','funccallC',3,'p_funccallC','parser.py',260),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',261),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',265),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',268),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',272),
  ('params -> type ID paramsB','params',3,'p_params','parser.py',276),
  ('paramsB -> , type ID paramsB','paramsB',4,'p_paramsB','parser.py',279),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',280),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',283),
]
