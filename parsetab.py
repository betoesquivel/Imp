
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xc0\x1e\xecz\xb5ah\x1a2\xe1\x8e+\xb5\x97B!'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'FLOAT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,34,42,45,55,57,59,60,61,62,65,67,68,69,70,71,75,76,78,81,82,83,86,89,91,92,93,100,101,102,103,105,106,110,111,119,121,122,124,125,129,130,134,136,137,138,142,143,146,147,148,149,150,151,153,160,161,163,164,172,176,177,178,180,185,186,206,207,212,216,217,220,222,],[-113,-113,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,-18,-28,-29,-113,-70,-113,-113,-113,-113,17,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-26,17,-69,-66,-65,-107,-62,-61,-53,-54,-39,-45,-99,-101,-40,-100,-41,-38,17,-47,-46,-102,-104,-56,-57,-55,-58,-49,-50,-33,-35,-36,-23,-37,-34,17,-103,-106,-108,-98,-95,-105,-80,-113,-30,-32,-31,-86,]),'RETURN':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[115,-39,-45,-99,-101,-40,-100,-41,-38,115,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'VOID':([32,],[39,]),'SOME':([8,9,],[21,21,]),'WHILE':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[117,-39,-45,-99,-101,-40,-100,-41,-38,117,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'PRINT':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[118,-39,-45,-99,-101,-40,-100,-41,-38,118,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'{':([64,140,194,204,218,221,],[93,93,93,93,93,93,]),'TRUE':([43,49,51,52,53,54,56,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[-113,-72,71,-113,-78,-79,-73,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,]),'>':([42,45,55,57,59,60,61,67,68,69,70,71,75,76,78,81,82,85,100,101,102,103,105,106,142,143,177,178,180,206,],[-28,-29,-113,-70,-113,-113,87,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,109,-69,-66,-65,-107,-62,-61,-102,-104,-103,-106,-108,-105,]),'DEF':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,31,34,35,37,42,43,45,52,55,57,59,60,61,62,63,67,68,69,70,71,73,74,75,76,78,79,80,81,82,83,85,86,87,89,91,92,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,142,143,146,147,148,149,150,151,154,155,163,167,170,173,177,178,179,180,190,197,199,206,214,],[-113,-113,-113,-3,-2,32,-113,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,32,-18,-16,32,-28,50,-29,50,-113,-70,-113,-113,-113,-113,50,-77,-74,-75,-68,-76,50,50,-64,-67,-71,50,50,-60,-63,-52,50,-59,50,-48,-51,-26,-19,50,-69,-66,-65,-107,50,-62,-61,50,50,50,-53,-54,50,50,50,50,-102,-104,-56,-57,-55,-58,-49,-50,50,50,-23,50,50,-20,-103,-106,50,-108,50,50,50,-105,50,]),'FORGET':([120,],[159,]),'NONE':([8,9,],[22,22,]),'FCONST':([43,49,51,52,53,54,56,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[-113,-72,68,-113,-78,-79,-73,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,]),'&':([42,45,55,57,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,88,100,101,102,103,105,106,110,111,142,143,146,147,148,149,177,178,180,206,],[-28,-29,-113,-70,-113,-113,-113,88,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,113,-69,-66,-65,-107,-62,-61,-53,-54,-102,-104,-56,-57,-55,-58,-103,-106,-108,-105,]),')':([42,45,46,55,57,59,60,61,62,65,67,68,69,70,71,72,75,76,78,81,82,83,86,89,91,95,96,97,99,100,101,102,103,105,106,110,111,141,142,143,144,146,147,148,149,150,151,167,174,175,177,178,180,181,182,183,188,191,193,201,202,205,206,210,213,215,219,],[-28,-29,64,-113,-70,-113,-113,-113,-113,-113,-77,-74,-75,-68,-76,100,-64,-67,-71,-60,-63,-52,-59,-48,-51,140,-22,-21,143,-69,-66,-65,-107,-62,-61,-53,-54,-113,-102,-104,178,-56,-57,-55,-58,-49,-50,143,-110,-112,-103,-106,-108,194,195,195,-113,204,178,211,-89,-113,-105,-113,-111,-88,221,]),'(':([36,43,48,52,63,66,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,117,118,127,132,133,135,154,155,167,170,179,190,197,199,214,],[46,52,65,52,52,99,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,154,155,162,165,167,170,52,52,52,52,52,52,52,52,52,]),'VARSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([42,45,55,57,59,67,68,69,70,71,78,100,103,142,143,177,178,180,206,],[-28,-29,73,-70,-113,-77,-74,-75,-68,-76,-71,-69,-107,-102,-104,-103,-106,-108,-105,]),'-':([42,43,45,52,55,57,59,60,63,67,68,69,70,71,73,74,75,76,78,79,80,85,87,99,100,101,102,103,104,107,108,109,112,113,114,115,142,143,154,155,167,170,177,178,179,180,190,197,199,206,214,],[-28,54,-29,54,-113,-70,-113,80,54,-77,-74,-75,-68,-76,54,54,-64,-67,-71,54,54,54,54,54,-69,-66,-65,-107,54,54,54,54,54,54,54,54,-102,-104,54,54,54,54,-103,-106,54,-108,54,54,54,-105,54,]),',':([42,45,55,57,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,89,91,100,101,102,103,105,106,110,111,141,142,143,144,146,147,148,149,150,151,177,178,180,182,183,188,193,205,206,210,],[-28,-29,-113,-70,-113,-113,-113,-113,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-69,-66,-65,-107,-62,-61,-53,-54,176,-102,-104,179,-56,-57,-55,-58,-49,-50,-103,-106,-108,197,197,200,179,176,-105,200,]),'/':([42,45,55,57,59,67,68,69,70,71,78,100,103,142,143,177,178,180,206,],[-28,-29,74,-70,-113,-77,-74,-75,-68,-76,-71,-69,-107,-102,-104,-103,-106,-108,-105,]),'TRACKDECISION':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[122,-39,-45,-99,-101,-40,-100,-41,-38,122,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),';':([34,42,45,55,57,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,89,91,92,100,101,102,103,105,106,110,111,116,123,126,131,139,142,143,146,147,148,149,150,151,152,166,168,177,178,180,184,187,189,195,196,198,203,206,208,209,211,],[-18,-28,-29,-113,-70,-113,-113,-113,-113,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-26,-69,-66,-65,-107,-62,-61,-53,-54,153,160,161,164,172,-102,-104,-56,-57,-55,-58,-49,-50,-109,-42,-44,-103,-106,-108,-90,199,-43,-93,-91,-92,-27,-105,-94,214,-87,]),'=':([1,2,4,33,42,44,45,55,57,59,60,61,67,68,69,70,71,75,76,78,81,82,84,85,87,100,101,102,103,105,106,133,142,143,169,177,178,180,206,],[8,9,11,-113,-28,63,-29,-113,-70,-113,-113,84,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,107,108,112,-69,-66,-65,-107,-62,-61,-113,-102,-104,190,-103,-106,-108,-105,]),'<':([42,45,55,57,59,60,61,67,68,69,70,71,75,76,78,81,82,100,101,102,103,105,106,142,143,177,178,180,206,],[-28,-29,-113,-70,-113,-113,85,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-69,-66,-65,-107,-62,-61,-102,-104,-103,-106,-108,-105,]),'$end':([5,12,30,31,37,38,47,94,163,173,],[0,-1,-15,-113,-113,-14,-13,-19,-23,-20,]),'STRING':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,34,42,45,55,57,59,60,61,62,65,67,68,69,70,71,75,76,78,81,82,83,86,89,91,92,93,100,101,102,103,105,106,110,111,119,121,122,124,125,129,130,134,136,137,138,142,143,146,147,148,149,150,151,153,155,156,160,161,163,164,172,176,177,178,180,185,186,197,206,207,212,216,217,220,222,],[-113,-113,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,-18,-28,-29,-113,-70,-113,-113,-113,-113,14,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-26,14,-69,-66,-65,-107,-62,-61,-53,-54,-39,-45,-99,-101,-40,-100,-41,-38,14,-47,-46,-102,-104,-56,-57,-55,-58,-49,-50,-33,182,185,-35,-36,-23,-37,-34,14,-103,-106,-108,-98,-95,182,-105,-80,-113,-30,-32,-31,-86,]),'FOR':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[127,-39,-45,-99,-101,-40,-100,-41,-38,127,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'SHOW':([120,],[156,]),'#':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[120,-39,-45,-99,-101,-40,-100,-41,-38,120,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'ELSE':([163,212,],[-23,218,]),'MOST':([8,9,],[23,23,]),'FORGETDECISION':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[129,-39,-45,-99,-101,-40,-100,-41,-38,129,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'ICONST':([43,49,51,52,53,54,56,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[-113,-72,69,-113,-78,-79,-73,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,]),'INPUT':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[132,-39,-45,-99,-101,-40,-100,-41,-38,132,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'[':([33,59,77,133,],[43,43,104,43,]),']':([42,45,55,57,58,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,89,91,100,101,102,103,105,106,110,111,142,143,145,146,147,148,149,150,151,177,178,180,206,],[-28,-29,-113,-70,77,-113,-113,-113,-113,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-69,-66,-65,-107,-62,-61,-53,-54,-102,-104,180,-56,-57,-55,-58,-49,-50,-103,-106,-108,-105,]),'ID':([14,15,16,17,39,40,41,43,50,52,63,73,74,79,80,85,87,93,98,99,104,107,108,109,112,113,114,115,119,121,122,124,125,129,130,134,136,137,138,153,154,155,157,158,159,160,161,162,163,164,165,167,170,172,179,185,186,190,192,197,199,200,207,212,214,216,217,220,222,],[-83,-81,33,-82,-84,48,-85,59,66,59,59,59,59,59,59,59,59,133,141,59,59,59,59,59,59,59,59,59,-39,-45,-99,-101,-40,-100,-41,-38,133,-47,-46,-33,59,59,-96,186,-97,-35,-36,33,-23,-37,188,59,59,-34,59,-98,-95,59,205,59,59,210,-80,-113,59,-30,-32,-31,-86,]),'IF':([93,119,121,122,124,125,129,130,134,136,137,138,153,160,161,163,164,172,185,186,207,212,216,217,220,222,],[135,-39,-45,-99,-101,-40,-100,-41,-38,135,-47,-46,-33,-35,-36,-23,-37,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'ALL':([8,9,],[20,20,]),'FALSE':([43,49,51,52,53,54,56,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[-113,-72,67,-113,-78,-79,-73,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,]),'INT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,34,42,45,55,57,59,60,61,62,65,67,68,69,70,71,75,76,78,81,82,83,86,89,91,92,93,100,101,102,103,105,106,110,111,119,121,122,124,125,129,130,134,136,137,138,142,143,146,147,148,149,150,151,153,160,161,163,164,172,176,177,178,180,185,186,206,207,212,216,217,220,222,],[-113,-113,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,-18,-28,-29,-113,-70,-113,-113,-113,-113,15,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-26,15,-69,-66,-65,-107,-62,-61,-53,-54,-39,-45,-99,-101,-40,-100,-41,-38,15,-47,-46,-102,-104,-56,-57,-55,-58,-49,-50,-33,-35,-36,-23,-37,-34,15,-103,-106,-108,-98,-95,-105,-80,-113,-30,-32,-31,-86,]),'NO':([11,],[28,]),'|':([42,45,55,57,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,90,100,101,102,103,105,106,110,111,142,143,146,147,148,149,177,178,180,206,],[-28,-29,-113,-70,-113,-113,-113,90,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,114,-69,-66,-65,-107,-62,-61,-53,-54,-102,-104,-56,-57,-55,-58,-103,-106,-108,-105,]),'TRACK':([120,],[157,]),'COMPLEXITYCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'YES':([11,],[26,]),'MAIN':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,38,42,45,55,57,59,60,61,62,67,68,69,70,71,75,76,78,81,82,83,86,89,91,92,100,101,102,103,105,106,110,111,142,143,146,147,148,149,150,151,163,173,177,178,180,206,],[-113,-113,-113,-3,-2,-113,-113,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,36,-15,-113,-18,-16,-14,-28,-29,-113,-70,-113,-113,-113,-113,-77,-74,-75,-68,-76,-64,-67,-71,-60,-63,-52,-59,-48,-51,-26,-69,-66,-65,-107,-62,-61,-53,-54,-102,-104,-56,-57,-55,-58,-49,-50,-23,-20,-103,-106,-108,-105,]),'}':([93,119,121,122,124,125,128,129,130,134,136,137,138,153,160,161,163,164,171,172,185,186,207,212,216,217,220,222,],[-113,-39,-45,-99,-25,-40,163,-100,-41,-38,-113,-47,-46,-33,-35,-36,-23,-37,-24,-34,-98,-95,-80,-113,-30,-32,-31,-86,]),'+':([42,43,45,52,55,57,59,60,63,67,68,69,70,71,73,74,75,76,78,79,80,85,87,99,100,101,102,103,104,107,108,109,112,113,114,115,142,143,154,155,167,170,177,178,179,180,190,197,199,206,214,],[-28,53,-29,53,-113,-70,-113,79,53,-77,-74,-75,-68,-76,53,53,-64,-67,-71,53,53,53,53,53,-69,-66,-65,-107,53,53,53,53,53,53,53,53,-102,-104,53,53,53,53,-103,-106,53,-108,53,53,53,-105,53,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([51,],[70,]),'localdirective':([93,136,],[130,130,]),'assignfunccallB':([133,],[166,]),'assignfunccall':([93,136,],[116,116,]),'paramsOpt':([65,],[95,]),'assignB':([133,],[168,]),'sign':([43,52,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'localvardirective':([93,136,],[121,121,]),'dimensionsB':([77,],[103,]),'dimensionsOpt':([33,59,133,],[44,78,169,]),'whileloop':([93,136,],[119,119,]),'funccallB':([99,167,],[142,189,]),'funccallC':([144,193,],[177,206,]),'dimensions':([33,59,133,],[42,42,42,]),'optionsyesno':([11,],[27,]),'expressionB':([61,],[83,]),'funcsOpt':([13,31,37,],[29,38,47,]),'localvardirectiveB':([120,],[158,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([65,],[97,]),'factor':([43,52,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'input':([93,136,],[123,123,]),'main':([29,],[37,]),'type':([6,18,32,65,93,136,176,],[16,16,41,98,16,16,192,]),'empty':([0,3,6,13,18,31,33,37,43,52,55,59,60,61,62,63,65,73,74,79,80,85,87,93,99,104,107,108,109,112,113,114,115,133,136,141,154,155,167,170,179,188,190,197,199,205,210,212,214,],[7,7,19,30,19,30,45,30,56,56,76,45,82,86,91,56,96,56,56,56,56,56,56,124,56,56,56,56,56,56,56,56,56,45,124,175,56,56,56,56,56,202,56,56,56,175,202,217,56,]),'body':([6,],[12,]),'forloop':([93,136,],[125,125,]),'return':([93,136,],[126,126,]),'funccall':([43,52,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'instructionsOpt':([93,136,],[128,171,]),'else':([212,],[216,]),'superexpression':([43,52,63,99,104,113,114,115,154,155,167,170,179,190,197,199,214,],[58,72,92,144,145,150,151,152,181,183,144,191,193,203,183,209,219,]),'paramsB':([141,205,],[174,213,]),'func':([13,31,37,],[31,31,31,]),'declaration':([6,18,93,136,],[18,18,131,131,]),'returntype':([32,],[40,]),'expB':([60,],[81,]),'superexpressionB':([62,],[89,]),'condition':([93,136,],[134,134,]),'declarationsOpt':([6,18,],[13,35,]),'term':([43,52,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[60,60,60,101,102,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'signB':([43,52,63,73,74,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'config':([0,3,],[6,10,]),'instruction':([93,136,],[136,136,]),'options':([8,9,],[24,25,]),'inputB':([188,210,],[201,215,]),'localmsgdirective':([93,136,],[137,137,]),'localdecisiondirective':([93,136,],[138,138,]),'termB':([55,],[75,]),'exp':([43,52,63,79,80,85,87,99,104,107,108,109,112,113,114,115,154,155,167,170,179,190,197,199,214,],[61,61,61,105,106,110,111,61,61,146,147,148,149,61,61,61,61,61,61,61,61,61,61,61,61,]),'outputB':([155,197,],[184,208,]),'output':([93,136,],[139,139,]),'expression':([43,52,63,99,104,113,114,115,154,155,167,170,179,190,197,199,214,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'assign':([16,162,],[34,187,]),'block':([64,140,194,204,218,221,],[94,173,207,212,220,222,]),'outputC':([182,183,],[196,198,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',12),
  ('config -> configdirective config','config',2,'p_config','parser.py',16),
  ('config -> empty','config',1,'p_config','parser.py',17),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',21),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',22),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',23),
  ('options -> SOME','options',1,'p_options','parser.py',26),
  ('options -> ALL','options',1,'p_options','parser.py',27),
  ('options -> MOST','options',1,'p_options','parser.py',28),
  ('options -> NONE','options',1,'p_options','parser.py',29),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',32),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',33),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',37),
  ('funcsOpt -> func funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',40),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',41),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',44),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',45),
  ('declaration -> type assign','declaration',2,'p_declaration','parser.py',49),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',53),
  ('func -> DEF returntype ID ( paramsOpt ) block','func',7,'p_func','parser.py',57),
  ('paramsOpt -> params','paramsOpt',1,'p_paramsOpt','parser.py',60),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',61),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',65),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',68),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',69),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',73),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',76),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',79),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',80),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',84),
  ('else -> ELSE block','else',2,'p_else','parser.py',88),
  ('else -> empty','else',1,'p_else','parser.py',89),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',93),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',94),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',95),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',96),
  ('instruction -> declaration ;','instruction',2,'p_instruction','parser.py',97),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',98),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',99),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',100),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',101),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',106),
  ('assignfunccallB -> ( funccallB','assignfunccallB',2,'p_assignfunccallB','parser.py',109),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',110),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',114),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',115),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',116),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',120),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',123),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',124),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',125),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',129),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',132),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',133),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',134),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',135),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',136),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',137),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',138),
  ('exp -> term expB','exp',2,'p_exp','parser.py',142),
  ('expB -> - exp','expB',2,'p_expB','parser.py',145),
  ('expB -> + exp','expB',2,'p_expB','parser.py',146),
  ('expB -> empty','expB',1,'p_expB','parser.py',147),
  ('term -> factor termB','term',2,'p_term','parser.py',151),
  ('termB -> / term','termB',2,'p_termB','parser.py',154),
  ('termB -> * term','termB',2,'p_termB','parser.py',155),
  ('termB -> empty','termB',1,'p_termB','parser.py',156),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',162),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',163),
  ('factor -> funccall','factor',1,'p_factor','parser.py',164),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',165),
  ('signB -> sign','signB',1,'p_signB','parser.py',168),
  ('signB -> empty','signB',1,'p_signB','parser.py',169),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',173),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',174),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',175),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',176),
  ('sign -> +','sign',1,'p_sign','parser.py',180),
  ('sign -> -','sign',1,'p_sign','parser.py',181),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',185),
  ('type -> INT','type',1,'p_type','parser.py',189),
  ('type -> FLOAT','type',1,'p_type','parser.py',190),
  ('type -> STRING','type',1,'p_type','parser.py',191),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',195),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',196),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',200),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',204),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',207),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',208),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',211),
  ('outputB -> STRING outputC','outputB',2,'p_outputB','parser.py',214),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',215),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',218),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',219),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',223),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',226),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',227),
  ('localmsgdirective -> # SHOW STRING','localmsgdirective',3,'p_localmsgdirective','parser.py',231),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',235),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',236),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',237),
  ('funccall -> DEF ID ( funccallB','funccall',4,'p_funccall','parser.py',241),
  ('funccallB -> superexpression funccallC','funccallB',2,'p_funccallB','parser.py',244),
  ('funccallB -> )','funccallB',1,'p_funccallB','parser.py',245),
  ('funccallC -> , superexpression funccallC','funccallC',3,'p_funccallC','parser.py',248),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',249),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',253),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',256),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',260),
  ('params -> type ID paramsB','params',3,'p_params','parser.py',264),
  ('paramsB -> , type ID paramsB','paramsB',4,'p_paramsB','parser.py',267),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',268),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',271),
]
