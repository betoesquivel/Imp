
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xca\xbb\xbb\xfa;\x98$.~\xa6\x88\x0cY\xe8\x83a'
    
_lr_action_items = {'DECISIONSCONFIG':([0,1,5,22,23,24,25,26,27,28,29,30,],[-2,3,3,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'RETURN':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[50,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,50,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'GTEQ':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,136,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'READ':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[51,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,51,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'VOID':([34,],[43,]),'SOME':([9,10,],[23,23,]),'WHILE':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[52,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,52,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'/':([87,89,92,113,116,120,121,122,123,124,125,128,129,134,166,167,168,169,170,178,205,208,235,237,243,244,273,275,],[-88,-96,-98,-42,-43,-92,-101,-103,-102,-105,-104,175,-94,-159,-106,-108,-107,-110,-109,-95,-159,-93,-151,-153,-144,-150,-152,-149,]),'PRINT':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[53,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,53,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'DIFF':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,139,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'TRUE':([50,80,82,83,84,85,88,91,98,109,114,118,126,131,136,137,139,140,141,143,144,149,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,215,216,227,230,231,232,236,245,254,256,257,266,279,],[-159,-24,125,-97,-111,-112,-100,-99,-159,-159,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-159,-24,-159,-159,-159,-159,]),'>':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,143,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'DEF':([0,1,5,7,8,11,14,20,21,22,23,24,25,26,27,28,29,30,31,37,40,42,78,79,106,165,206,239,240,284,],[-2,-159,-159,-159,-4,-3,34,-159,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,34,-17,34,-33,-28,-19,-37,-31,-27,-30,-26,-29,]),'FORGET':([55,],[99,]),'NONE':([9,10,],[24,24,]),'FCONST':([50,80,82,83,84,85,88,91,98,109,114,118,126,131,136,137,139,140,141,143,144,149,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,215,216,227,230,231,232,236,245,254,256,257,266,279,],[-159,-24,121,-97,-111,-112,-100,-99,-159,-159,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-159,-24,-159,-159,-159,-159,]),'NO':([12,],[30,]),')':([48,87,89,90,92,93,94,95,112,113,116,120,121,122,123,124,125,128,129,130,132,134,135,138,142,145,146,147,148,150,157,158,159,160,166,167,168,169,170,171,173,174,177,178,181,182,190,191,192,196,199,201,203,204,205,208,211,212,213,214,217,218,219,220,221,222,223,224,231,234,235,237,241,242,243,244,245,246,247,248,249,251,256,259,262,264,268,273,275,276,285,287,289,290,],[81,-88,-96,-159,-98,-83,-159,-159,-159,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-21,-128,-134,-47,200,-159,-36,-106,-108,-107,-110,-109,208,-87,-91,-159,-95,-82,-86,-129,225,226,-61,233,-35,-158,-156,-159,-93,-69,244,-148,-147,-80,-79,-77,-78,-75,-76,-72,-159,-64,-159,-151,-153,-90,-89,-144,-150,-159,-146,-85,-84,263,-131,-159,-157,244,-21,244,-152,-149,-129,-159,-125,-130,291,]),'(':([39,50,51,52,53,62,69,71,75,80,83,92,97,98,108,109,114,118,126,131,133,136,137,139,140,141,143,144,149,156,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,215,216,227,230,231,232,236,245,254,256,257,266,279,],[48,83,96,-114,98,104,-60,109,112,-24,-97,-145,149,83,-21,83,83,83,83,-24,177,-24,-24,-24,-24,-24,-24,-24,83,196,-24,-24,83,83,-24,-24,83,83,83,83,83,83,83,-114,-61,83,83,83,83,83,83,-64,-24,83,83,-24,83,83,83,83,]),'VARSCONFIG':([0,1,5,22,23,24,25,26,27,28,29,30,],[-2,4,4,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'*':([87,89,92,113,116,120,121,122,123,124,125,128,129,134,166,167,168,169,170,178,205,208,235,237,243,244,273,275,],[-88,-96,-98,-42,-43,-92,-101,-103,-102,-105,-104,172,-94,-159,-106,-108,-107,-110,-109,-95,-159,-93,-151,-153,-144,-150,-152,-149,]),'-':([50,80,83,87,89,92,93,98,109,113,114,116,118,120,121,122,123,124,125,126,128,129,131,134,135,136,137,139,140,141,143,144,149,166,167,168,169,170,172,173,174,175,176,177,178,179,180,183,184,185,186,187,188,189,194,196,205,208,209,210,215,216,227,230,231,232,235,236,237,241,242,243,244,245,254,256,257,266,273,275,279,],[85,-24,-97,-88,-96,-98,-83,85,85,-42,85,-43,85,-92,-101,-103,-102,-105,-104,85,-159,-94,-24,-159,180,-24,-24,-24,-24,-24,-24,-24,85,-106,-108,-107,-110,-109,-24,-87,-91,-24,85,85,-95,-24,-24,85,85,85,85,85,85,85,-114,-61,-159,-93,85,85,85,85,85,85,-64,-24,-151,85,-153,-90,-89,-144,-150,85,-24,85,85,85,-152,-149,85,]),',':([46,47,76,87,89,90,92,93,94,95,113,115,116,120,121,122,123,124,125,128,129,130,132,134,135,138,142,145,146,147,148,150,159,163,164,166,167,168,169,170,173,174,177,178,181,182,190,192,196,204,205,207,208,211,212,213,214,217,218,219,220,221,222,223,224,231,234,235,237,241,242,243,244,245,246,247,248,256,262,264,268,273,274,275,276,285,],[-21,77,-159,-88,-96,-159,-98,-83,-159,-159,-42,-20,-43,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-21,-128,-134,202,77,-25,-106,-108,-107,-110,-109,-87,-91,-159,-95,-82,-86,-129,227,-61,-156,-159,238,-93,-69,245,-148,-147,-80,-79,-77,-78,-75,-76,-72,250,-64,202,-151,-153,-90,-89,-144,-150,-159,-146,-85,-84,-159,245,-21,245,-152,77,-149,-129,250,]),'SCONST':([50,80,82,83,84,85,88,91,98,100,109,114,118,126,131,136,137,139,140,141,143,144,149,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,215,216,227,230,231,232,236,245,254,256,257,266,279,],[-159,-24,122,-97,-111,-112,-100,-99,-159,152,-159,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-159,-24,-159,-159,-159,-159,]),'ID':([15,16,17,18,19,36,41,43,44,45,50,54,56,57,58,59,60,66,67,68,70,72,73,77,78,79,80,83,96,98,99,101,102,103,104,105,106,107,109,111,114,117,118,126,131,136,137,139,140,141,143,144,149,152,153,161,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,206,209,210,215,216,227,230,231,232,236,238,239,240,245,250,254,256,257,258,261,265,266,271,272,277,279,283,284,288,292,293,],[-22,-119,-117,-118,-120,46,69,-121,75,-122,92,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,69,-66,-23,-28,-19,-24,-97,148,92,-139,-138,153,-52,154,-53,-37,-50,92,-51,92,46,92,92,-24,-24,-24,-24,-24,-24,-24,-24,92,-140,-137,204,-24,-24,92,92,-24,-24,92,92,92,92,92,92,92,-114,-61,-27,92,92,92,92,92,92,-64,-24,92,-23,-30,-26,92,148,-24,92,92,-159,46,-116,92,-46,-49,-113,92,-44,-29,-45,-126,-123,]),'TRACKDECISION':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[57,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,57,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),';':([46,47,61,63,65,74,76,86,87,89,90,92,93,94,95,113,115,116,120,121,122,123,124,125,127,128,129,130,132,134,135,138,142,145,146,151,155,163,164,166,167,168,169,170,173,174,178,181,182,195,197,205,207,208,211,217,218,219,220,221,222,223,226,228,235,237,241,242,243,244,247,248,253,255,263,267,269,273,274,275,278,280,281,286,],[-21,78,103,105,107,111,-159,-155,-88,-96,-159,-98,-83,-159,-159,-42,-20,-43,-92,-101,-103,-102,-105,-104,-154,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-132,194,78,-25,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-59,-63,-159,239,-93,-69,-80,-79,-77,-78,-75,-76,-72,-135,-133,-151,-153,-90,-89,-144,-150,-85,-84,-136,-124,-127,279,-25,-152,78,-149,-25,-62,-41,-40,]),'=':([3,4,6,46,47,69,76,108,113,115,116,154,156,163,193,198,205,229,235,237,273,274,],[9,10,12,-21,80,-60,-159,-21,-42,-20,-43,-21,-159,80,-159,232,-159,254,-151,-153,-152,80,]),'<':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,141,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'$end':([2,13,31,35,38,40,42,49,106,165,],[0,-1,-159,-16,-15,-159,-33,-14,-37,-31,]),'STRING':([0,1,5,7,8,11,20,22,23,24,25,26,27,28,29,30,34,41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,112,152,153,202,206,239,240,258,265,271,272,277,283,284,288,292,293,],[-2,-159,-159,16,-4,-3,16,-9,-8,-11,-10,-6,-5,-12,-7,-13,16,16,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,16,-66,-28,-19,-52,-53,-37,-50,-51,16,-140,-137,16,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'FOR':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[62,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,62,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'SHOW':([55,],[100,]),'#':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[55,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,55,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'ELSE':([106,258,],[-37,270,]),'MOST':([9,10,],[25,25,]),'FORGETDECISION':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[66,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,66,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'ICONST':([50,80,82,83,84,85,88,91,98,109,114,118,126,131,136,137,139,140,141,143,144,149,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,215,216,227,230,231,232,236,245,254,256,257,266,279,],[-159,-24,123,-97,-111,-112,-100,-99,-159,-159,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-159,-24,-159,-159,-159,-159,]),'[':([46,69,76,92,108,134,154,156,193,205,],[-21,-60,114,-98,-21,114,-21,114,114,236,]),']':([87,89,90,92,93,94,95,113,116,120,121,122,123,124,125,128,129,130,132,134,135,138,142,145,146,162,166,167,168,169,170,173,174,178,181,182,205,208,211,217,218,219,220,221,222,223,235,237,241,242,243,244,247,248,260,273,275,],[-88,-96,-159,-98,-83,-159,-159,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,205,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-69,-80,-79,-77,-78,-75,-76,-72,-151,-153,-90,-89,-144,-150,-85,-84,273,-152,-149,]),'YES':([12,],[28,]),'IF':([41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[71,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,71,-66,-28,-19,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'AND':([87,89,92,93,94,95,113,116,120,121,122,123,124,125,128,129,134,135,138,142,166,167,168,169,170,173,174,178,181,182,205,208,217,218,219,220,221,222,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,-159,144,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-74,-81,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-80,-79,-77,-78,-75,-76,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'ALL':([9,10,],[22,22,]),'FALSE':([50,80,82,83,84,85,88,91,98,109,114,118,126,131,136,137,139,140,141,143,144,149,172,175,176,177,179,180,183,184,185,186,187,188,189,194,196,209,210,214,215,216,227,230,231,232,236,245,254,256,257,266,279,],[-159,-24,124,-97,-111,-112,-100,-99,-159,-159,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-159,-24,-159,-159,-159,-159,]),'INT':([0,1,5,7,8,11,20,22,23,24,25,26,27,28,29,30,34,41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,112,152,153,202,206,239,240,258,265,271,272,277,283,284,288,292,293,],[-2,-159,-159,17,-4,-3,17,-9,-8,-11,-10,-6,-5,-12,-7,-13,17,17,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,17,-66,-28,-19,-52,-53,-37,-50,-51,17,-140,-137,17,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'EQ':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,140,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'LTEQ':([87,89,92,93,94,113,116,120,121,122,123,124,125,128,129,134,135,166,167,168,169,170,173,174,178,181,182,205,208,235,237,241,242,243,244,247,248,273,275,],[-88,-96,-98,-83,137,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'FLOAT':([0,1,5,7,8,11,20,22,23,24,25,26,27,28,29,30,34,41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,112,152,153,202,206,239,240,258,265,271,272,277,283,284,288,292,293,],[-2,-159,-159,18,-4,-3,18,-9,-8,-11,-10,-6,-5,-12,-7,-13,18,18,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,18,-66,-28,-19,-52,-53,-37,-50,-51,18,-140,-137,18,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'OR':([87,89,90,92,93,94,95,113,116,120,121,122,123,124,125,128,129,134,135,138,142,145,146,166,167,168,169,170,173,174,178,181,182,205,208,217,218,219,220,221,222,223,235,237,241,242,243,244,247,248,273,275,],[-88,-96,131,-98,-83,-159,-159,-42,-43,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-74,-81,-71,-73,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-159,-93,-80,-79,-77,-78,-75,-76,-72,-151,-153,-90,-89,-144,-150,-85,-84,-152,-149,]),'TRACK':([55,],[101,]),'COMPLEXITYCONFIG':([0,1,5,22,23,24,25,26,27,28,29,30,],[-2,6,6,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'BOOL':([0,1,5,7,8,11,20,22,23,24,25,26,27,28,29,30,34,41,54,56,57,58,59,60,66,67,68,70,72,73,78,79,103,105,106,107,111,112,152,153,202,206,239,240,258,265,271,272,277,283,284,288,292,293,],[-2,-159,-159,19,-4,-3,19,-9,-8,-11,-10,-6,-5,-12,-7,-13,19,19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,19,-66,-28,-19,-52,-53,-37,-50,-51,19,-140,-137,19,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'{':([33,81,119,200,225,233,252,270,282,291,],[41,-32,41,-34,-115,41,41,-48,41,41,]),'MAIN':([0,1,5,7,8,11,14,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,38,42,78,79,106,206,239,240,284,],[-2,-159,-159,-159,-4,-3,-159,-159,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,-159,39,-16,-17,-15,-33,-28,-19,-37,-27,-30,-26,-29,]),'}':([41,54,56,57,58,59,60,64,66,67,68,70,72,73,78,79,103,105,106,107,110,111,152,153,206,239,240,258,265,271,272,277,283,284,288,292,293,],[-159,-56,-65,-141,-67,-39,-57,106,-142,-58,-54,-55,-159,-66,-28,-19,-52,-53,-37,-50,-38,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-113,-44,-29,-45,-126,-123,]),'+':([50,80,83,87,89,92,93,98,109,113,114,116,118,120,121,122,123,124,125,126,128,129,131,134,135,136,137,139,140,141,143,144,149,166,167,168,169,170,172,173,174,175,176,177,178,179,180,183,184,185,186,187,188,189,194,196,205,208,209,210,215,216,227,230,231,232,235,236,237,241,242,243,244,245,254,256,257,266,273,275,279,],[84,-24,-97,-88,-96,-98,-83,84,84,-42,84,-43,84,-92,-101,-103,-102,-105,-104,84,-159,-94,-24,-159,179,-24,-24,-24,-24,-24,-24,-24,84,-106,-108,-107,-110,-109,-24,-87,-91,-24,84,84,-95,-24,-24,84,84,84,84,84,84,84,-114,-61,-159,-93,84,84,84,84,84,84,-64,-24,-151,84,-153,-90,-89,-144,-150,84,-24,84,84,84,-152,-149,84,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([112,],[158,]),'superexpressionB':([95,],[145,]),'while_quadruple':([225,],[252,]),'seen_term':([93,],[135,]),'validate_id':([96,250,],[147,264,]),'for_quadruple':([255,],[267,]),'forloop':([41,72,],[60,60,]),'seen_iconst':([123,],[168,]),'signB':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,209,210,215,216,227,230,236,245,256,257,266,279,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'endcondition_quadruple':([272,],[283,]),'expressionB':([94,],[138,]),'funcsOpt':([14,31,40,],[32,38,49,]),'push_operator':([80,131,136,137,139,140,141,143,144,172,175,179,180,232,254,],[118,176,183,184,185,186,187,188,189,209,210,215,216,257,266,]),'program':([0,],[2,]),'factor':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,209,210,215,216,227,230,236,245,256,257,266,279,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'main':([32,],[40,]),'return':([41,72,],[61,61,]),'read':([41,72,],[63,63,]),'paramsB':([159,234,],[201,259,]),'localdirective':([41,72,],[67,67,]),'quadruple_assign':([164,269,278,],[207,281,286,]),'condition':([41,72,],[70,70,]),'suprafunc':([14,31,40,],[31,31,31,]),'term':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,209,210,215,216,227,230,236,245,256,257,266,279,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,241,242,93,93,93,93,93,93,93,93,93,93,]),'start_quadruple':([0,],[1,]),'push_type':([15,],[36,]),'init_while':([52,194,],[97,230,]),'localdecisiondirective':([41,72,],[73,73,]),'output':([41,72,],[74,74,]),'seen_sconst':([122,],[167,]),'assignfunccallB':([156,],[195,]),'sign':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,209,210,215,216,227,230,236,245,256,257,266,279,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'return_quadruple':([86,],[127,]),'funccallC':([212,262,268,],[243,275,280,]),'funccallB':([177,245,256,],[212,262,268,]),'dimensions':([76,134,156,193,],[113,113,113,113,]),'condition_quadruple':([157,],[199,]),'hyperexpression':([50,98,109,114,118,126,149,176,177,227,230,236,245,256,257,266,279,],[86,150,157,162,164,171,191,211,213,150,255,260,213,213,269,278,287,]),'seen_param':([213,],[246,]),'body':([7,],[13,]),'whileloop':([41,72,],[54,54,]),'superexpression':([50,98,109,114,118,126,149,176,177,189,227,230,236,245,256,257,266,279,],[90,90,90,90,90,90,90,90,90,223,90,90,90,90,90,90,90,90,]),'assignfunccall':([41,72,],[65,65,]),'seen_main':([81,],[119,]),'seen_factor':([87,],[128,]),'seen_true':([125,],[170,]),'repush_type':([77,238,],[117,261,]),'localmsgdirective':([41,72,],[58,58,]),'termB':([128,],[173,]),'expression':([50,98,109,114,118,126,149,176,177,189,227,230,236,245,256,257,266,279,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'assign':([104,],[155,]),'block':([33,119,233,252,282,291,],[42,165,258,265,288,292,]),'seen_funccall':([69,],[108,]),'read_quadruple':([190,276,],[224,285,]),'configdirective':([1,5,],[5,5,]),'constant':([82,],[120,]),'print_quadruple':([150,],[192,]),'optionsyesno':([12,],[29,]),'localvardirectiveB':([55,],[102,]),'localvardirective':([41,72,],[56,56,]),'seen_parentheses':([83,],[126,]),'params':([112,202,],[159,234,]),'type':([7,20,34,41,72,112,202,],[15,15,45,15,15,161,161,]),'empty':([1,5,7,14,20,31,40,41,50,72,76,90,94,95,98,109,112,114,118,126,128,134,135,149,156,159,176,177,183,184,185,186,187,188,189,193,205,209,210,215,216,224,227,230,234,236,245,256,257,258,266,279,285,],[8,8,21,35,21,35,35,59,88,59,116,132,142,146,88,88,160,88,88,88,174,116,182,88,116,203,88,214,88,88,88,88,88,88,88,116,237,88,88,88,88,251,88,88,203,88,214,214,88,271,88,88,251,]),'for_expression':([287,],[290,]),'else':([258,],[272,]),'func':([14,31,40,],[33,33,33,]),'declaration':([7,20,41,72,],[20,20,68,68,]),'expB':([135,],[181,]),'declarationB':([36,117,261,],[47,163,274,]),'declarationC':([47,163,274,],[79,206,284,]),'declarationD':([207,],[240,]),'seen_factor_funccall':([89,],[129,]),'declarationsOpt':([7,20,],[14,37,]),'instruction':([41,72,],[72,72,]),'pop_operand':([196,],[231,]),'seen_a_funccall':([231,],[256,]),'outputB':([98,227,],[151,253,]),'outputC':([192,],[228,]),'dimensionsB':([205,],[235,]),'push_operand':([46,108,147,154,264,],[76,156,190,193,276,]),'dimensionsOpt':([76,134,156,193,],[115,178,198,229,]),'seen_a_factor_funccall':([92,],[133,]),'readB':([224,285,],[249,289,]),'seen_ID':([92,],[134,]),'hyperexpressionB':([90,],[130,]),'config':([1,5,],[7,11,]),'elsecondition_quadruple':([270,],[282,]),'funccall':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,209,210,215,216,227,230,236,245,256,257,266,279,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'instructionsOpt':([41,72,],[64,110,]),'returntype':([34,],[44,]),'seen_fconst':([121,],[166,]),'seen_false':([124,],[169,]),'options':([9,10,],[26,27,]),'endfor_quadruple':([292,],[293,]),'assignB':([156,],[197,]),'exp':([50,98,109,114,118,126,149,176,177,183,184,185,186,187,188,189,215,216,227,230,236,245,256,257,266,279,],[94,94,94,94,94,94,94,94,94,217,218,219,220,221,222,94,247,248,94,94,94,94,94,94,94,94,]),'endwhile_quadruple':([265,],[277,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> start_quadruple config body','program',3,'p_program','parser.py',37),
  ('start_quadruple -> <empty>','start_quadruple',0,'p_start_quadruple','parser.py',40),
  ('config -> configdirective config','config',2,'p_config','parser.py',45),
  ('config -> empty','config',1,'p_config','parser.py',46),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',50),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',51),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',52),
  ('options -> SOME','options',1,'p_options','parser.py',55),
  ('options -> ALL','options',1,'p_options','parser.py',56),
  ('options -> MOST','options',1,'p_options','parser.py',57),
  ('options -> NONE','options',1,'p_options','parser.py',58),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',61),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',62),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',66),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',69),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',70),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',73),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',74),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',78),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',86),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',108),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',117),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',121),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',126),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',130),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',148),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',149),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',150),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',158),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',159),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',163),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',166),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',173),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',203),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',227),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',228),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',232),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',235),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',236),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',240),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',247),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',250),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',251),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',257),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',261),
  ('else -> empty','else',1,'p_else','parser.py',262),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',265),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',277),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',286),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',296),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',297),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',298),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',299),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',300),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',301),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',302),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',303),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',304),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',309),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',339),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',344),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',350),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',351),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',355),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',360),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',361),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',362),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',366),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',369),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',370),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',378),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',381),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',382),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',390),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',394),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',395),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',396),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',397),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',398),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',399),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',400),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',409),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',412),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',419),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',420),
  ('expB -> empty','expB',1,'p_expB','parser.py',421),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',425),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',428),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',434),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',435),
  ('termB -> empty','termB',1,'p_termB','parser.py',436),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',442),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',443),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',444),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',445),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',455),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',473),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',477),
  ('signB -> sign','signB',1,'p_signB','parser.py',495),
  ('signB -> empty','signB',1,'p_signB','parser.py',496),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',501),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',506),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',511),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',516),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',521),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',526),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',527),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',528),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',529),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',530),
  ('sign -> +','sign',1,'p_sign','parser.py',542),
  ('sign -> -','sign',1,'p_sign','parser.py',543),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',548),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',551),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',555),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',567),
  ('type -> INT','type',1,'p_type','parser.py',578),
  ('type -> FLOAT','type',1,'p_type','parser.py',579),
  ('type -> STRING','type',1,'p_type','parser.py',580),
  ('type -> BOOL','type',1,'p_type','parser.py',581),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',587),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',588),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',593),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',597),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',612),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',624),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',634),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',637),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',645),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',652),
  ('readB -> empty','readB',1,'p_readB','parser.py',653),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',656),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',659),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',662),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',671),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',672),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',676),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',690),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',691),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',696),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',701),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',702),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',703),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',709),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',737),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',742),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',743),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',746),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',764),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',765),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',769),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',773),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',774),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',779),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',783),
  ('params -> type ID','params',2,'p_params','parser.py',802),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',811),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',812),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',815),
]
