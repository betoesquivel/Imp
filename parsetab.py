
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'j)\xc9k@\xda\xc9\xe8y\xaa\xa1\x17\xfd`\xfe\xd1'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[56,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,56,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'VOID':([33,],[43,]),'SOME':([8,9,],[22,22,]),'WHILE':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[58,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,58,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'/':([50,53,88,90,92,120,121,122,123,124,125,135,149,169,184,186,198,208,225,229,],[-35,-36,128,-77,-123,-75,-81,-83,-82,-85,-84,-78,-123,-76,-116,-118,-115,-111,-117,-114,]),'PRINT':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[59,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,59,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'TRUE':([48,51,56,83,84,85,86,87,89,100,101,112,115,127,128,134,136,137,142,144,161,163,176,177,178,181,182,183,185,190,193,199,218,227,],[-123,-123,-123,-79,125,-123,-86,-87,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,]),'>':([50,53,88,90,92,93,94,120,121,122,123,124,125,129,130,135,138,139,142,149,169,170,171,174,175,184,186,198,208,225,229,],[-35,-36,-123,-77,-123,-123,144,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,178,-123,-76,-73,-72,-69,-68,-116,-118,-115,-111,-117,-114,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,37,40,42,47,49,109,119,132,133,150,207,],[-123,-123,-123,-3,-2,33,-123,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-26,-18,-22,-30,-21,-20,-24,-25,-23,]),'FORGET':([61,],[102,]),'NONE':([8,9,],[23,23,]),'FCONST':([48,51,56,83,84,85,86,87,89,100,101,112,115,127,128,134,136,137,142,144,161,163,176,177,178,181,182,183,185,190,193,199,218,227,],[-123,-123,-123,-79,121,-123,-86,-87,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,]),'NO':([11,],[29,]),')':([50,53,54,88,90,92,93,94,95,112,118,120,121,122,123,124,125,126,129,130,134,135,138,139,140,143,146,148,149,151,152,153,159,160,161,162,164,165,166,167,169,170,171,173,174,175,179,180,184,186,195,196,198,199,203,205,206,208,209,210,211,212,213,214,220,222,224,225,228,229,233,234,],[-35,-36,97,-123,-77,-123,-123,-123,-123,-123,-123,-75,-81,-83,-82,-85,-84,169,-71,-74,-123,-78,-67,-70,-59,-66,-55,-58,-123,187,188,188,-123,198,-113,-112,201,202,-123,-29,-76,-73,-72,198,-69,-68,-60,-61,-116,-118,221,-98,-115,-123,-28,-122,-120,-111,-63,-64,-62,-65,-56,-57,-123,198,-123,-117,-97,-114,-121,236,]),'(':([39,48,51,56,58,59,68,73,74,76,81,85,92,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[54,85,85,85,100,101,108,110,112,115,118,85,134,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([50,53,88,90,92,120,121,122,123,124,125,135,149,169,184,186,198,208,225,229,],[-35,-36,127,-77,-123,-75,-81,-83,-82,-85,-84,-78,-123,-76,-116,-118,-115,-111,-117,-114,]),'-':([48,50,51,53,56,85,88,90,92,93,100,101,112,115,120,121,122,123,124,125,127,128,129,130,134,135,136,137,142,144,149,163,169,170,171,176,177,178,181,182,183,184,185,186,190,193,198,199,208,218,225,227,229,],[87,-35,87,-36,87,87,-123,-77,-123,137,87,87,87,87,-75,-81,-83,-82,-85,-84,87,87,-71,-74,87,-78,87,87,87,87,-123,87,-76,-73,-72,87,87,87,87,87,87,-116,87,-118,87,87,-115,87,-111,87,-117,87,-114,]),',':([35,36,50,52,53,82,88,90,91,92,93,94,95,112,120,121,122,123,124,125,129,130,134,135,138,139,140,143,146,148,149,152,153,159,160,161,162,166,169,170,171,172,173,174,175,179,180,184,186,198,199,206,208,209,210,211,212,213,214,220,222,224,225,229,],[46,-123,-35,-19,-36,46,-123,-77,131,-123,-123,-123,-123,-123,-75,-81,-83,-82,-85,-84,-71,-74,-123,-78,-67,-70,-59,-66,-55,-58,-123,190,190,194,199,-113,-112,204,-76,-73,-72,46,199,-69,-68,-60,-61,-116,-118,-115,-123,-120,-111,-63,-64,-62,-65,-56,-57,194,199,204,-117,-114,]),'SCONST':([48,51,56,83,84,85,86,87,89,100,101,103,112,115,127,128,134,136,137,142,144,161,163,176,177,178,181,182,183,185,190,193,199,218,227,],[-123,-123,-123,-79,122,-123,-86,-87,-80,-123,152,155,-123,-123,-123,-123,-123,-123,-123,-123,-123,-80,-123,-123,-123,-123,-123,-123,-123,-123,152,-123,-123,-123,-123,]),'ID':([14,15,16,17,18,41,43,44,45,46,47,48,49,51,56,60,62,63,65,66,70,71,72,75,77,78,79,85,99,100,101,102,104,105,106,107,108,109,110,112,115,117,119,127,128,131,132,133,134,136,137,142,144,155,156,163,168,176,177,178,181,182,183,185,190,193,194,199,207,216,218,223,227,230,231,235,237,],[-91,-89,36,-90,-92,74,-93,81,-94,36,-18,92,-22,92,92,-46,-52,-108,-110,-47,-109,-48,-44,-45,74,-54,-53,92,-40,92,92,-106,-105,156,-43,-42,157,-30,159,92,92,-41,-21,92,92,36,-20,-24,92,92,92,92,92,-107,-104,92,206,92,92,92,92,92,92,92,92,92,220,92,-23,-88,92,-123,92,-37,-39,-38,-95,]),'TRACKDECISION':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[63,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,63,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),';':([35,36,50,52,53,57,64,67,80,82,88,90,91,92,93,94,95,98,111,113,120,121,122,123,124,125,129,130,135,138,139,140,143,146,148,149,154,158,169,170,171,172,174,175,179,180,184,186,188,189,191,197,198,200,208,209,210,211,212,213,214,217,219,221,225,226,229,],[49,-123,-35,-19,-36,99,106,107,117,49,-123,-77,133,-123,-123,-123,-123,-119,-49,-51,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,-59,-66,-55,-58,-123,-99,193,-76,-73,-72,49,-69,-68,-60,-61,-116,-118,-102,-100,-101,-50,-115,-34,-111,-63,-64,-62,-65,-56,-57,-103,227,-96,-117,-33,-114,]),'=':([1,2,4,35,36,50,52,53,74,82,88,90,92,93,94,114,120,121,122,123,124,125,129,130,135,138,139,141,142,144,149,157,169,170,171,172,174,175,184,186,192,198,208,225,229,],[8,9,11,48,-123,-35,-19,-36,-123,48,-123,-77,-123,-123,141,163,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,176,177,181,-123,-123,-76,-73,-72,48,-69,-68,-116,-118,218,-115,-111,-117,-114,]),'<':([50,53,88,90,92,93,94,120,121,122,123,124,125,129,130,135,138,139,149,169,170,171,174,175,184,186,198,208,225,229,],[-35,-36,-123,-77,-123,-123,142,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,-123,-76,-73,-72,-69,-68,-116,-118,-115,-111,-117,-114,]),'$end':([5,12,30,34,38,40,42,55,109,150,],[0,-1,-123,-15,-14,-123,-26,-13,-30,-25,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,132,133,155,156,204,207,216,223,230,231,235,237,],[-123,-123,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,14,-54,-53,-40,-43,-42,-30,-41,14,-21,-20,-24,-107,-104,14,-23,-88,-123,-37,-39,-38,-95,]),'FOR':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[68,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,68,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'SHOW':([61,],[103,]),'#':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[61,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,61,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'ELSE':([109,223,],[-30,232,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[70,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,70,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'ICONST':([48,51,56,83,84,85,86,87,89,100,101,112,115,127,128,134,136,137,142,144,161,163,176,177,178,181,182,183,185,190,193,199,218,227,],[-123,-123,-123,-79,123,-123,-86,-87,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,]),'INPUT':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[73,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,73,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'[':([36,74,92,149,157,],[51,51,51,185,51,]),']':([50,53,88,90,92,93,94,95,96,120,121,122,123,124,125,129,130,135,138,139,140,143,146,148,149,169,170,171,174,175,179,180,184,186,198,208,209,210,211,212,213,214,215,225,229,],[-35,-36,-123,-77,-123,-123,-123,-123,149,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,-59,-66,-55,-58,-123,-76,-73,-72,-69,-68,-60,-61,-116,-118,-115,-111,-63,-64,-62,-65,-56,-57,225,-117,-114,]),'YES':([11,],[27,]),'IF':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,132,133,155,156,207,216,223,230,231,235,237,],[76,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,76,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'&':([50,53,88,90,92,93,94,95,120,121,122,123,124,125,129,130,135,138,139,140,143,145,149,169,170,171,174,175,179,180,184,186,198,208,209,210,211,212,225,229,],[-35,-36,-123,-77,-123,-123,-123,145,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,-59,-66,182,-123,-76,-73,-72,-69,-68,-60,-61,-116,-118,-115,-111,-63,-64,-62,-65,-117,-114,]),'ALL':([8,9,],[21,21,]),'FALSE':([48,51,56,83,84,85,86,87,89,100,101,112,115,127,128,134,136,137,142,144,161,163,176,177,178,181,182,183,185,190,193,199,218,227,],[-123,-123,-123,-79,124,-123,-86,-87,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-80,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,132,133,155,156,204,207,216,223,230,231,235,237,],[-123,-123,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,15,-54,-53,-40,-43,-42,-30,-41,15,-21,-20,-24,-107,-104,15,-23,-88,-123,-37,-39,-38,-95,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,132,133,155,156,204,207,216,223,230,231,235,237,],[-123,-123,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,17,-54,-53,-40,-43,-42,-30,-41,17,-21,-20,-24,-107,-104,17,-23,-88,-123,-37,-39,-38,-95,]),'|':([50,53,88,90,92,93,94,95,120,121,122,123,124,125,129,130,135,138,139,140,143,147,149,169,170,171,174,175,179,180,184,186,198,208,209,210,211,212,225,229,],[-35,-36,-123,-77,-123,-123,-123,147,-75,-81,-83,-82,-85,-84,-71,-74,-78,-67,-70,-59,-66,183,-123,-76,-73,-72,-69,-68,-60,-61,-116,-118,-115,-111,-63,-64,-62,-65,-117,-114,]),'TRACK':([61,],[104,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,132,133,155,156,204,207,216,223,230,231,235,237,],[-123,-123,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-18,-22,-46,-52,-108,-110,-47,-109,-48,-44,-45,18,-54,-53,-40,-43,-42,-30,-41,18,-21,-20,-24,-107,-104,18,-23,-88,-123,-37,-39,-38,-95,]),'{':([32,97,187,201,202,232,236,],[41,41,41,41,-27,41,41,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,37,38,42,47,49,109,119,132,133,207,],[-123,-123,-123,-3,-2,-123,-123,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-123,39,-15,-16,-14,-26,-18,-22,-30,-21,-20,-24,-23,]),'}':([41,47,49,60,62,63,65,66,69,70,71,72,75,77,78,79,99,106,107,109,116,117,119,132,133,155,156,207,216,223,230,231,235,237,],[-123,-18,-22,-46,-52,-108,-32,-47,109,-109,-48,-44,-45,-123,-54,-53,-40,-43,-42,-30,-31,-41,-21,-20,-24,-107,-104,-23,-88,-123,-37,-39,-38,-95,]),'+':([48,50,51,53,56,85,88,90,92,93,100,101,112,115,120,121,122,123,124,125,127,128,129,130,134,135,136,137,142,144,149,163,169,170,171,176,177,178,181,182,183,184,185,186,190,193,198,199,208,218,225,227,229,],[86,-35,86,-36,86,86,-123,-77,-123,136,86,86,86,86,-75,-81,-83,-82,-85,-84,86,86,-71,-74,86,-78,86,86,86,86,-123,86,-76,-73,-72,86,86,86,86,86,86,-116,86,-118,86,86,-115,86,-111,86,-117,86,-114,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([84,],[120,]),'localdirective':([41,77,],[71,71,]),'assignfunccallB':([74,],[111,]),'assignfunccall':([41,77,],[57,57,]),'paramsOpt':([118,],[165,]),'assignB':([74,],[113,]),'sign':([48,51,56,85,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'localvardirective':([41,77,],[62,62,]),'dimensionsB':([149,],[184,]),'dimensionsOpt':([36,74,92,157,],[52,114,135,192,]),'forloop':([41,77,],[66,66,]),'funccallB':([112,134,199,],[160,173,222,]),'funccallC':([160,173,222,],[197,208,229,]),'dimensions':([36,74,92,157,],[50,50,50,50,]),'optionsyesno':([11,],[28,]),'expressionB':([94,],[140,]),'funcsOpt':([13,30,40,],[31,38,55,]),'localvardirectiveB':([61,],[105,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([118,204,],[166,224,]),'factor':([48,51,56,85,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'input':([41,77,],[64,64,]),'main':([31,],[40,]),'type':([6,19,33,41,77,118,204,],[16,16,45,16,16,168,168,]),'empty':([0,3,6,13,19,30,36,40,41,48,51,56,74,77,85,88,92,93,94,95,100,101,112,115,118,127,128,134,136,137,142,144,149,157,159,163,166,176,177,178,181,182,183,185,190,193,199,218,220,223,224,227,],[7,7,20,34,20,34,53,34,65,89,89,89,53,65,89,130,53,139,143,148,89,89,161,89,167,89,89,161,89,89,89,89,186,53,196,89,205,89,89,89,89,89,89,89,89,89,161,89,196,231,205,89,]),'body':([6,],[12,]),'whileloop':([41,77,],[60,60,]),'return':([41,77,],[67,67,]),'superexpressionB':([95,],[146,]),'funccall':([48,51,56,85,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'instructionsOpt':([41,77,],[69,116,]),'else':([223,],[230,]),'superexpression':([48,51,56,85,100,101,112,115,134,163,182,183,185,190,193,199,218,227,],[91,96,98,126,151,153,162,164,162,200,213,214,215,153,219,162,226,234,]),'paramsB':([166,224,],[203,233,]),'func':([13,30,40,],[32,32,32,]),'declaration':([6,19,41,77,],[19,19,72,72,]),'returntype':([33,],[44,]),'expB':([93,],[138,]),'declarationB':([16,46,131,],[35,82,172,]),'declarationC':([35,82,172,],[47,119,207,]),'declarationD':([91,],[132,]),'condition':([41,77,],[75,75,]),'suprafunc':([13,30,40,],[30,30,30,]),'declarationsOpt':([6,19,],[13,37,]),'term':([48,51,56,85,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[93,93,93,93,93,93,93,93,170,171,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'signB':([48,51,56,85,100,101,112,115,127,128,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'config':([0,3,],[6,10,]),'instruction':([41,77,],[77,77,]),'assign':([108,],[158,]),'inputB':([159,220,],[195,228,]),'localmsgdirective':([41,77,],[78,78,]),'localdecisiondirective':([41,77,],[79,79,]),'termB':([88,],[129,]),'exp':([48,51,56,85,100,101,112,115,134,136,137,142,144,163,176,177,178,181,182,183,185,190,193,199,218,227,],[94,94,94,94,94,94,94,94,94,174,175,179,180,94,209,210,211,212,94,94,94,94,94,94,94,94,]),'outputB':([101,190,],[154,217,]),'output':([41,77,],[80,80,]),'expression':([48,51,56,85,100,101,112,115,134,163,182,183,185,190,193,199,218,227,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'options':([8,9,],[25,26,]),'block':([32,97,187,201,232,236,],[42,150,216,223,235,237,]),'outputC':([152,153,],[189,191,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',15),
  ('config -> configdirective config','config',2,'p_config','parser.py',19),
  ('config -> empty','config',1,'p_config','parser.py',20),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',24),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',25),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',26),
  ('options -> SOME','options',1,'p_options','parser.py',29),
  ('options -> ALL','options',1,'p_options','parser.py',30),
  ('options -> MOST','options',1,'p_options','parser.py',31),
  ('options -> NONE','options',1,'p_options','parser.py',32),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',35),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',36),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',40),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',43),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',44),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',47),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',48),
  ('declaration -> type declarationB declarationC','declaration',3,'p_declaration','parser.py',52),
  ('declarationB -> ID dimensionsOpt','declarationB',2,'p_declarationB','parser.py',55),
  ('declarationC -> = superexpression declarationD','declarationC',3,'p_declarationC','parser.py',73),
  ('declarationC -> , declarationB declarationC','declarationC',3,'p_declarationC','parser.py',74),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',75),
  ('declarationD -> , declarationB declarationC','declarationD',3,'p_declarationD','parser.py',83),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',84),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',88),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',92),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',97),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',108),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',109),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',113),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',116),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',117),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',121),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',128),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',131),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',132),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',137),
  ('else -> ELSE block','else',2,'p_else','parser.py',141),
  ('else -> empty','else',1,'p_else','parser.py',142),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',146),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',147),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',148),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',149),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',150),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',151),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',152),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',153),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',154),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',159),
  ('assignfunccallB -> ( funccallB funccallC','assignfunccallB',3,'p_assignfunccallB','parser.py',174),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',175),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',180),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',181),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',182),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',186),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',189),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',190),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',191),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',195),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',198),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',199),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',200),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',201),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',202),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',203),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',204),
  ('exp -> term expB','exp',2,'p_exp','parser.py',208),
  ('expB -> - exp','expB',2,'p_expB','parser.py',211),
  ('expB -> + exp','expB',2,'p_expB','parser.py',212),
  ('expB -> empty','expB',1,'p_expB','parser.py',213),
  ('term -> factor termB','term',2,'p_term','parser.py',217),
  ('termB -> / term','termB',2,'p_termB','parser.py',220),
  ('termB -> * term','termB',2,'p_termB','parser.py',221),
  ('termB -> empty','termB',1,'p_termB','parser.py',222),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',228),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',229),
  ('factor -> funccall','factor',1,'p_factor','parser.py',230),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',231),
  ('signB -> sign','signB',1,'p_signB','parser.py',234),
  ('signB -> empty','signB',1,'p_signB','parser.py',235),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',239),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',240),
  ('constant -> SCONST','constant',1,'p_constant','parser.py',241),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',242),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',243),
  ('sign -> +','sign',1,'p_sign','parser.py',247),
  ('sign -> -','sign',1,'p_sign','parser.py',248),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',252),
  ('type -> INT','type',1,'p_type','parser.py',256),
  ('type -> FLOAT','type',1,'p_type','parser.py',257),
  ('type -> STRING','type',1,'p_type','parser.py',258),
  ('type -> BOOL','type',1,'p_type','parser.py',259),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',264),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',265),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',270),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',274),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',277),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',278),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',281),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',284),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',285),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',288),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',289),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',293),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',296),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',297),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',301),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',305),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',306),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',307),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',311),
  ('funccallB -> superexpression','funccallB',1,'p_funccallB','parser.py',314),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',315),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',320),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',321),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',325),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',329),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',330),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',335),
  ('params -> type ID','params',2,'p_params','parser.py',339),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',348),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',349),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',352),
]
