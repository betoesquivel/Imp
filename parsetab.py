
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe5,\x11:<M\x02\xd05w\xd1Q\xa0\x0f\xb1\x93'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[49,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,49,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,135,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'READ':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[50,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,50,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[51,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,51,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,128,133,165,166,167,168,169,177,204,207,234,236,242,243,272,274,],[-87,-95,-97,-41,-42,-91,-100,-102,-101,-104,-103,174,-93,-158,-105,-107,-106,-109,-108,-94,-158,-92,-150,-152,-143,-149,-151,-148,]),'PRINT':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[52,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,52,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,138,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'TRUE':([49,79,81,82,83,84,87,90,97,108,113,117,125,130,135,136,138,139,140,142,143,148,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,213,214,215,226,229,230,231,235,244,253,255,256,265,278,],[-158,-23,124,-96,-110,-111,-99,-98,-158,-158,-158,-158,-158,-23,-23,-23,-23,-23,-23,-23,-23,-158,-23,-23,-158,-158,-23,-23,-158,-158,-158,-158,-158,-158,-158,-113,-60,-158,-158,-99,-158,-158,-158,-158,-63,-23,-158,-158,-23,-158,-158,-158,-158,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,142,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,164,205,238,239,283,],[-158,-158,-158,-3,-2,33,-158,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-32,-27,-18,-36,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,130,135,136,138,139,140,142,143,148,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,213,214,215,226,229,230,231,235,244,253,255,256,265,278,],[-158,-23,120,-96,-110,-111,-99,-98,-158,-158,-158,-158,-158,-23,-23,-23,-23,-23,-23,-23,-23,-158,-23,-23,-158,-158,-23,-23,-158,-158,-158,-158,-158,-158,-158,-113,-60,-158,-158,-99,-158,-158,-158,-158,-63,-23,-158,-158,-23,-158,-158,-158,-158,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,129,131,133,134,137,141,144,145,146,147,149,156,157,158,159,165,166,167,168,169,170,172,173,176,177,180,181,189,190,191,195,198,200,202,203,204,207,210,211,212,213,216,217,218,219,220,221,222,223,230,233,234,236,240,241,242,243,244,245,246,247,248,250,255,258,261,263,267,272,274,275,284,286,288,289,],[80,-87,-95,-158,-97,-82,-158,-158,-158,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-67,-69,-158,-158,-73,-80,-70,-72,-20,-127,-133,-46,199,-158,-35,-105,-107,-106,-109,-108,207,-86,-90,-158,-94,-81,-85,-128,224,225,-60,232,-34,-157,-155,-158,-92,-68,243,-147,-146,-79,-78,-76,-77,-74,-75,-71,-158,-63,-158,-150,-152,-89,-88,-143,-149,-158,-145,-84,-83,262,-130,-158,-156,243,-20,243,-151,-148,-128,-158,-124,-129,290,]),'(':([38,49,50,51,52,61,68,70,74,79,82,91,96,97,107,108,113,117,125,130,132,135,136,138,139,140,142,143,148,155,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,214,215,226,229,230,231,235,244,253,255,256,265,278,],[47,82,95,-113,97,103,-59,108,111,-23,-96,-144,148,82,-20,82,82,82,82,-23,176,-23,-23,-23,-23,-23,-23,-23,82,195,-23,-23,82,82,-23,-23,82,82,82,82,82,82,82,-113,-60,82,82,82,82,82,82,-63,-23,82,82,-23,82,82,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,128,133,165,166,167,168,169,177,204,207,234,236,242,243,272,274,],[-87,-95,-97,-41,-42,-91,-100,-102,-101,-104,-103,171,-93,-158,-105,-107,-106,-109,-108,-94,-158,-92,-150,-152,-143,-149,-151,-148,]),'-':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,128,130,133,134,135,136,138,139,140,142,143,148,165,166,167,168,169,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,193,195,204,207,208,209,214,215,226,229,230,231,234,235,236,240,241,242,243,244,253,255,256,265,272,274,278,],[84,-23,-96,-87,-95,-97,-82,84,84,-41,84,-42,84,-91,-100,-102,-101,-104,-103,84,-158,-93,-23,-158,179,-23,-23,-23,-23,-23,-23,-23,84,-105,-107,-106,-109,-108,-23,-86,-90,-23,84,84,-94,-23,-23,84,84,84,84,84,84,84,-113,-60,-158,-92,84,84,84,84,84,84,-63,-23,-150,84,-152,-89,-88,-143,-149,84,-23,84,84,84,-151,-148,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,129,131,133,134,137,141,144,145,146,147,149,158,162,163,165,166,167,168,169,172,173,176,177,180,181,189,191,195,203,204,206,207,210,211,212,213,216,217,218,219,220,221,222,223,230,233,234,236,240,241,242,243,244,245,246,247,255,261,263,267,272,273,274,275,284,],[-20,76,-158,-87,-95,-158,-97,-82,-158,-158,-41,-19,-42,-91,-100,-102,-101,-104,-103,-158,-93,-67,-69,-158,-158,-73,-80,-70,-72,-20,-127,-133,201,76,-24,-105,-107,-106,-109,-108,-86,-90,-158,-94,-81,-85,-128,226,-60,-155,-158,237,-92,-68,244,-147,-146,-79,-78,-76,-77,-74,-75,-71,249,-63,201,-150,-152,-89,-88,-143,-149,-158,-145,-84,-83,-158,244,-20,244,-151,76,-148,-128,249,]),'SCONST':([49,79,81,82,83,84,87,90,97,99,108,113,117,125,130,135,136,138,139,140,142,143,148,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,213,214,215,226,229,230,231,235,244,253,255,256,265,278,],[-158,-23,121,-96,-110,-111,-99,-98,-158,151,-158,-158,-158,-158,-23,-23,-23,-23,-23,-23,-23,-23,-158,-23,-23,-158,-158,-23,-23,-158,-158,-158,-158,-158,-158,-158,-113,-60,-158,-158,-99,-158,-158,-158,-158,-63,-23,-158,-158,-23,-158,-158,-158,-158,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,57,58,59,65,66,67,69,71,72,76,77,78,79,82,95,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,130,135,136,138,139,140,142,143,148,151,152,160,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,205,208,209,214,215,226,229,230,231,235,237,238,239,244,249,253,255,256,257,260,264,265,270,271,276,278,282,283,287,291,292,],[-118,-116,-21,-117,-119,45,68,-120,74,-121,91,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,68,-65,-22,-27,-18,-23,-96,147,91,-138,-137,152,-51,153,-52,-36,-49,91,-50,91,45,91,91,-23,-23,-23,-23,-23,-23,-23,-23,91,-139,-136,203,-23,-23,91,91,-23,-23,91,91,91,91,91,91,91,-113,-60,-26,91,91,91,91,91,91,-63,-23,91,-22,-29,-25,91,147,-23,91,91,-158,45,-115,91,-45,-48,-112,91,-43,-28,-44,-125,-122,]),'TRACKDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[56,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,56,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),';':([45,46,60,62,64,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,129,131,133,134,137,141,144,145,150,154,162,163,165,166,167,168,169,172,173,177,180,181,194,196,204,206,207,210,216,217,218,219,220,221,222,225,227,234,236,240,241,242,243,246,247,252,254,262,266,268,272,273,274,277,279,280,285,],[-20,77,102,104,106,110,-158,-154,-87,-95,-158,-97,-82,-158,-158,-41,-19,-42,-91,-100,-102,-101,-104,-103,-153,-158,-93,-67,-69,-158,-158,-73,-80,-70,-72,-131,193,77,-24,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-58,-62,-158,238,-92,-68,-79,-78,-76,-77,-74,-75,-71,-134,-132,-150,-152,-89,-88,-143,-149,-84,-83,-135,-123,-126,278,-24,-151,77,-148,-24,-61,-40,-39,]),'=':([1,2,4,45,46,68,75,107,112,114,115,153,155,162,192,197,204,228,234,236,272,273,],[8,9,11,-20,79,-59,-158,-20,-41,-19,-42,-20,-158,79,-158,231,-158,253,-150,-152,-151,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,140,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'$end':([5,12,30,34,37,39,41,48,105,164,],[0,-1,-158,-15,-14,-158,-32,-13,-36,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,201,205,238,239,257,264,270,271,276,282,283,287,291,292,],[-158,-158,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,14,-65,-27,-18,-51,-52,-36,-49,-50,14,-139,-136,14,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'FOR':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[61,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,61,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[54,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,54,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'ELSE':([105,257,],[-36,269,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[65,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,65,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'ICONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,130,135,136,138,139,140,142,143,148,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,213,214,215,226,229,230,231,235,244,253,255,256,265,278,],[-158,-23,122,-96,-110,-111,-99,-98,-158,-158,-158,-158,-158,-23,-23,-23,-23,-23,-23,-23,-23,-158,-23,-23,-158,-158,-23,-23,-158,-158,-158,-158,-158,-158,-158,-113,-60,-158,-158,-99,-158,-158,-158,-158,-63,-23,-158,-158,-23,-158,-158,-158,-158,]),'[':([45,68,75,91,107,133,153,155,192,204,],[-20,-59,113,-97,-20,113,-20,113,113,235,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,129,131,133,134,137,141,144,145,161,165,166,167,168,169,172,173,177,180,181,204,207,210,216,217,218,219,220,221,222,234,236,240,241,242,243,246,247,259,272,274,],[-87,-95,-158,-97,-82,-158,-158,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-67,-69,-158,-158,-73,-80,-70,-72,204,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-68,-79,-78,-76,-77,-74,-75,-71,-150,-152,-89,-88,-143,-149,-84,-83,272,-151,-148,]),'YES':([11,],[27,]),'IF':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[70,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,70,-65,-27,-18,-51,-52,-36,-49,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,128,133,134,137,141,165,166,167,168,169,172,173,177,180,181,204,207,216,217,218,219,220,221,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,-158,143,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-73,-80,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-79,-78,-76,-77,-74,-75,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,97,108,113,117,125,130,135,136,138,139,140,142,143,148,171,174,175,176,178,179,182,183,184,185,186,187,188,193,195,208,209,213,214,215,226,229,230,231,235,244,253,255,256,265,278,],[-158,-23,123,-96,-110,-111,-99,-98,-158,-158,-158,-158,-158,-23,-23,-23,-23,-23,-23,-23,-23,-158,-23,-23,-158,-158,-23,-23,-158,-158,-158,-158,-158,-158,-158,-113,-60,-158,-158,-99,-158,-158,-158,-158,-63,-23,-158,-158,-23,-158,-158,-158,-158,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,201,205,238,239,257,264,270,271,276,282,283,287,291,292,],[-158,-158,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,15,-65,-27,-18,-51,-52,-36,-49,-50,15,-139,-136,15,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,139,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,128,133,134,165,166,167,168,169,172,173,177,180,181,204,207,234,236,240,241,242,243,246,247,272,274,],[-87,-95,-97,-82,136,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,201,205,238,239,257,264,270,271,276,282,283,287,291,292,],[-158,-158,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,17,-65,-27,-18,-51,-52,-36,-49,-50,17,-139,-136,17,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,133,134,137,141,144,145,165,166,167,168,169,172,173,177,180,181,204,207,216,217,218,219,220,221,222,234,236,240,241,242,243,246,247,272,274,],[-87,-95,130,-97,-82,-158,-158,-41,-42,-91,-100,-102,-101,-104,-103,-158,-93,-158,-158,-73,-80,-70,-72,-105,-107,-106,-109,-108,-86,-90,-94,-81,-85,-158,-92,-79,-78,-76,-77,-74,-75,-71,-150,-152,-89,-88,-143,-149,-84,-83,-151,-148,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,201,205,238,239,257,264,270,271,276,282,283,287,291,292,],[-158,-158,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-55,-64,-140,-66,-142,-56,-141,-57,-53,-54,18,-65,-27,-18,-51,-52,-36,-49,-50,18,-139,-136,18,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'{':([32,80,118,199,224,232,251,269,281,290,],[40,-31,40,-33,-114,40,40,-47,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,205,238,239,283,],[-158,-158,-158,-3,-2,-158,-158,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-158,38,-15,-16,-14,-32,-27,-18,-36,-26,-29,-25,-28,]),'}':([40,53,55,56,57,58,59,63,65,66,67,69,71,72,77,78,102,104,105,106,109,110,151,152,205,238,239,257,264,270,271,276,282,283,287,291,292,],[-158,-55,-64,-140,-66,-38,-56,105,-141,-57,-53,-54,-158,-65,-27,-18,-51,-52,-36,-49,-37,-50,-139,-136,-26,-29,-25,-158,-115,-45,-48,-112,-43,-28,-44,-125,-122,]),'+':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,128,130,133,134,135,136,138,139,140,142,143,148,165,166,167,168,169,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,193,195,204,207,208,209,214,215,226,229,230,231,234,235,236,240,241,242,243,244,253,255,256,265,272,274,278,],[83,-23,-96,-87,-95,-97,-82,83,83,-41,83,-42,83,-91,-100,-102,-101,-104,-103,83,-158,-93,-23,-158,178,-23,-23,-23,-23,-23,-23,-23,83,-105,-107,-106,-109,-108,-23,-86,-90,-23,83,83,-94,-23,-23,83,83,83,83,83,83,83,-113,-60,-158,-92,83,83,83,83,83,83,-63,-23,-150,83,-152,-89,-88,-143,-149,83,-23,83,83,83,-151,-148,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[157,]),'superexpressionB':([94,],[144,]),'while_quadruple':([224,],[251,]),'seen_term':([92,],[134,]),'validate_id':([95,249,],[146,263,]),'for_quadruple':([254,],[266,]),'forloop':([40,71,],[59,59,]),'seen_iconst':([122,],[167,]),'signB':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,208,209,214,215,226,229,235,244,255,256,265,278,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([271,],[282,]),'expressionB':([93,],[137,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,130,135,136,138,139,140,142,143,171,174,178,179,231,253,],[117,175,182,183,184,185,186,187,188,208,209,214,215,256,265,]),'program':([0,],[5,]),'factor':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,208,209,214,215,226,229,235,244,255,256,265,278,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[60,60,]),'read':([40,71,],[62,62,]),'paramsB':([158,233,],[200,258,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([163,268,277,],[206,280,285,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,208,209,214,215,226,229,235,244,255,256,265,278,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,240,241,92,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([51,193,],[96,229,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[166,]),'assignfunccallB':([155,],[194,]),'sign':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,208,209,214,215,226,229,235,244,255,256,265,278,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([211,261,267,],[242,274,279,]),'funccallB':([176,244,255,],[211,261,267,]),'dimensions':([75,133,155,192,],[112,112,112,112,]),'condition_quadruple':([156,],[198,]),'hyperexpression':([49,97,108,113,117,125,148,175,176,226,229,235,244,255,256,265,278,],[85,149,156,161,163,170,190,210,212,149,254,259,212,212,268,277,286,]),'seen_param':([212,],[245,]),'body':([6,],[12,]),'whileloop':([40,71,],[53,53,]),'superexpression':([49,97,108,113,117,125,148,175,176,188,226,229,235,244,255,256,265,278,],[89,89,89,89,89,89,89,89,89,222,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[64,64,]),'seen_main':([80,],[118,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[169,]),'repush_type':([76,237,],[116,260,]),'localmsgdirective':([40,71,],[57,57,]),'termB':([127,],[172,]),'expression':([49,97,108,113,117,125,148,175,176,188,226,229,235,244,255,256,265,278,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([103,],[154,]),'block':([32,118,232,251,281,290,],[41,164,257,264,287,291,]),'seen_funccall':([68,],[107,]),'read_quadruple':([189,275,],[223,284,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([149,],[191,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([54,],[101,]),'localvardirective':([40,71,],[55,55,]),'seen_parentheses':([82,],[125,]),'params':([111,201,],[158,233,]),'type':([6,19,33,40,71,111,201,],[16,16,44,16,16,160,160,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,97,108,111,113,117,125,127,133,134,148,155,158,175,176,182,183,184,185,186,187,188,192,204,208,209,214,215,223,226,229,233,235,244,255,256,257,265,278,284,],[7,7,20,34,20,34,34,58,87,58,115,131,141,145,87,87,159,87,87,87,173,115,181,87,115,202,87,213,87,87,87,87,87,87,87,115,236,87,87,87,87,250,87,87,202,87,213,213,87,270,87,87,250,]),'for_expression':([286,],[289,]),'else':([257,],[271,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([134,],[180,]),'declarationB':([35,116,260,],[46,162,273,]),'declarationC':([46,162,273,],[78,205,283,]),'declarationD':([206,],[239,]),'seen_factor_funccall':([88,],[128,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([195,],[230,]),'seen_a_funccall':([230,],[255,]),'outputB':([97,226,],[150,252,]),'outputC':([191,],[227,]),'dimensionsB':([204,],[234,]),'push_operand':([45,107,146,153,263,],[75,155,189,192,275,]),'dimensionsOpt':([75,133,155,192,],[114,177,197,228,]),'seen_a_factor_funccall':([91,],[132,]),'readB':([223,284,],[248,288,]),'seen_ID':([91,],[133,]),'hyperexpressionB':([89,],[129,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([269,],[281,]),'funccall':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,208,209,214,215,226,229,235,244,255,256,265,278,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[63,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[165,]),'seen_false':([123,],[168,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([291,],[292,]),'assignB':([155,],[196,]),'exp':([49,97,108,113,117,125,148,175,176,182,183,184,185,186,187,188,214,215,226,229,235,244,255,256,265,278,],[93,93,93,93,93,93,93,93,93,216,217,218,219,220,221,93,246,247,93,93,93,93,93,93,93,93,]),'endwhile_quadruple':([264,],[276,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',26),
  ('config -> configdirective config','config',2,'p_config','parser.py',30),
  ('config -> empty','config',1,'p_config','parser.py',31),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',35),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',36),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',37),
  ('options -> SOME','options',1,'p_options','parser.py',40),
  ('options -> ALL','options',1,'p_options','parser.py',41),
  ('options -> MOST','options',1,'p_options','parser.py',42),
  ('options -> NONE','options',1,'p_options','parser.py',43),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',46),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',47),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',51),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',54),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',55),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',58),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',59),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',63),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',71),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',93),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',102),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',106),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',111),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',115),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',133),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',134),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',135),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',143),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',144),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',148),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',151),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',157),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',177),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',201),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',202),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',206),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',209),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',210),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',214),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',221),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',224),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',225),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',231),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',235),
  ('else -> empty','else',1,'p_else','parser.py',236),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',239),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',251),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',260),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',270),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',271),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',272),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',273),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',274),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',275),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',276),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',277),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',278),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',283),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',313),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',318),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',324),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',325),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',329),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',334),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',335),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',336),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',340),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',343),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',344),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',352),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',355),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',356),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',364),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',368),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',369),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',370),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',371),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',372),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',373),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',374),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',383),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',386),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',393),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',394),
  ('expB -> empty','expB',1,'p_expB','parser.py',395),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',399),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',402),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',408),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',409),
  ('termB -> empty','termB',1,'p_termB','parser.py',410),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',416),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',417),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',418),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',419),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',429),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',432),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',436),
  ('signB -> sign','signB',1,'p_signB','parser.py',454),
  ('signB -> empty','signB',1,'p_signB','parser.py',455),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',460),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',465),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',470),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',475),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',480),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',485),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',486),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',487),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',488),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',489),
  ('sign -> +','sign',1,'p_sign','parser.py',501),
  ('sign -> -','sign',1,'p_sign','parser.py',502),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',507),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',510),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',514),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',526),
  ('type -> INT','type',1,'p_type','parser.py',537),
  ('type -> FLOAT','type',1,'p_type','parser.py',538),
  ('type -> STRING','type',1,'p_type','parser.py',539),
  ('type -> BOOL','type',1,'p_type','parser.py',540),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',546),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',547),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',552),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',556),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',571),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',583),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',593),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',596),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',604),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',611),
  ('readB -> empty','readB',1,'p_readB','parser.py',612),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',615),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',618),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',621),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',630),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',631),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',635),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',638),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',639),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',643),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',647),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',648),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',649),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',653),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',681),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',686),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',687),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',690),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',708),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',709),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',713),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',717),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',718),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',723),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',727),
  ('params -> type ID','params',2,'p_params','parser.py',746),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',755),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',756),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',759),
]
