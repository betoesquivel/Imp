
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x1e\x07\xaf\x85\xa5\x17\x10\xc1Rk\xb4\xbd\xb3\xc8\x8b*'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[49,-51,-58,-126,-128,-52,-127,-53,-49,-50,49,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,133,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[51,-51,-58,-126,-128,-52,-127,-53,-49,-50,51,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'/':([86,88,91,112,115,119,120,121,122,123,124,126,131,165,166,167,168,169,179,207,210,214,215,239,241,263,268,],[-81,-87,-90,-40,-41,-85,-93,-95,-94,-97,-96,174,-141,-98,-100,-99,-102,-101,-88,-141,-86,-129,-133,-134,-136,-132,-135,]),'PRINT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[52,-51,-58,-126,-128,-52,-127,-53,-49,-50,52,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,136,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'TRUE':([49,79,81,82,83,84,87,90,96,97,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[-141,-23,124,-89,-103,-104,-92,-91,-141,-141,-141,-141,-141,-141,-23,-141,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,-141,-92,-23,-23,-141,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,140,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,118,208,243,244,272,],[-141,-141,-141,-3,-2,33,-141,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-31,-27,-18,-35,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,96,97,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[-141,-23,120,-89,-103,-104,-92,-91,-141,-141,-141,-141,-141,-141,-23,-141,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,-141,-92,-23,-23,-141,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,126,127,129,130,131,132,135,139,142,143,144,145,146,152,154,157,158,159,160,165,166,167,168,169,170,172,173,176,177,178,179,182,183,192,193,197,198,199,203,205,206,207,210,213,214,215,216,219,220,221,222,223,224,225,227,233,235,238,239,241,245,246,247,248,249,254,260,263,265,268,],[80,-81,-87,-141,-90,-76,-141,-141,-141,-40,-41,-85,-93,-95,-94,-97,-96,-141,-61,-63,-141,-141,-141,-67,-74,-64,-66,191,-20,-119,-141,-55,201,202,-141,-34,-98,-100,-99,-102,-101,210,-80,-84,215,-130,-131,-88,-75,-79,-119,228,234,-115,-141,-33,-140,-138,-141,-86,-62,-129,-133,-141,-73,-72,-70,-71,-68,-69,-65,228,-141,215,-141,-134,-136,-83,-82,215,-78,-77,-114,-139,-132,271,-135,]),'(':([38,49,51,52,61,66,67,69,74,79,82,91,96,97,107,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[47,82,96,97,104,106,-20,108,111,-23,-89,130,82,82,154,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,82,-23,-23,82,82,82,82,82,82,82,82,82,-23,82,82,82,82,82,82,82,82,-23,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,126,131,165,166,167,168,169,179,207,210,214,215,239,241,263,268,],[-81,-87,-90,-40,-41,-85,-93,-95,-94,-97,-96,171,-141,-98,-100,-99,-102,-101,-88,-141,-86,-129,-133,-134,-136,-132,-135,]),'-':([49,79,82,86,88,91,92,96,97,108,112,113,115,117,119,120,121,122,123,124,125,126,128,130,131,132,133,134,136,137,138,140,141,154,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,195,199,200,207,210,211,212,214,215,216,217,218,229,236,239,240,241,245,246,252,253,263,264,268,],[84,-23,-89,-81,-87,-90,-76,84,84,84,-40,84,-41,84,-85,-93,-95,-94,-97,-96,84,-141,-23,84,-141,181,-23,-23,-23,-23,-23,-23,-23,-55,-98,-100,-99,-102,-101,-23,-80,-84,-23,84,-88,-23,-23,84,84,84,84,84,84,84,84,84,-23,-141,-86,84,84,-129,-133,84,84,84,84,84,-134,84,-136,-83,-82,-23,84,-132,84,-135,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,129,130,131,132,135,139,142,143,145,146,152,154,159,163,164,165,166,167,168,169,172,173,176,177,178,179,182,183,192,193,199,206,207,209,210,213,214,215,216,219,220,221,222,223,224,225,227,233,235,238,239,241,245,246,247,248,249,263,268,269,],[-20,76,-141,-81,-87,-141,-90,-76,-141,-141,-40,-19,-41,-85,-93,-95,-94,-97,-96,-141,-61,-63,-141,-141,-141,-67,-74,-64,-66,-20,-119,196,-55,204,76,-24,-98,-100,-99,-102,-101,-80,-84,216,-130,-131,-88,-75,-79,-119,229,-141,-138,-141,242,-86,-62,-129,-133,-141,-73,-72,-70,-71,-68,-69,-65,229,196,216,204,-134,-136,-83,-82,216,-78,-77,-132,-135,76,]),'SCONST':([49,79,81,82,83,84,87,90,96,97,99,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[-141,-23,121,-89,-103,-104,-92,-91,-141,145,148,-141,-141,-141,-141,-23,-141,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,-141,-92,-23,-23,-141,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,-141,-141,-141,145,-141,-141,-23,-141,-141,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,58,59,63,64,65,68,70,71,72,76,77,78,79,82,95,96,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,128,130,133,134,136,137,138,140,141,148,149,154,161,171,174,175,180,181,184,185,186,187,188,189,190,195,196,199,200,208,211,212,216,217,218,226,229,236,237,240,242,243,244,252,253,258,259,262,264,267,272,274,],[-108,-106,-21,-107,-109,45,67,-110,74,-111,91,-51,-58,-126,-128,-52,-127,-53,-49,-50,67,-60,-59,-22,-27,-18,-23,-89,-45,91,91,-124,-123,149,-48,-47,150,-35,152,91,-46,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,-125,-122,-55,206,-23,-23,91,-23,-23,91,91,91,91,91,91,91,91,233,91,-23,-26,91,91,91,91,91,-105,91,91,-141,91,-22,-29,-25,-23,91,-42,-44,45,91,-43,-28,-112,]),'TRACKDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[56,-51,-58,-126,-128,-52,-127,-53,-49,-50,56,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),';':([45,46,50,57,60,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,129,131,132,135,139,142,143,147,151,153,155,163,164,165,166,167,168,169,172,173,179,182,183,207,209,210,213,214,215,219,220,221,222,223,224,225,228,230,232,234,239,241,245,246,248,249,250,251,255,256,263,266,268,269,270,273,],[-20,77,95,102,103,110,-141,-137,-81,-87,-141,-90,-76,-141,-141,-40,-19,-41,-85,-93,-95,-94,-97,-96,-141,-61,-63,-141,-141,-67,-74,-64,-66,-116,195,-54,-57,77,-24,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,243,-86,-62,-129,-133,-73,-72,-70,-71,-68,-69,-65,-120,-118,253,-113,-134,-136,-83,-82,-78,-77,-117,-121,-56,-24,-132,-39,-135,77,-24,-38,]),'=':([1,2,4,45,46,67,75,107,112,114,115,150,156,163,194,207,231,239,241,268,269,],[8,9,11,-20,79,-20,-141,-141,-40,-19,-41,-20,200,79,-141,-141,252,-134,-136,-135,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,138,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'$end':([5,12,30,34,37,39,41,48,105,118,],[0,-1,-141,-15,-14,-141,-31,-13,-35,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,111,148,149,204,208,226,237,243,244,258,259,267,272,274,],[-141,-141,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-51,-58,-126,-128,-52,-127,-53,-49,-50,14,-60,-59,-27,-18,-45,-48,-47,-35,-46,14,-125,-122,14,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'FOR':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[61,-51,-58,-126,-128,-52,-127,-53,-49,-50,61,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[54,-51,-58,-126,-128,-52,-127,-53,-49,-50,54,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'ELSE':([105,237,],[-35,257,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[63,-51,-58,-126,-128,-52,-127,-53,-49,-50,63,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'ICONST':([49,79,81,82,83,84,87,90,96,97,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[-141,-23,122,-89,-103,-104,-92,-91,-141,-141,-141,-141,-141,-141,-23,-141,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,-141,-92,-23,-23,-141,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,]),'INPUT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[66,-51,-58,-126,-128,-52,-127,-53,-49,-50,66,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'[':([45,67,75,91,107,131,150,194,207,],[-20,-20,113,-90,113,113,-20,113,240,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,126,127,129,131,132,135,139,142,143,162,165,166,167,168,169,172,173,179,182,183,207,210,213,214,215,219,220,221,222,223,224,225,239,241,245,246,248,249,261,263,268,],[-81,-87,-141,-90,-76,-141,-141,-40,-41,-85,-93,-95,-94,-97,-96,-141,-61,-63,-141,-141,-67,-74,-64,-66,207,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-62,-129,-133,-73,-72,-70,-71,-68,-69,-65,-134,-136,-83,-82,-78,-77,268,-132,-135,]),'YES':([11,],[27,]),'IF':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,148,149,208,226,237,243,244,258,259,267,272,274,],[69,-51,-58,-126,-128,-52,-127,-53,-49,-50,69,-60,-59,-27,-18,-45,-48,-47,-35,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,126,131,132,135,139,165,166,167,168,169,172,173,179,182,183,207,210,214,215,219,220,221,222,223,224,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,-141,141,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-67,-74,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-73,-72,-70,-71,-68,-69,-134,-136,-83,-82,-78,-77,-132,-135,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,96,97,108,113,117,125,128,130,133,134,136,137,138,140,141,154,171,174,175,178,180,181,184,185,186,187,188,189,190,195,199,200,211,212,216,217,218,229,236,240,252,253,264,],[-141,-23,123,-89,-103,-104,-92,-91,-141,-141,-141,-141,-141,-141,-23,-141,-23,-23,-23,-23,-23,-23,-23,-55,-23,-23,-141,-92,-23,-23,-141,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,-141,-141,-141,-141,-141,-141,-23,-141,-141,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,111,148,149,204,208,226,237,243,244,258,259,267,272,274,],[-141,-141,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-51,-58,-126,-128,-52,-127,-53,-49,-50,15,-60,-59,-27,-18,-45,-48,-47,-35,-46,15,-125,-122,15,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,137,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,126,131,132,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,263,268,],[-81,-87,-90,-76,134,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-134,-136,-83,-82,-78,-77,-132,-135,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,111,148,149,204,208,226,237,243,244,258,259,267,272,274,],[-141,-141,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-51,-58,-126,-128,-52,-127,-53,-49,-50,17,-60,-59,-27,-18,-45,-48,-47,-35,-46,17,-125,-122,17,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,126,131,132,135,139,142,143,165,166,167,168,169,172,173,179,182,183,207,210,214,215,219,220,221,222,223,224,225,239,241,245,246,248,249,263,268,],[-81,-87,128,-90,-76,-141,-141,-40,-41,-85,-93,-95,-94,-97,-96,-141,-141,-141,-67,-74,-64,-66,-98,-100,-99,-102,-101,-80,-84,-88,-75,-79,-141,-86,-129,-133,-73,-72,-70,-71,-68,-69,-65,-134,-136,-83,-82,-78,-77,-132,-135,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,95,102,103,105,110,111,148,149,204,208,226,237,243,244,258,259,267,272,274,],[-141,-141,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-51,-58,-126,-128,-52,-127,-53,-49,-50,18,-60,-59,-27,-18,-45,-48,-47,-35,-46,18,-125,-122,18,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'{':([32,80,191,201,202,257,271,],[40,40,40,40,-32,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,208,243,244,272,],[-141,-141,-141,-3,-2,-141,-141,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-141,38,-15,-16,-14,-31,-27,-18,-35,-26,-29,-25,-28,]),'}':([40,53,55,56,58,59,62,63,64,65,68,70,71,72,77,78,95,102,103,105,109,110,148,149,208,226,237,243,244,258,259,267,272,274,],[-141,-51,-58,-126,-37,-52,105,-127,-53,-49,-50,-141,-60,-59,-27,-18,-45,-48,-47,-35,-36,-46,-125,-122,-26,-105,-141,-29,-25,-42,-44,-43,-28,-112,]),'+':([49,79,82,86,88,91,92,96,97,108,112,113,115,117,119,120,121,122,123,124,125,126,128,130,131,132,133,134,136,137,138,140,141,154,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,195,199,200,207,210,211,212,214,215,216,217,218,229,236,239,240,241,245,246,252,253,263,264,268,],[83,-23,-89,-81,-87,-90,-76,83,83,83,-40,83,-41,83,-85,-93,-95,-94,-97,-96,83,-141,-23,83,-141,180,-23,-23,-23,-23,-23,-23,-23,-55,-98,-100,-99,-102,-101,-23,-80,-84,-23,83,-88,-23,-23,83,83,83,83,83,83,83,83,83,-23,-141,-86,83,83,-129,-133,83,83,83,83,83,-134,83,-136,-83,-82,-23,83,-132,83,-135,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([81,],[119,]),'localdirective':([40,70,],[64,64,]),'assignfunccallB':([107,],[153,]),'pop_operand':([154,],[199,]),'assignfunccall':([40,70,],[50,50,]),'paramsOpt':([111,],[158,]),'assignB':([107,],[155,]),'expB':([132,],[182,]),'sign':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,211,212,216,217,218,229,236,240,253,264,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'localvardirective':([40,70,],[55,55,]),'push_operator':([79,128,133,134,136,137,138,140,141,171,174,180,181,200,252,],[117,175,184,185,186,187,188,189,190,211,212,217,218,236,264,]),'seen_term':([92,],[132,]),'dimensionsB':([207,],[239,]),'push_operand':([45,67,145,150,],[75,107,192,194,]),'dimensionsOpt':([75,107,131,194,],[114,156,179,231,]),'forloop':([40,70,],[59,59,]),'seen_ID':([91,],[131,]),'funccallC':([176,235,247,],[214,255,263,]),'dimensions':([75,107,131,194,],[112,112,112,112,]),'optionsyesno':([11,],[28,]),'expressionB':([93,],[135,]),'funcsOpt':([13,30,39,],[31,37,48,]),'localvardirectiveB':([54,],[101,]),'configdirective':([0,3,],[3,3,]),'hyperexpression':([49,96,97,108,113,117,125,130,175,195,199,216,229,236,240,253,264,],[85,144,146,157,162,164,170,177,213,232,177,177,146,256,261,265,270,]),'seen_parentheses':([82,],[125,]),'hyperexpressionB':([89,],[127,]),'program':([0,],[5,]),'params':([111,204,],[159,238,]),'factor':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,211,212,216,217,218,229,236,240,253,264,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'funccallB':([130,199,216,],[176,235,247,]),'input':([40,70,],[57,57,]),'main':([31,],[39,]),'type':([6,19,33,40,70,111,204,],[16,16,44,16,16,161,161,]),'empty':([0,3,6,13,19,30,39,40,49,70,75,89,93,94,96,97,107,108,111,113,117,125,126,130,131,132,152,159,175,184,185,186,187,188,189,190,194,195,199,207,211,212,216,217,218,229,233,236,237,238,240,253,264,],[7,7,20,34,20,34,34,58,87,58,115,129,139,143,87,87,115,87,160,87,87,87,173,178,115,183,198,205,87,87,87,87,87,87,87,87,115,87,178,241,87,87,178,87,87,87,198,87,259,205,87,87,87,]),'body':([6,],[12,]),'whileloop':([40,70,],[53,53,]),'return':([40,70,],[60,60,]),'superexpressionB':([94,],[142,]),'funccall':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,211,212,216,217,218,229,236,240,253,264,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'seen_iconst':([122,],[167,]),'seen_fconst':([120,],[165,]),'instructionsOpt':([40,70,],[62,109,]),'else':([237,],[258,]),'superexpression':([49,96,97,108,113,117,125,130,175,190,195,199,216,229,236,240,253,264,],[89,89,89,89,89,89,89,89,89,225,89,89,89,89,89,89,89,89,]),'paramsB':([159,238,],[203,260,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,70,],[19,19,65,65,]),'returntype':([33,],[43,]),'seen_factor':([86,],[126,]),'declarationB':([35,116,262,],[46,163,269,]),'declarationC':([46,163,269,],[78,208,272,]),'declarationD':([209,],[244,]),'quadruple_assign':([164,256,270,],[209,266,273,]),'condition':([40,70,],[68,68,]),'suprafunc':([13,30,39,],[30,30,30,]),'declarationsOpt':([6,19,],[13,36,]),'term':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,211,212,216,217,218,229,236,240,253,264,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,245,246,92,92,92,92,92,92,92,92,]),'seen_false':([123,],[168,]),'signB':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,211,212,216,217,218,229,236,240,253,264,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'config':([0,3,],[6,10,]),'push_type':([16,],[35,]),'instruction':([40,70,],[70,70,]),'print_quadruple':([146,192,],[193,227,]),'repush_type':([76,242,],[116,262,]),'assign':([104,],[151,]),'inputB':([152,233,],[197,254,]),'localmsgdirective':([40,70,],[71,71,]),'localdecisiondirective':([40,70,],[72,72,]),'termB':([126,],[172,]),'exp':([49,96,97,108,113,117,125,130,175,184,185,186,187,188,189,190,195,199,216,217,218,229,236,240,253,264,],[93,93,93,93,93,93,93,93,93,219,220,221,222,223,224,93,93,93,93,248,249,93,93,93,93,93,]),'seen_true':([124,],[169,]),'outputB':([97,229,],[147,251,]),'output':([40,70,],[73,73,]),'seen_sconst':([121,],[166,]),'expression':([49,96,97,108,113,117,125,130,175,190,195,199,216,229,236,240,253,264,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'options':([8,9,],[25,26,]),'block':([32,80,191,201,257,271,],[41,118,226,237,267,274,]),'outputC':([193,227,],[230,250,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',58),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',77),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',84),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',88),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',93),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',97),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',115),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',116),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',117),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',125),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',126),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',130),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',134),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',139),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',150),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',151),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',155),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',158),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',159),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',163),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',170),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',173),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',174),
  ('condition -> IF ( hyperexpression ) block else','condition',6,'p_condition','parser.py',180),
  ('else -> ELSE block','else',2,'p_else','parser.py',184),
  ('else -> empty','else',1,'p_else','parser.py',185),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',189),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',190),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',191),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',192),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',193),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',194),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',195),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',196),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',197),
  ('assignfunccall -> ID push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',202),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',218),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',224),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',225),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',230),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',231),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',232),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',236),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',239),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',240),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',248),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',251),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',252),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',260),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',264),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',265),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',266),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',267),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',268),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',269),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',270),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',279),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',282),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',289),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',290),
  ('expB -> empty','expB',1,'p_expB','parser.py',291),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',295),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',298),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',304),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',305),
  ('termB -> empty','termB',1,'p_termB','parser.py',306),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',312),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',313),
  ('factor -> funccall','factor',1,'p_factor','parser.py',314),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',315),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',325),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',329),
  ('signB -> sign','signB',1,'p_signB','parser.py',340),
  ('signB -> empty','signB',1,'p_signB','parser.py',341),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',346),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',351),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',356),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',361),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',366),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',371),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',372),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',373),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',374),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',375),
  ('sign -> +','sign',1,'p_sign','parser.py',387),
  ('sign -> -','sign',1,'p_sign','parser.py',388),
  ('whileloop -> WHILE ( hyperexpression ) block','whileloop',5,'p_whileloop','parser.py',393),
  ('type -> INT','type',1,'p_type','parser.py',397),
  ('type -> FLOAT','type',1,'p_type','parser.py',398),
  ('type -> STRING','type',1,'p_type','parser.py',399),
  ('type -> BOOL','type',1,'p_type','parser.py',400),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',406),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',407),
  ('forloop -> FOR ( assign ; hyperexpression ; hyperexpression ) block','forloop',9,'p_forloop','parser.py',412),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',416),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',419),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',420),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',423),
  ('outputB -> SCONST push_operand print_quadruple outputC','outputB',4,'p_outputB','parser.py',426),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',427),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',430),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',437),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',438),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',442),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',445),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',446),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',450),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',454),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',455),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',456),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',460),
  ('funccallB -> hyperexpression','funccallB',1,'p_funccallB','parser.py',472),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',473),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',478),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',479),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',483),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',487),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',488),
  ('return -> RETURN hyperexpression','return',2,'p_return','parser.py',493),
  ('params -> type ID','params',2,'p_params','parser.py',497),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',506),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',507),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',510),
]
