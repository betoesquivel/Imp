
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf8\x02,g\xbd\xdb\xea\xdez~jX\t\xbf\xb9t'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,123,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,123,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'VOID':([32,],[39,]),'SOME':([8,9,],[21,21,]),'WHILE':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,125,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,125,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'PRINT':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,126,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,126,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'{':([66,148,201,212,227,230,],[96,96,96,96,96,96,]),'TRUE':([44,49,53,54,55,56,57,59,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[-119,-119,-78,74,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'>':([43,45,58,60,62,63,64,70,71,72,73,74,78,79,82,85,86,89,105,106,107,108,110,111,113,114,152,153,185,200,],[-34,-35,-119,-76,-119,-119,91,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,118,-75,-72,-71,-113,-108,-110,-68,-67,-109,-112,-114,-111,]),'DEF':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,31,33,35,37,51,52,69,97,103,104,150,172,181,],[-119,-119,-119,-3,-2,32,-119,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,32,-18,-16,32,-22,-19,-21,-25,-20,-24,-23,-29,-26,]),'FORGET':([128,],[168,]),'#':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,128,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,128,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'FCONST':([44,49,53,54,55,56,57,59,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[-119,-119,-78,71,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'NO':([11,],[28,]),')':([43,45,46,58,60,62,63,64,65,67,70,71,72,73,74,75,78,79,81,82,85,86,87,90,93,95,98,99,100,105,106,107,108,110,111,112,113,114,116,119,149,152,153,155,156,157,158,159,160,175,182,183,185,186,187,188,189,195,198,200,209,210,213,218,221,224,228,],[-34,-35,66,-119,-76,-119,-119,-119,-119,-119,-83,-80,-81,-74,-82,105,-70,-73,111,-77,-66,-69,-58,-65,-54,-57,148,-28,-27,-75,-72,-71,-113,-108,-110,153,-68,-67,-59,-60,-119,-109,-112,-62,-63,-61,-64,-55,-56,111,-116,-118,-114,153,201,202,202,-119,212,-111,219,-95,-119,-119,-117,-94,230,]),'(':([36,44,48,49,55,62,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,125,126,135,140,141,143,154,163,164,175,178,197,204,207,216,223,],[46,55,67,55,55,81,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,163,164,171,173,175,178,55,55,55,55,55,55,55,55,55,55,]),'VARSCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([43,45,58,60,62,70,71,72,73,74,82,105,108,110,111,152,153,185,200,],[-34,-35,76,-76,-119,-83,-80,-81,-74,-82,-77,-75,-113,-108,-110,-109,-112,-114,-111,]),'-':([43,44,45,49,55,58,60,62,63,70,71,72,73,74,76,77,78,79,81,82,83,84,89,91,105,106,107,108,109,110,111,115,117,118,120,121,122,123,152,153,154,163,164,175,178,185,197,200,204,207,216,223,],[-34,57,-35,57,57,-119,-76,-119,84,-83,-80,-81,-74,-82,57,57,-70,-73,57,-77,57,57,57,57,-75,-72,-71,-113,57,-108,-110,57,57,57,57,57,57,57,-109,-112,57,57,57,57,57,-114,57,-111,57,57,57,57,]),',':([34,42,43,45,58,60,62,63,64,65,68,70,71,72,73,74,78,79,82,85,86,87,90,93,95,105,106,107,108,110,111,112,113,114,116,119,149,152,153,155,156,157,158,159,160,185,186,188,189,195,200,213,218,],[-119,50,-34,-35,-119,-76,-119,-119,-119,-119,102,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-75,-72,-71,-113,-108,-110,154,-68,-67,-59,-60,184,-109,-112,-62,-63,-61,-64,-55,-56,-114,154,204,204,208,-111,184,208,]),'/':([43,45,58,60,62,70,71,72,73,74,82,105,108,110,111,152,153,185,200,],[-34,-35,77,-76,-119,-83,-80,-81,-74,-82,-77,-75,-113,-108,-110,-109,-112,-114,-111,]),'TRACKDECISION':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,130,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,130,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),';':([34,42,43,45,58,60,62,63,64,65,68,70,71,72,73,74,78,79,82,85,86,87,90,93,95,105,106,107,108,110,111,113,114,116,119,124,131,134,147,152,153,155,156,157,158,159,160,161,174,176,185,190,194,196,200,202,203,205,211,215,217,219,222,],[-119,51,-34,-35,-119,-76,-119,-119,-119,-119,104,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-75,-72,-71,-113,-108,-110,-68,-67,-59,-60,162,169,170,180,-109,-112,-62,-63,-61,-64,-55,-56,-115,-48,-50,-114,-96,207,-49,-111,-99,-97,-98,-33,-100,223,-93,-32,]),'=':([1,2,4,34,42,43,45,58,60,62,63,64,70,71,72,73,74,78,79,82,85,86,88,89,91,105,106,107,108,110,111,113,114,141,152,153,177,185,193,200,206,],[8,9,11,-119,49,-34,-35,-119,-76,-119,-119,88,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,115,117,120,-75,-72,-71,-113,-108,-110,-68,-67,-119,-109,-112,197,-114,-119,-111,216,]),'<':([43,45,58,60,62,63,64,70,71,72,73,74,78,79,82,85,86,105,106,107,108,110,111,113,114,152,153,185,200,],[-34,-35,-119,-76,-119,-119,89,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-75,-72,-71,-113,-108,-110,-68,-67,-109,-112,-114,-111,]),'$end':([5,12,30,31,37,38,47,97,172,181,],[0,-1,-15,-119,-119,-14,-13,-25,-29,-26,]),'STRING':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,67,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,164,165,169,170,172,180,184,191,192,204,214,220,225,226,229,231,],[-119,-119,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,-18,-22,-19,14,-21,14,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,14,-53,-52,-23,-39,188,191,-41,-42,-29,-40,14,-104,-101,188,-86,-119,-36,-38,-37,-92,]),'FOR':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,135,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,135,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'SHOW':([128,],[165,]),'NONE':([8,9,],[22,22,]),'ELSE':([172,220,],[-29,227,]),'MOST':([8,9,],[23,23,]),'FORGETDECISION':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,137,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,137,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'ICONST':([44,49,53,54,55,56,57,59,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[-119,-119,-78,72,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'INPUT':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,140,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,140,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'[':([34,62,80,141,193,],[44,44,109,44,44,]),']':([43,45,58,60,61,62,63,64,65,70,71,72,73,74,78,79,82,85,86,87,90,93,95,105,106,107,108,110,111,113,114,116,119,151,152,153,155,156,157,158,159,160,185,200,],[-34,-35,-119,-76,80,-119,-119,-119,-119,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,-54,-57,-75,-72,-71,-113,-108,-110,-68,-67,-59,-60,185,-109,-112,-62,-63,-61,-64,-55,-56,-114,-111,]),'ID':([14,15,16,17,33,39,40,41,44,49,50,51,52,55,69,76,77,81,83,84,89,91,96,101,102,103,104,109,115,117,118,120,121,122,123,127,129,130,132,133,137,138,139,142,144,145,146,150,154,162,163,164,166,167,168,169,170,171,172,173,175,178,180,191,192,197,199,204,207,208,214,216,220,223,225,226,229,231,],[-89,-87,34,-88,-18,-90,48,-91,62,62,34,-22,-19,62,-21,62,62,62,62,62,62,62,141,149,34,-20,-24,62,62,62,62,62,62,62,62,-45,-51,-105,-107,-46,-106,-47,-43,-44,141,-53,-52,-23,62,-39,62,62,-102,192,-103,-41,-42,193,-29,195,62,62,-40,-104,-101,62,213,62,62,218,-86,62,-119,62,-36,-38,-37,-92,]),'IF':([33,51,52,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,143,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,143,-53,-52,-23,-39,-41,-42,-29,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'&':([43,45,58,60,62,63,64,65,70,71,72,73,74,78,79,82,85,86,87,90,92,105,106,107,108,110,111,113,114,116,119,152,153,155,156,157,158,185,200,],[-34,-35,-119,-76,-119,-119,-119,92,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,121,-75,-72,-71,-113,-108,-110,-68,-67,-59,-60,-109,-112,-62,-63,-61,-64,-114,-111,]),'ALL':([8,9,],[20,20,]),'FALSE':([44,49,53,54,55,56,57,59,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[-119,-119,-78,70,-119,-84,-85,-79,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,]),'INT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,67,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,184,191,192,214,220,225,226,229,231,],[-119,-119,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,-18,-22,-19,15,-21,15,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,15,-53,-52,-23,-39,-41,-42,-29,-40,15,-104,-101,-86,-119,-36,-38,-37,-92,]),'FLOAT':([0,3,6,7,10,18,20,21,22,23,24,25,26,27,28,32,33,51,52,67,69,96,103,104,127,129,130,132,133,137,138,139,142,144,145,146,150,162,169,170,172,180,184,191,192,214,220,225,226,229,231,],[-119,-119,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,-18,-22,-19,17,-21,17,-20,-24,-45,-51,-105,-107,-46,-106,-47,-43,-44,17,-53,-52,-23,-39,-41,-42,-29,-40,17,-104,-101,-86,-119,-36,-38,-37,-92,]),'|':([43,45,58,60,62,63,64,65,70,71,72,73,74,78,79,82,85,86,87,90,94,105,106,107,108,110,111,113,114,116,119,152,153,155,156,157,158,185,200,],[-34,-35,-119,-76,-119,-119,-119,94,-83,-80,-81,-74,-82,-70,-73,-77,-66,-69,-58,-65,122,-75,-72,-71,-113,-108,-110,-68,-67,-59,-60,-109,-112,-62,-63,-61,-64,-114,-111,]),'TRACK':([128,],[166,]),'COMPLEXITYCONFIG':([0,3,20,21,22,23,24,25,26,27,28,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'YES':([11,],[26,]),'MAIN':([0,3,6,7,10,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,35,38,51,52,69,103,104,150,172,181,],[-119,-119,-119,-3,-2,-119,-119,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,36,-15,-119,-18,-16,-14,-22,-19,-21,-20,-24,-23,-29,-26,]),'}':([33,51,52,69,96,103,104,127,129,130,132,133,136,137,138,139,142,144,145,146,150,162,169,170,172,179,180,191,192,214,220,225,226,229,231,],[-18,-22,-19,-21,-119,-20,-24,-45,-51,-105,-31,-46,172,-106,-47,-43,-44,-119,-53,-52,-23,-39,-41,-42,-29,-30,-40,-104,-101,-86,-119,-36,-38,-37,-92,]),'+':([43,44,45,49,55,58,60,62,63,70,71,72,73,74,76,77,78,79,81,82,83,84,89,91,105,106,107,108,109,110,111,115,117,118,120,121,122,123,152,153,154,163,164,175,178,185,197,200,204,207,216,223,],[-34,56,-35,56,56,-119,-76,-119,83,-83,-80,-81,-74,-82,56,56,-70,-73,56,-77,56,56,56,56,-75,-72,-71,-113,56,-108,-110,56,56,56,56,56,56,56,-109,-112,56,56,56,56,56,-114,56,-111,56,56,56,56,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([54,],[73,]),'localdirective':([96,144,],[138,138,]),'assignfunccallB':([141,],[174,]),'assignfunccall':([96,144,],[124,124,]),'paramsOpt':([67,],[98,]),'assignB':([141,],[176,]),'sign':([44,49,55,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'localvardirective':([96,144,],[129,129,]),'dimensionsB':([80,],[108,]),'dimensionsOpt':([34,62,141,193,],[42,82,177,206,]),'whileloop':([96,144,],[127,127,]),'funccallB':([81,175,],[110,196,]),'funccallC':([112,186,],[152,200,]),'dimensions':([34,62,141,193,],[43,43,43,43,]),'optionsyesno':([11,],[27,]),'expressionB':([64,],[87,]),'funcsOpt':([13,31,37,],[29,38,47,]),'localvardirectiveB':([128,],[167,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([67,],[100,]),'factor':([44,49,55,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'input':([96,144,],[131,131,]),'main':([29,],[37,]),'type':([6,18,32,67,96,144,184,],[16,16,41,101,16,16,199,]),'empty':([0,3,6,13,18,31,34,37,44,49,55,58,62,63,64,65,67,76,77,81,83,84,89,91,96,109,115,117,118,120,121,122,123,141,144,149,154,163,164,175,178,193,195,197,204,207,213,216,218,220,223,],[7,7,19,30,19,30,45,30,59,59,59,79,45,86,90,95,99,59,59,59,59,59,59,59,132,59,59,59,59,59,59,59,59,45,132,183,59,59,59,59,59,45,210,59,59,59,183,59,210,226,59,]),'body':([6,],[12,]),'forloop':([96,144,],[133,133,]),'return':([96,144,],[134,134,]),'superexpressionB':([65,],[93,]),'funccall':([44,49,55,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'instructionsOpt':([96,144,],[136,179,]),'else':([220,],[225,]),'superexpression':([44,49,55,81,109,121,122,123,154,163,164,175,178,197,204,207,216,223,],[61,68,75,112,151,159,160,161,186,187,189,112,198,211,189,217,222,228,]),'paramsB':([149,213,],[182,221,]),'func':([13,31,37,],[31,31,31,]),'declaration':([6,18,96,144,],[18,18,139,139,]),'returntype':([32,],[40,]),'expB':([63,],[85,]),'declarationB':([16,50,102,],[33,69,150,]),'declarationC':([42,],[52,]),'declarationD':([68,],[103,]),'condition':([96,144,],[142,142,]),'declarationsOpt':([6,18,],[13,35,]),'term':([44,49,55,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[63,63,63,106,107,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'signB':([44,49,55,76,77,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'config':([0,3,],[6,10,]),'instruction':([96,144,],[144,144,]),'assign':([171,],[194,]),'inputB':([195,218,],[209,224,]),'localmsgdirective':([96,144,],[145,145,]),'localdecisiondirective':([96,144,],[146,146,]),'termB':([58,],[78,]),'exp':([44,49,55,81,83,84,89,91,109,115,117,118,120,121,122,123,154,163,164,175,178,197,204,207,216,223,],[64,64,64,64,113,114,116,119,64,155,156,157,158,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'outputB':([164,204,],[190,215,]),'output':([96,144,],[147,147,]),'expression':([44,49,55,81,109,121,122,123,154,163,164,175,178,197,204,207,216,223,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'options':([8,9,],[24,25,]),'block':([66,148,201,212,227,230,],[97,181,214,220,229,231,]),'outputC':([188,189,],[203,205,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',12),
  ('config -> configdirective config','config',2,'p_config','parser.py',16),
  ('config -> empty','config',1,'p_config','parser.py',17),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',21),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',22),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',23),
  ('options -> SOME','options',1,'p_options','parser.py',26),
  ('options -> ALL','options',1,'p_options','parser.py',27),
  ('options -> MOST','options',1,'p_options','parser.py',28),
  ('options -> NONE','options',1,'p_options','parser.py',29),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',32),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',33),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',37),
  ('funcsOpt -> func funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',40),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',41),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',44),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',45),
  ('declaration -> type declarationB','declaration',2,'p_declaration','parser.py',49),
  ('declarationB -> ID dimensionsOpt declarationC','declarationB',3,'p_declarationB','parser.py',52),
  ('declarationC -> = superexpression declarationD','declarationC',3,'p_declarationC','parser.py',55),
  ('declarationC -> , declarationB','declarationC',2,'p_declarationC','parser.py',56),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',57),
  ('declarationD -> , declarationB','declarationD',2,'p_declarationD','parser.py',60),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',61),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',65),
  ('func -> DEF returntype ID ( paramsOpt ) block','func',7,'p_func','parser.py',69),
  ('paramsOpt -> params','paramsOpt',1,'p_paramsOpt','parser.py',72),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',73),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',77),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',80),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',81),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',85),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',88),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',91),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',92),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',96),
  ('else -> ELSE block','else',2,'p_else','parser.py',100),
  ('else -> empty','else',1,'p_else','parser.py',101),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',105),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',106),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',107),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',108),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',109),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',110),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',111),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',112),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',113),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',118),
  ('assignfunccallB -> ( funccallB','assignfunccallB',2,'p_assignfunccallB','parser.py',121),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',122),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',126),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',127),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',128),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',132),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',135),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',136),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',137),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',141),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',144),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',145),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',146),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',147),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',148),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',149),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',150),
  ('exp -> term expB','exp',2,'p_exp','parser.py',154),
  ('expB -> - exp','expB',2,'p_expB','parser.py',157),
  ('expB -> + exp','expB',2,'p_expB','parser.py',158),
  ('expB -> empty','expB',1,'p_expB','parser.py',159),
  ('term -> factor termB','term',2,'p_term','parser.py',163),
  ('termB -> / term','termB',2,'p_termB','parser.py',166),
  ('termB -> * term','termB',2,'p_termB','parser.py',167),
  ('termB -> empty','termB',1,'p_termB','parser.py',168),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',174),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',175),
  ('factor -> funccall','factor',1,'p_factor','parser.py',176),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',177),
  ('signB -> sign','signB',1,'p_signB','parser.py',180),
  ('signB -> empty','signB',1,'p_signB','parser.py',181),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',185),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',186),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',187),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',188),
  ('sign -> +','sign',1,'p_sign','parser.py',192),
  ('sign -> -','sign',1,'p_sign','parser.py',193),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',197),
  ('type -> INT','type',1,'p_type','parser.py',201),
  ('type -> FLOAT','type',1,'p_type','parser.py',202),
  ('type -> STRING','type',1,'p_type','parser.py',203),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',207),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',208),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',212),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',216),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',219),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',220),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',223),
  ('outputB -> STRING outputC','outputB',2,'p_outputB','parser.py',226),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',227),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',230),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',231),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',235),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',238),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',239),
  ('localmsgdirective -> # SHOW STRING','localmsgdirective',3,'p_localmsgdirective','parser.py',243),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',247),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',248),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',249),
  ('funccall -> ID ( funccallB','funccall',3,'p_funccall','parser.py',253),
  ('funccallB -> superexpression funccallC','funccallB',2,'p_funccallB','parser.py',256),
  ('funccallB -> )','funccallB',1,'p_funccallB','parser.py',257),
  ('funccallC -> , superexpression funccallC','funccallC',3,'p_funccallC','parser.py',260),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',261),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',265),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',268),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',272),
  ('params -> type ID paramsB','params',3,'p_params','parser.py',276),
  ('paramsB -> , type ID paramsB','paramsB',4,'p_paramsB','parser.py',279),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',280),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',283),
]
