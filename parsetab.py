
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '72CF2BE1EB35701EF5F3F7D2B8E2715E'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'RETURN':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[56,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,56,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'GTEQ':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,144,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'READ':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[57,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,57,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'VOID':([36,],[46,]),'SOME':([8,9,],[22,22,]),'WHILE':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[60,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,60,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'/':([86,89,93,99,101,104,129,130,131,132,133,134,135,137,138,177,178,179,180,181,182,218,245,249,250,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-166,-92,-101,-103,-102,-105,-104,187,-94,-95,-106,-108,-107,-110,-109,-93,-166,-148,-154,-158,-160,-153,-159,]),'PRINT':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[61,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,61,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'DIFF':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,147,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'TRUE':([53,56,87,91,94,95,96,97,100,103,118,121,125,136,140,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,224,225,226,235,236,238,242,251,260,267,275,286,],[-24,-166,-157,-166,135,-97,-111,-112,-100,-99,-166,-166,-166,-166,-24,-24,-24,-24,-24,-24,-24,-24,-61,-166,-24,-24,-166,-166,-24,-24,-166,-166,-166,-166,-166,-166,-166,-64,-24,-117,-166,-166,-100,-166,-166,-166,-166,-166,-166,-166,-24,-166,-166,-166,]),'>':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,151,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,43,45,51,52,119,174,176,216,217,282,],[-166,-166,-166,-4,-3,-2,-166,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,36,-17,36,36,-33,-28,-19,-37,-27,-31,-30,-26,-29,]),'FORGET':([63,],[111,]),'NONE':([8,9,],[23,23,]),'FCONST':([53,56,87,91,94,95,96,97,100,103,118,121,125,136,140,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,224,225,226,235,236,238,242,251,260,267,275,286,],[-24,-166,-157,-166,131,-97,-111,-112,-100,-99,-166,-166,-166,-166,-24,-24,-24,-24,-24,-24,-24,-24,-61,-166,-24,-24,-166,-166,-24,-24,-166,-166,-166,-166,-166,-166,-166,-64,-24,-117,-166,-166,-100,-166,-166,-166,-166,-166,-166,-166,-24,-166,-166,-166,]),'NO':([11,],[29,]),')':([54,86,89,93,99,101,102,104,105,106,107,124,129,130,131,132,133,134,135,137,138,139,141,143,146,150,153,154,155,156,158,165,167,169,170,171,177,178,179,180,181,182,183,185,186,189,192,193,201,202,206,207,208,210,212,213,218,221,222,223,224,227,228,229,230,231,232,233,234,235,244,245,247,248,249,250,251,252,253,254,255,257,258,265,266,268,270,272,283,284,291,293,295,296,297,],[92,-43,-44,-98,-88,-96,-166,-40,-83,-166,-166,-166,-166,-92,-101,-103,-102,-105,-104,-166,-94,-68,-70,-166,-74,-81,-71,-73,-21,-131,-61,-48,-138,209,-166,-36,-95,-106,-108,-107,-110,-109,218,-87,-91,-166,-82,-86,-132,-64,239,240,241,-35,-165,-163,-93,-69,250,-152,-151,-80,-79,-77,-78,-75,-76,-72,-166,-166,-166,-166,-90,-89,-148,-154,-166,-150,-85,-84,271,-134,250,-164,-158,-160,250,-21,-153,-132,-166,-128,-159,-133,298,]),'(':([39,42,53,56,57,59,60,61,64,68,72,74,76,80,85,87,91,95,104,110,118,120,121,125,136,140,142,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,225,226,235,236,238,242,251,260,267,275,286,],[-40,54,-24,95,108,-21,-114,-135,-115,-113,116,118,-117,121,124,-157,95,-97,-149,158,95,166,95,95,95,-24,189,-24,-24,-24,-24,-24,-24,-24,-61,95,-24,-24,95,95,-24,-24,95,95,95,95,95,95,95,-64,-24,-117,95,95,95,95,95,95,95,95,95,-24,95,95,95,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'*':([86,89,93,99,101,104,129,130,131,132,133,134,135,137,138,177,178,179,180,181,182,218,245,249,250,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-166,-92,-101,-103,-102,-105,-104,184,-94,-95,-106,-108,-107,-110,-109,-93,-166,-148,-154,-158,-160,-153,-159,]),'-':([53,56,86,87,89,91,93,95,99,101,104,105,118,121,125,129,130,131,132,133,134,135,136,137,138,140,143,144,145,147,148,149,151,152,158,166,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,218,219,220,225,226,235,236,238,242,245,247,248,249,250,251,260,266,267,268,275,283,286,295,],[-24,97,-43,-157,-44,97,-98,-97,-88,-96,-40,-83,97,97,97,-166,-92,-101,-103,-102,-105,-104,97,-166,-94,-24,191,-24,-24,-24,-24,-24,-24,-24,-61,97,-95,-106,-108,-107,-110,-109,-24,-87,-91,-24,97,97,-24,-24,97,97,97,97,97,97,97,-64,-24,-117,-93,97,97,97,97,97,97,97,97,-166,-90,-89,-148,-154,97,-24,-158,97,-160,97,-153,97,-159,]),',':([38,39,40,49,86,88,89,93,99,101,102,104,105,106,107,126,127,129,130,131,132,133,134,135,137,138,139,141,143,146,150,153,154,155,156,158,167,170,175,177,178,179,180,181,182,185,186,189,192,193,201,202,208,213,218,221,222,223,224,227,228,229,230,231,232,233,234,235,244,245,247,248,249,250,251,252,253,254,258,266,268,269,270,272,283,284,291,295,],[-21,-40,50,-166,-43,-20,-44,-98,-88,-96,-166,-40,-83,-166,-166,50,-25,-166,-92,-101,-103,-102,-105,-104,-166,-94,-68,-70,-166,-74,-81,-71,-73,-21,-131,-61,-138,211,215,-95,-106,-108,-107,-110,-109,-87,-91,-166,-82,-86,-132,-64,242,-163,-93,-69,251,-152,-151,-80,-79,-77,-78,-75,-76,-72,256,-166,211,-166,-90,-89,-148,-154,-166,-150,-85,-84,251,-158,-160,50,251,-21,-153,-132,256,-159,]),'SCONST':([53,56,87,91,94,95,96,97,100,103,112,118,121,125,136,140,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,224,225,226,235,236,238,242,251,260,267,275,286,],[-24,-166,-157,-166,132,-97,-111,-112,-100,-99,161,-166,-166,-166,-166,-24,-24,-24,-24,-24,-24,-24,-24,-61,-166,-24,-24,-166,-166,-24,-24,-166,-166,-166,-166,-166,-166,-166,-64,-24,-117,-166,-166,-100,-166,-166,-166,-166,-166,-166,-166,-24,-166,-166,-166,]),'ID':([14,15,16,17,18,31,44,46,47,48,50,51,52,53,56,62,65,66,67,69,70,77,78,79,81,82,83,87,90,91,95,108,109,111,113,114,115,116,117,118,119,121,123,125,136,140,144,145,147,148,149,151,152,158,161,162,166,172,174,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,215,216,217,219,220,225,226,235,236,238,242,246,251,256,260,262,267,275,278,279,280,282,286,288,289,294,299,300,],[-22,-122,-120,-121,-123,39,39,-124,85,-125,-23,-28,-19,-24,104,-57,-65,-145,-67,-147,-58,-59,-55,-56,39,-146,-66,-157,39,104,-97,156,-51,-143,-142,162,-53,39,-54,104,-37,104,-52,104,104,-24,-24,-24,-24,-24,-24,-24,-24,-61,-144,-141,104,213,-27,-24,-24,104,104,-24,-24,104,104,104,104,104,104,104,-64,-24,-117,-23,-30,-26,104,104,104,104,104,104,104,104,39,104,156,-24,-166,104,104,-47,-50,-119,-29,104,-45,-116,-46,-129,-126,]),'TRACKDECISION':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[66,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,66,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),';':([38,39,40,49,58,71,73,84,86,88,89,93,98,99,101,102,104,105,106,107,126,127,129,130,131,132,133,134,135,137,138,139,141,143,146,150,153,154,157,159,164,168,175,177,178,179,180,181,182,185,186,192,193,218,221,227,228,229,230,231,232,233,241,243,245,247,248,249,250,253,254,259,261,264,266,268,269,271,273,274,276,283,285,292,295,],[-21,-40,51,-166,109,115,117,123,-43,-20,-44,-98,-161,-88,-96,-166,-40,-83,-166,-166,51,-25,-166,-92,-101,-103,-102,-105,-104,-166,-94,-68,-70,-166,-74,-81,-71,-73,-60,-63,205,-136,216,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-69,-80,-79,-77,-78,-75,-76,-72,-139,-137,-166,-90,-89,-148,-154,-85,-84,-25,-127,-140,-158,-160,51,-130,-62,-42,286,-153,-25,-41,-159,]),'=':([1,2,4,38,39,40,49,59,86,88,89,110,126,160,163,204,237,245,266,268,269,295,],[8,9,11,-21,-40,53,-166,-21,-43,-20,-44,-166,53,203,-21,-166,260,-166,-158,-160,53,-159,]),'<':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,149,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'$end':([5,12,33,37,41,43,45,55,119,176,],[0,-1,-166,-16,-15,-166,-33,-14,-37,-31,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,124,161,162,174,211,216,217,262,278,279,280,282,288,289,294,299,300,],[-166,-166,15,-4,-3,15,-9,-8,-11,-10,-6,-5,-12,-7,-13,15,15,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,15,-146,-66,-51,-53,-54,-37,-52,15,-144,-141,-27,15,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'FOR':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[64,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,64,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'SHOW':([63,],[112,]),'#':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[63,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,63,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ELSE':([119,262,],[-37,277,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[82,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,82,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ICONST':([53,56,87,91,94,95,96,97,100,103,118,121,125,136,140,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,224,225,226,235,236,238,242,251,260,267,275,286,],[-24,-166,-157,-166,133,-97,-111,-112,-100,-99,-166,-166,-166,-166,-24,-24,-24,-24,-24,-24,-24,-24,-61,-166,-24,-24,-166,-166,-24,-24,-166,-166,-166,-166,-166,-166,-166,-64,-24,-117,-166,-166,-100,-166,-166,-166,-166,-166,-166,-166,-24,-166,-166,-166,]),']':([86,89,93,99,101,102,104,105,106,107,129,130,131,132,133,134,135,137,138,139,141,143,146,150,153,154,173,177,178,179,180,181,182,185,186,192,193,214,218,221,227,228,229,230,231,232,233,245,247,248,249,250,253,254,266,268,281,283,290,295,],[-43,-44,-98,-88,-96,-166,-40,-83,-166,-166,-166,-92,-101,-103,-102,-105,-104,-166,-94,-68,-70,-166,-74,-81,-71,-73,-155,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,245,-93,-69,-80,-79,-77,-78,-75,-76,-72,-166,-90,-89,-148,-154,-85,-84,-158,-160,-156,-153,295,-159,]),'[':([38,39,49,59,93,104,110,129,163,204,245,],[-21,-40,87,-21,-98,-40,87,87,-21,87,267,]),'EQ':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,148,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'YES':([11,],[27,]),'IF':([44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[68,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,68,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'AND':([86,89,93,99,101,104,105,106,107,129,130,131,132,133,134,135,137,138,143,146,150,177,178,179,180,181,182,185,186,192,193,218,227,228,229,230,231,232,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,-166,152,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-74,-81,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-80,-79,-77,-78,-75,-76,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'ALL':([8,9,],[21,21,]),'FALSE':([53,56,87,91,94,95,96,97,100,103,118,121,125,136,140,144,145,147,148,149,151,152,158,166,184,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,219,220,224,225,226,235,236,238,242,251,260,267,275,286,],[-24,-166,-157,-166,134,-97,-111,-112,-100,-99,-166,-166,-166,-166,-24,-24,-24,-24,-24,-24,-24,-24,-61,-166,-24,-24,-166,-166,-24,-24,-166,-166,-166,-166,-166,-166,-166,-64,-24,-117,-166,-166,-100,-166,-166,-166,-166,-166,-166,-166,-24,-166,-166,-166,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,124,161,162,174,211,216,217,262,278,279,280,282,288,289,294,299,300,],[-166,-166,16,-4,-3,16,-9,-8,-11,-10,-6,-5,-12,-7,-13,16,16,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,16,-146,-66,-51,-53,-54,-37,-52,16,-144,-141,-27,16,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'LTEQ':([86,89,93,99,101,104,105,106,129,130,131,132,133,134,135,137,138,143,177,178,179,180,181,182,185,186,192,193,218,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,-40,-83,145,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,124,161,162,174,211,216,217,262,278,279,280,282,288,289,294,299,300,],[-166,-166,17,-4,-3,17,-9,-8,-11,-10,-6,-5,-12,-7,-13,17,17,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,17,-146,-66,-51,-53,-54,-37,-52,17,-144,-141,-27,17,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'OR':([86,89,93,99,101,102,104,105,106,107,129,130,131,132,133,134,135,137,138,143,146,150,153,154,177,178,179,180,181,182,185,186,192,193,218,227,228,229,230,231,232,233,245,247,248,249,250,253,254,266,268,283,295,],[-43,-44,-98,-88,-96,140,-40,-83,-166,-166,-166,-92,-101,-103,-102,-105,-104,-166,-94,-166,-74,-81,-71,-73,-95,-106,-108,-107,-110,-109,-87,-91,-82,-86,-93,-80,-79,-77,-78,-75,-76,-72,-166,-90,-89,-148,-154,-85,-84,-158,-160,-153,-159,]),'TRACK':([63,],[113,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,44,51,52,62,65,66,67,69,70,77,78,79,81,82,83,109,115,117,119,123,124,161,162,174,211,216,217,262,278,279,280,282,288,289,294,299,300,],[-166,-166,18,-4,-3,18,-9,-8,-11,-10,-6,-5,-12,-7,-13,18,18,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,18,-146,-66,-51,-53,-54,-37,-52,18,-144,-141,-27,18,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'{':([35,92,128,209,239,240,263,277,287,298,],[44,-32,44,-34,44,-118,44,-49,44,44,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,37,41,45,51,52,119,174,216,217,282,],[-166,-166,-166,-4,-3,-2,-166,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,-166,-17,-166,42,-16,-15,-33,-28,-19,-37,-27,-30,-26,-29,]),'}':([44,51,52,62,65,66,67,69,70,75,77,78,79,81,82,83,109,115,117,119,122,123,161,162,174,216,217,262,278,279,280,282,288,289,294,299,300,],[-166,-28,-19,-57,-65,-145,-67,-39,-58,119,-59,-55,-56,-166,-146,-66,-51,-53,-54,-37,-38,-52,-144,-141,-27,-30,-26,-166,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'+':([53,56,86,87,89,91,93,95,99,101,104,105,118,121,125,129,130,131,132,133,134,135,136,137,138,140,143,144,145,147,148,149,151,152,158,166,177,178,179,180,181,182,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,202,203,205,218,219,220,225,226,235,236,238,242,245,247,248,249,250,251,260,266,267,268,275,283,286,295,],[-24,96,-43,-157,-44,96,-98,-97,-88,-96,-40,-83,96,96,96,-166,-92,-101,-103,-102,-105,-104,96,-166,-94,-24,190,-24,-24,-24,-24,-24,-24,-24,-61,96,-95,-106,-108,-107,-110,-109,-24,-87,-91,-24,96,96,-24,-24,96,96,96,96,96,96,96,-64,-24,-117,-93,96,96,96,96,96,96,96,96,-166,-90,-89,-148,-154,96,-24,-158,96,-160,96,-153,96,-159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([124,],[169,]),'superexpressionB':([107,],[153,]),'while_quadruple':([240,],[263,]),'seen_term':([105,],[143,]),'validate_id':([108,256,],[155,272,]),'for_quadruple':([261,],[276,]),'whileloop':([44,81,],[62,62,]),'seen_iconst':([133,],[180,]),'signB':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,251,267,275,286,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'endcondition_quadruple':([279,],[288,]),'expressionB':([106,],[146,]),'funcsOpt':([30,33,43,],[34,41,55,]),'push_operator':([53,140,144,145,147,148,149,151,152,184,187,190,191,203,260,],[91,188,194,195,196,197,198,199,200,219,220,225,226,236,275,]),'program':([0,],[5,]),'factor':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,251,267,275,286,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'main':([34,],[43,]),'return':([44,81,],[71,71,]),'read':([44,81,],[73,73,]),'register_while':([44,81,],[76,76,]),'localdirective':([44,81,],[77,77,]),'quadruple_assign':([127,259,285,],[175,274,292,]),'condition':([44,81,],[79,79,]),'suprafunc':([30,33,43,],[33,33,33,]),'term':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,251,267,275,286,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,247,248,105,105,105,105,105,105,105,105,105,105,]),'start_quadruple':([13,],[30,]),'push_type':([14,],[31,]),'init_while':([76,205,],[120,238,]),'localdecisiondirective':([44,81,],[83,83,]),'output':([44,81,],[84,84,]),'seen_sconst':([132,],[179,]),'assignfunccallB':([110,],[157,]),'id_record_line':([31,44,56,81,90,91,116,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,246,251,267,275,286,],[38,59,93,59,38,93,163,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,38,93,93,93,93,]),'sign':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,251,267,275,286,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'funccallC':([222,258,270,],[249,273,283,]),'funccallB':([189,235,251,],[222,258,270,]),'dimensions':([49,110,129,204,],[86,86,86,86,]),'condition_quadruple':([165,],[206,]),'hyperexpression':([56,91,118,121,125,136,166,188,189,235,236,238,242,251,267,275,286,],[98,127,165,167,173,183,207,221,223,223,259,261,167,223,281,285,293,]),'seen_param':([223,],[252,]),'body':([6,],[12,]),'forloop':([44,81,],[70,70,]),'superexpression':([56,91,118,121,125,136,166,188,189,200,235,236,238,242,251,267,275,286,],[102,102,102,102,102,102,102,102,102,233,102,102,102,102,102,102,102,102,]),'assignfunccall':([44,81,],[58,58,]),'seen_main':([92,],[128,]),'seen_factor':([99,],[137,]),'seen_true':([135,],[182,]),'repush_type':([50,215,],[90,246,]),'localmsgdirective':([44,81,],[67,67,]),'termB':([137,],[185,]),'expression':([56,91,118,121,125,136,166,188,189,200,235,236,238,242,251,267,275,286,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'assign':([116,],[164,]),'block':([35,128,239,263,287,298,],[45,176,262,280,294,299,]),'read_quadruple':([201,284,],[234,291,]),'save_dimension_id':([87,],[125,]),'configdirective':([0,3,],[3,3,]),'dimensionsB':([245,],[266,]),'print_quadruple':([167,],[208,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([63,],[114,]),'localvardirective':([44,81,],[65,65,]),'seen_parentheses':([95,],[136,]),'params':([124,211,],[170,244,]),'type':([6,19,36,44,81,124,211,],[14,14,48,14,14,172,172,]),'empty':([0,3,6,19,30,33,43,44,49,56,81,91,102,106,107,110,118,121,124,125,129,136,137,143,166,170,188,189,194,195,196,197,198,199,200,204,219,220,225,226,234,235,236,238,242,244,245,251,262,267,275,286,291,],[7,7,20,20,37,37,37,69,89,100,69,100,141,150,154,89,100,100,171,100,89,100,186,193,100,212,100,224,100,100,100,100,100,100,100,89,100,100,100,100,257,224,100,100,100,212,268,224,278,100,100,100,257,]),'for_expression':([293,],[297,]),'else':([262,],[279,]),'seen_dimensiony':([281,],[290,]),'seen_dimensionx':([173,],[214,]),'func':([30,33,43,],[35,35,35,]),'declaration':([6,19,44,81,],[19,19,78,78,]),'expB':([143,],[192,]),'declarationB':([31,90,246,],[40,126,269,]),'declarationC':([40,126,269,],[52,174,282,]),'declarationD':([175,],[217,]),'seen_factor_funccall':([101,],[138,]),'register_print_line':([44,81,],[80,80,]),'declarationsOpt':([6,19,],[13,32,]),'instruction':([44,81,],[81,81,]),'pop_operand':([158,],[202,]),'seen_a_funccall':([202,],[235,]),'outputB':([121,242,],[168,264,]),'outputC':([208,],[243,]),'constant':([94,],[130,]),'push_operand':([38,59,155,163,272,],[49,110,201,204,284,]),'dimensionsOpt':([49,110,129,204,],[88,160,177,237,]),'seen_a_factor_funccall':([104,],[142,]),'readB':([234,291,],[255,296,]),'seen_ID':([93,],[129,]),'hyperexpressionB':([102,],[139,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([277,],[287,]),'funccall':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,219,220,225,226,235,236,238,242,251,267,275,286,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'register_if':([44,81,],[74,74,]),'instructionsOpt':([44,81,],[75,122,]),'register_for':([44,81,],[72,72,]),'returntype':([36,],[47,]),'seen_fconst':([131,],[178,]),'seen_false':([134,],[181,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([299,],[300,]),'paramsB':([170,244,],[210,265,]),'assignB':([110,],[159,]),'exp':([56,91,118,121,125,136,166,188,189,194,195,196,197,198,199,200,225,226,235,236,238,242,251,267,275,286,],[106,106,106,106,106,106,106,106,106,227,228,229,230,231,232,106,253,254,106,106,106,106,106,106,106,106,]),'endwhile_quadruple':([280,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',38),
  ('start_quadruple -> <empty>','start_quadruple',0,'p_start_quadruple','parser.py',41),
  ('config -> configdirective config','config',2,'p_config','parser.py',47),
  ('config -> empty','config',1,'p_config','parser.py',48),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',52),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',53),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',54),
  ('options -> SOME','options',1,'p_options','parser.py',57),
  ('options -> ALL','options',1,'p_options','parser.py',58),
  ('options -> MOST','options',1,'p_options','parser.py',59),
  ('options -> NONE','options',1,'p_options','parser.py',60),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',63),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',64),
  ('body -> declarationsOpt start_quadruple funcsOpt main funcsOpt','body',5,'p_body','parser.py',68),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',71),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',72),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',75),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',76),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',80),
  ('declarationB -> id_record_line push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',88),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',120),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',129),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',133),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',138),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',143),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',174),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',175),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',176),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',184),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',185),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',189),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',209),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',222),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',253),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',277),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',278),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',282),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',286),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',287),
  ('id_record_line -> ID','id_record_line',1,'p_id_record_line','parser.py',290),
  ('assign -> id_record_line push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',297),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',304),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',307),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',308),
  ('condition -> register_if ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',314),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',318),
  ('else -> empty','else',1,'p_else','parser.py',319),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',322),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',334),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',343),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',353),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',354),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',355),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',356),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',357),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',358),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',359),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',360),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',361),
  ('assignfunccall -> id_record_line push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',366),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',396),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',402),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',403),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',407),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',413),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',414),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',415),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',419),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',422),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',423),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',431),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',434),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',435),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',443),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',447),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',448),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',449),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',450),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',451),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',452),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',453),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',462),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',465),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',472),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',473),
  ('expB -> empty','expB',1,'p_expB','parser.py',474),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',478),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',481),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',487),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',488),
  ('termB -> empty','termB',1,'p_termB','parser.py',489),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',497),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',498),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',499),
  ('factor -> id_record_line seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',500),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',510),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',529),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',533),
  ('signB -> sign','signB',1,'p_signB','parser.py',551),
  ('signB -> empty','signB',1,'p_signB','parser.py',552),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',557),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',562),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',567),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',572),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',577),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',582),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',583),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',584),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',585),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',586),
  ('sign -> +','sign',1,'p_sign','parser.py',598),
  ('sign -> -','sign',1,'p_sign','parser.py',599),
  ('register_if -> IF','register_if',1,'p_register_if','parser.py',603),
  ('register_while -> WHILE','register_while',1,'p_register_while','parser.py',611),
  ('register_for -> FOR','register_for',1,'p_register_for','parser.py',619),
  ('whileloop -> register_while init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',628),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',631),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',635),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',647),
  ('type -> INT','type',1,'p_type','parser.py',658),
  ('type -> FLOAT','type',1,'p_type','parser.py',659),
  ('type -> STRING','type',1,'p_type','parser.py',660),
  ('type -> BOOL','type',1,'p_type','parser.py',661),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',667),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',668),
  ('forloop -> register_for ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',673),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',677),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',692),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',704),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',714),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',717),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',725),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',732),
  ('readB -> empty','readB',1,'p_readB','parser.py',733),
  ('register_print_line -> PRINT','register_print_line',1,'p_register_print_line','parser.py',736),
  ('output -> register_print_line ( outputB','output',3,'p_output','parser.py',743),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',746),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',749),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',758),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',759),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',763),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',777),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',778),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',783),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',788),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',789),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',790),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',796),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',825),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',833),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',834),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',838),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',856),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',857),
  ('seen_dimensionx -> <empty>','seen_dimensionx',0,'p_seen_dimensionx','parser.py',867),
  ('seen_dimensiony -> <empty>','seen_dimensiony',0,'p_seen_dimensiony','parser.py',889),
  ('save_dimension_id -> <empty>','save_dimension_id',0,'p_save_dimension_id','parser.py',913),
  ('dimensions -> [ save_dimension_id hyperexpression seen_dimensionx ] dimensionsB','dimensions',6,'p_dimensions','parser.py',918),
  ('dimensionsB -> [ hyperexpression seen_dimensiony ]','dimensionsB',4,'p_dimensionsB','parser.py',947),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',948),
  ('return -> RETURN hyperexpression','return',2,'p_return','parser.py',952),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',971),
  ('params -> type ID','params',2,'p_params','parser.py',990),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',1002),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',1003),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1006),
]
