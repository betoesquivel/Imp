
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x89\xd0\xc1<O,@r3\xf5\x99\xb3\x86\xbdn\x90'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[49,-50,-56,-115,-117,-51,-116,-52,-48,-49,49,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[51,-50,-56,-115,-117,-51,-116,-52,-48,-49,51,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'/':([86,88,90,106,112,121,122,123,124,125,126,133,167,171,192,194,203,216,218,227,235,],[129,-83,-85,-39,-40,-81,-88,-90,-89,-92,-91,-130,-82,-84,-122,-130,-118,-123,-125,-121,-124,]),'PRINT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[52,-50,-56,-115,-117,-51,-116,-52,-48,-49,52,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'TRUE':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,156,159,174,175,176,178,180,184,187,193,211,217,225,],[-130,-22,-86,126,-130,-93,-94,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,]),'>':([86,88,90,91,92,106,112,121,122,123,124,125,126,130,131,133,136,137,140,167,168,169,171,172,173,192,194,203,216,218,227,235,],[-130,-83,-85,-130,142,-39,-40,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,176,-82,-79,-78,-84,-75,-74,-122,-130,-118,-123,-125,-121,-124,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,104,120,165,222,223,237,],[-130,-130,-130,-3,-2,33,-130,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-30,-26,-18,-34,-29,-25,-28,-24,-27,]),'FORGET':([54,],[97,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,156,159,174,175,176,178,180,184,187,193,211,217,225,],[-130,-22,-86,122,-130,-93,-94,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,]),'NO':([11,],[29,]),')':([47,86,88,90,91,92,93,106,108,112,116,121,122,123,124,125,126,127,130,131,132,133,136,137,138,141,144,145,146,147,148,154,155,156,157,160,161,162,163,167,168,169,170,171,172,173,177,179,189,190,192,193,194,198,200,201,203,204,205,206,207,208,213,215,216,218,220,226,227,232,234,235,],[80,-130,-83,-85,-130,-130,-130,-39,-130,-40,-130,-81,-88,-90,-89,-92,-91,167,-77,-80,-130,-130,-73,-76,-65,-72,-64,-62,181,182,182,-130,192,-120,-119,196,197,-130,-33,-82,-79,-78,192,-84,-75,-74,-66,-67,214,-105,-122,-130,-130,-32,-129,-127,-118,-69,-70,-68,-71,-63,-130,192,-123,-125,-130,-104,-121,-128,238,-124,]),'(':([38,49,51,52,61,66,67,69,74,79,83,90,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[47,83,95,96,103,105,108,113,116,-22,83,132,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,90,106,112,121,122,123,124,125,126,133,167,171,192,194,203,216,218,227,235,],[128,-83,-85,-39,-40,-81,-88,-90,-89,-92,-91,-130,-82,-84,-122,-130,-118,-123,-125,-121,-124,]),'-':([49,79,83,86,88,90,91,95,96,106,108,110,112,113,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,140,142,159,167,168,169,171,174,175,176,178,180,184,187,192,193,194,203,211,216,217,218,225,227,235,],[85,-22,85,-130,-83,-85,135,85,85,-39,85,85,-40,85,85,-81,-88,-90,-89,-92,-91,85,85,-77,-80,85,-130,85,85,85,85,85,-82,-79,-78,-84,85,85,85,85,85,85,85,-122,85,-130,-118,85,-123,85,-125,85,-121,-124,]),',':([45,46,75,86,88,90,91,92,93,106,108,112,117,118,121,122,123,124,125,126,130,131,132,133,136,137,138,141,144,145,147,148,154,155,156,157,162,166,167,168,169,170,171,172,173,177,179,192,193,194,201,202,203,204,205,206,207,208,213,215,216,218,220,227,233,235,],[-20,76,-130,-130,-83,-85,-130,-130,-130,-39,-130,-40,-19,76,-81,-88,-90,-89,-92,-91,-77,-80,-130,-130,-73,-76,-65,-72,-64,-62,184,184,188,193,-120,-119,199,-23,-82,-79,-78,193,-84,-75,-74,-66,-67,-122,-130,-130,-127,221,-118,-69,-70,-68,-71,-63,188,193,-123,-125,199,-121,76,-124,]),'SCONST':([49,79,81,82,83,84,85,87,95,96,98,108,110,113,119,128,129,132,134,135,140,142,156,159,174,175,176,178,180,184,187,193,211,217,225,],[-130,-22,-86,123,-130,-93,-94,-87,-130,147,150,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-87,-130,-130,-130,-130,-130,-130,147,-130,-130,-130,-130,-130,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,58,59,63,64,65,68,70,71,72,76,77,78,79,83,94,95,96,97,99,100,101,102,103,104,105,108,110,113,115,119,128,129,132,134,135,140,142,150,151,159,164,165,174,175,176,178,180,184,187,188,193,209,211,217,219,221,222,223,225,229,230,236,237,239,],[-98,-96,-21,-97,-99,45,67,-100,74,-101,90,-50,-56,-115,-117,-51,-116,-52,-48,-49,67,-58,-57,45,-26,-18,-22,90,-44,90,90,-113,-112,151,-47,-46,152,-34,154,90,90,90,-45,90,90,90,90,90,90,90,90,-114,-111,90,201,-25,90,90,90,90,90,90,90,213,90,-95,90,90,-130,45,-28,-24,90,-41,-43,-42,-27,-102,]),'TRACKDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[56,-50,-56,-115,-117,-51,-116,-52,-48,-49,56,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),';':([45,46,50,57,60,73,75,86,88,89,90,91,92,93,106,107,109,112,117,118,121,122,123,124,125,126,130,131,133,136,137,138,141,144,145,149,153,166,167,168,169,171,172,173,177,179,182,183,185,191,192,194,195,202,203,204,205,206,207,208,210,212,214,216,218,224,227,233,235,],[-20,77,94,101,102,115,-130,-130,-83,-126,-85,-130,-130,-130,-39,-53,-55,-40,-19,77,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,-65,-72,-64,-62,-106,187,-23,-82,-79,-78,-84,-75,-74,-66,-67,-109,-107,-108,-54,-122,-130,-38,222,-118,-69,-70,-68,-71,-63,-110,225,-103,-123,-125,-37,-121,77,-124,]),'=':([1,2,4,45,46,67,75,86,88,90,91,92,106,111,112,117,118,121,122,123,124,125,126,130,131,133,136,137,139,140,142,152,167,168,169,171,172,173,186,192,194,203,216,218,227,233,235,],[8,9,11,-20,79,-130,-130,-130,-83,-85,-130,139,-39,159,-40,-19,79,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,174,175,178,-130,-82,-79,-78,-84,-75,-74,211,-122,-130,-118,-123,-125,-121,79,-124,]),'<':([86,88,90,91,92,106,112,121,122,123,124,125,126,130,131,133,136,137,167,168,169,171,172,173,192,194,203,216,218,227,235,],[-130,-83,-85,-130,140,-39,-40,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,-82,-79,-78,-84,-75,-74,-122,-130,-118,-123,-125,-121,-124,]),'$end':([5,12,30,34,37,39,41,48,104,120,],[0,-1,-130,-15,-14,-130,-30,-13,-34,-29,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,150,151,165,199,209,219,222,223,229,230,236,237,239,],[-130,-130,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-50,-56,-115,-117,-51,-116,-52,-48,-49,14,-58,-57,-26,-18,-44,-47,-46,-34,-45,14,-114,-111,-25,14,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'FOR':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[61,-50,-56,-115,-117,-51,-116,-52,-48,-49,61,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'SHOW':([54,],[98,]),'#':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[54,-50,-56,-115,-117,-51,-116,-52,-48,-49,54,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'ELSE':([104,219,],[-34,231,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[63,-50,-56,-115,-117,-51,-116,-52,-48,-49,63,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'ICONST':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,156,159,174,175,176,178,180,184,187,193,211,217,225,],[-130,-22,-86,124,-130,-93,-94,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,]),'INPUT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[66,-50,-56,-115,-117,-51,-116,-52,-48,-49,66,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'[':([45,67,75,90,133,152,194,],[-20,110,110,-85,110,110,217,]),']':([86,88,90,91,92,93,106,112,121,122,123,124,125,126,130,131,133,136,137,138,141,144,145,158,167,168,169,171,172,173,177,179,192,194,203,204,205,206,207,208,216,218,227,228,235,],[-130,-83,-85,-130,-130,-130,-39,-40,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,-65,-72,-64,-62,194,-82,-79,-78,-84,-75,-74,-66,-67,-122,-130,-118,-69,-70,-68,-71,-63,-123,-125,-121,235,-124,]),'YES':([11,],[27,]),'IF':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,150,151,165,209,219,222,223,229,230,236,237,239,],[69,-50,-56,-115,-117,-51,-116,-52,-48,-49,69,-58,-57,-26,-18,-44,-47,-46,-34,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'&':([86,88,90,91,92,93,106,112,121,122,123,124,125,126,130,131,133,136,137,138,141,143,167,168,169,171,172,173,177,179,192,194,203,204,205,206,207,216,218,227,235,],[-130,-83,-85,-130,-130,143,-39,-40,-81,-88,-90,-89,-92,-91,-77,-80,-130,-73,-76,-65,-72,180,-82,-79,-78,-84,-75,-74,-66,-67,-122,-130,-118,-69,-70,-68,-71,-123,-125,-121,-124,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,156,159,174,175,176,178,180,184,187,193,211,217,225,],[-130,-22,-86,125,-130,-93,-94,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-87,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,-130,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,150,151,165,199,209,219,222,223,229,230,236,237,239,],[-130,-130,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-50,-56,-115,-117,-51,-116,-52,-48,-49,15,-58,-57,-26,-18,-44,-47,-46,-34,-45,15,-114,-111,-25,15,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,150,151,165,199,209,219,222,223,229,230,236,237,239,],[-130,-130,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-50,-56,-115,-117,-51,-116,-52,-48,-49,17,-58,-57,-26,-18,-44,-47,-46,-34,-45,17,-114,-111,-25,17,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'TRACK':([54,],[99,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,150,151,165,199,209,219,222,223,229,230,236,237,239,],[-130,-130,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-50,-56,-115,-117,-51,-116,-52,-48,-49,18,-58,-57,-26,-18,-44,-47,-46,-34,-45,18,-114,-111,-25,18,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'{':([32,80,181,196,197,231,238,],[40,40,40,40,-31,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,104,165,222,223,237,],[-130,-130,-130,-3,-2,-130,-130,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-130,38,-15,-16,-14,-30,-26,-18,-34,-25,-28,-24,-27,]),'}':([40,53,55,56,58,59,62,63,64,65,68,70,71,72,77,78,94,101,102,104,114,115,150,151,165,209,219,222,223,229,230,236,237,239,],[-130,-50,-56,-115,-36,-51,104,-116,-52,-48,-49,-130,-58,-57,-26,-18,-44,-47,-46,-34,-35,-45,-114,-111,-25,-95,-130,-28,-24,-41,-43,-42,-27,-102,]),'+':([49,79,83,86,88,90,91,95,96,106,108,110,112,113,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,140,142,159,167,168,169,171,174,175,176,178,180,184,187,192,193,194,203,211,216,217,218,225,227,235,],[84,-22,84,-130,-83,-85,134,84,84,-39,84,84,-40,84,84,-81,-88,-90,-89,-92,-91,84,84,-77,-80,84,-130,84,84,84,84,84,-82,-79,-78,-84,84,84,84,84,84,84,84,-122,84,-130,-118,84,-123,84,-125,84,-121,-124,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([82,],[121,]),'localdirective':([40,70,],[64,64,]),'assignfunccallB':([67,],[107,]),'assignfunccall':([40,70,],[50,50,]),'paramsOpt':([116,],[161,]),'assignB':([67,],[109,]),'sign':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'localvardirective':([40,70,],[55,55,]),'push_operator':([79,],[119,]),'dimensionsB':([194,],[216,]),'push_operand':([45,],[75,]),'dimensionsOpt':([67,75,133,152,],[111,117,171,186,]),'forloop':([40,70,],[59,59,]),'funccallB':([108,132,193,],[155,170,215,]),'funccallC':([155,170,215,],[191,203,227,]),'dimensions':([67,75,133,152,],[106,106,106,106,]),'optionsyesno':([11,],[28,]),'expressionB':([92,],[138,]),'funcsOpt':([13,30,39,],[31,37,48,]),'localvardirectiveB':([54,],[100,]),'configdirective':([0,3,],[3,3,]),'seen_ID':([90,],[133,]),'program':([0,],[5,]),'params':([116,199,],[162,220,]),'factor':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'input':([40,70,],[57,57,]),'main':([31,],[39,]),'type':([6,19,33,40,70,116,199,],[16,16,44,16,16,164,164,]),'empty':([0,3,6,13,19,30,39,40,49,67,70,75,83,86,91,92,93,95,96,108,110,113,116,119,128,129,132,133,134,135,140,142,152,154,159,162,174,175,176,178,180,184,187,193,194,211,213,217,219,220,225,],[7,7,20,34,20,34,34,58,87,112,58,112,87,131,137,141,144,87,87,156,87,87,163,87,87,87,156,112,87,87,87,87,112,190,87,200,87,87,87,87,87,87,87,156,218,87,190,87,230,200,87,]),'body':([6,],[12,]),'whileloop':([40,70,],[53,53,]),'return':([40,70,],[60,60,]),'superexpressionB':([93,],[145,]),'funccall':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,70,],[62,114,]),'else':([219,],[229,]),'superexpression':([49,83,95,96,108,110,113,119,132,159,180,184,187,193,211,217,225,],[89,127,146,148,157,158,160,166,157,195,208,148,212,157,224,228,234,]),'paramsB':([162,220,],[198,232,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,70,],[19,19,65,65,]),'returntype':([33,],[43,]),'expB':([91,],[136,]),'declarationB':([35,76,221,],[46,118,233,]),'declarationC':([46,118,233,],[78,165,237,]),'declarationD':([202,],[223,]),'quadruple_assign':([166,],[202,]),'condition':([40,70,],[68,68,]),'suprafunc':([13,30,39,],[30,30,30,]),'declarationsOpt':([6,19,],[13,36,]),'term':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[91,91,91,91,91,91,91,91,168,169,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'signB':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'config':([0,3,],[6,10,]),'push_type':([16,],[35,]),'instruction':([40,70,],[70,70,]),'assign':([103,],[153,]),'inputB':([154,213,],[189,226,]),'localmsgdirective':([40,70,],[71,71,]),'localdecisiondirective':([40,70,],[72,72,]),'termB':([86,],[130,]),'exp':([49,83,95,96,108,110,113,119,132,134,135,140,142,159,174,175,176,178,180,184,187,193,211,217,225,],[92,92,92,92,92,92,92,92,92,172,173,177,179,92,204,205,206,207,92,92,92,92,92,92,92,]),'outputB':([96,184,],[149,210,]),'output':([40,70,],[73,73,]),'expression':([49,83,95,96,108,110,113,119,132,159,180,184,187,193,211,217,225,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'options':([8,9,],[25,26,]),'block':([32,80,181,196,231,238,],[41,120,209,219,236,239,]),'outputC':([147,148,],[183,185,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',57),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',75),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',79),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',83),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',87),
  ('declarationC -> = push_operator superexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',100),
  ('declarationC -> , declarationB declarationC','declarationC',3,'p_declarationC','parser.py',101),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',102),
  ('declarationD -> , declarationB declarationC','declarationD',3,'p_declarationD','parser.py',110),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',111),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',115),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',119),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',124),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',135),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',136),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',140),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',143),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',144),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',148),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',155),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',158),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',159),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',165),
  ('else -> ELSE block','else',2,'p_else','parser.py',169),
  ('else -> empty','else',1,'p_else','parser.py',170),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',174),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',175),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',176),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',177),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',178),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',179),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',180),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',181),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',182),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',187),
  ('assignfunccallB -> ( funccallB funccallC','assignfunccallB',3,'p_assignfunccallB','parser.py',206),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',207),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',212),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',213),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',214),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',218),
  ('hyperexpressionB -> | | hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',221),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',222),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',226),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',229),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',230),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',234),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',238),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',239),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',240),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',241),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',242),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',243),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',244),
  ('exp -> term expB','exp',2,'p_exp','parser.py',248),
  ('expB -> - exp','expB',2,'p_expB','parser.py',251),
  ('expB -> + exp','expB',2,'p_expB','parser.py',252),
  ('expB -> empty','expB',1,'p_expB','parser.py',253),
  ('term -> factor termB','term',2,'p_term','parser.py',257),
  ('termB -> / term','termB',2,'p_termB','parser.py',260),
  ('termB -> * term','termB',2,'p_termB','parser.py',261),
  ('termB -> empty','termB',1,'p_termB','parser.py',262),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',268),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',269),
  ('factor -> funccall','factor',1,'p_factor','parser.py',270),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',271),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',278),
  ('signB -> sign','signB',1,'p_signB','parser.py',286),
  ('signB -> empty','signB',1,'p_signB','parser.py',287),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',292),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',293),
  ('constant -> SCONST','constant',1,'p_constant','parser.py',294),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',295),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',296),
  ('sign -> +','sign',1,'p_sign','parser.py',301),
  ('sign -> -','sign',1,'p_sign','parser.py',302),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',307),
  ('type -> INT','type',1,'p_type','parser.py',311),
  ('type -> FLOAT','type',1,'p_type','parser.py',312),
  ('type -> STRING','type',1,'p_type','parser.py',313),
  ('type -> BOOL','type',1,'p_type','parser.py',314),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',320),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',321),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',326),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',330),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',333),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',334),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',337),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',340),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',341),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',344),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',345),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',349),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',352),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',353),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',357),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',361),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',362),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',363),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',367),
  ('funccallB -> superexpression','funccallB',1,'p_funccallB','parser.py',379),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',380),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',385),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',386),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',390),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',394),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',395),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',400),
  ('params -> type ID','params',2,'p_params','parser.py',404),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',413),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',414),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',417),
]
