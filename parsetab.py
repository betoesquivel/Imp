
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'm]yg\x9a$\xaen\xbe\xda\xe7\x89Nv\xc6R'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'RETURN':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[55,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,55,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'GTEQ':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,139,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'READ':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[56,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,56,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'VOID':([36,],[45,]),'SOME':([8,9,],[22,22,]),'WHILE':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[57,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,57,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'/':([81,84,93,95,98,123,124,125,126,127,128,131,132,137,165,169,170,171,172,173,181,208,210,214,245,246,262,276,],[-42,-43,-88,-96,-98,-92,-101,-103,-102,-105,-104,178,-94,-159,-159,-106,-108,-107,-110,-109,-95,-151,-153,-93,-144,-150,-152,-149,]),'PRINT':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[58,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,58,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'DIFF':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,142,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'TRUE':([52,55,82,86,88,89,90,91,94,97,104,115,129,134,139,140,142,143,144,146,147,152,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,220,221,222,233,236,237,238,247,256,258,259,268,280,],[-24,-159,-159,-159,128,-97,-111,-112,-100,-99,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-24,-159,-159,-159,-159,]),'>':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,146,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,42,44,50,51,112,166,168,212,213,275,],[-159,-159,-159,-4,-3,-2,-159,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,36,-17,36,36,-33,-28,-19,-37,-27,-31,-30,-26,-29,]),'FORGET':([60,],[105,]),'NONE':([8,9,],[23,23,]),'FCONST':([52,55,82,86,88,89,90,91,94,97,104,115,129,134,139,140,142,143,144,146,147,152,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,220,221,222,233,236,237,238,247,256,258,259,268,280,],[-24,-159,-159,-159,124,-97,-111,-112,-100,-99,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-24,-159,-159,-159,-159,]),'NO':([11,],[29,]),')':([53,81,84,93,95,96,98,99,100,101,118,123,124,125,126,127,128,131,132,133,135,137,138,141,145,148,149,150,151,153,160,161,162,163,165,169,170,171,172,173,174,176,177,180,181,184,185,193,194,195,199,202,204,206,207,208,210,214,217,218,219,220,223,224,225,226,227,228,229,230,237,240,243,244,245,246,247,248,249,250,251,253,258,261,262,264,266,270,276,277,285,287,289,290,],[87,-42,-43,-88,-96,-159,-98,-83,-159,-159,-159,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-21,-128,-134,-47,203,-159,-36,-159,-106,-108,-107,-110,-109,214,-87,-91,-159,-95,-82,-86,-129,231,232,-61,239,-35,-158,-156,-151,-153,-93,-69,246,-148,-147,-80,-79,-77,-78,-75,-76,-72,-159,-64,-159,-90,-89,-144,-150,-159,-146,-85,-84,265,-131,-159,-157,-152,246,-21,246,-149,-129,-159,-125,-130,291,]),'(':([41,52,55,56,57,58,67,74,76,80,82,86,89,98,103,104,114,115,129,134,136,139,140,142,143,144,146,147,152,159,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,221,222,233,236,237,238,247,256,258,259,268,280,],[53,-24,89,102,-114,104,110,-60,115,118,89,89,-97,-145,152,89,-21,89,89,-24,180,-24,-24,-24,-24,-24,-24,-24,89,199,-24,-24,89,89,-24,-24,89,89,89,89,89,89,89,-114,-61,89,89,89,89,89,89,89,-64,-24,89,-24,89,89,89,89,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'*':([81,84,93,95,98,123,124,125,126,127,128,131,132,137,165,169,170,171,172,173,181,208,210,214,245,246,262,276,],[-42,-43,-88,-96,-98,-92,-101,-103,-102,-105,-104,175,-94,-159,-159,-106,-108,-107,-110,-109,-95,-151,-153,-93,-144,-150,-152,-149,]),'-':([52,55,81,82,84,86,89,93,95,98,99,104,115,123,124,125,126,127,128,129,131,132,134,137,138,139,140,142,143,144,146,147,152,165,169,170,171,172,173,175,176,177,178,179,180,181,182,183,186,187,188,189,190,191,192,197,199,208,209,210,214,215,216,221,222,233,236,237,238,243,244,245,246,247,256,258,259,262,268,276,280,],[-24,91,-42,91,-43,91,-97,-88,-96,-98,-83,91,91,-92,-101,-103,-102,-105,-104,91,-159,-94,-24,-159,183,-24,-24,-24,-24,-24,-24,-24,91,-159,-106,-108,-107,-110,-109,-24,-87,-91,-24,91,91,-95,-24,-24,91,91,91,91,91,91,91,-114,-61,-151,91,-153,-93,91,91,91,91,91,91,-64,-24,-90,-89,-144,-150,91,-24,91,91,-152,91,-149,91,]),',':([38,39,48,81,83,84,93,95,96,98,99,100,101,120,121,123,124,125,126,127,128,131,132,133,135,137,138,141,145,148,149,150,151,153,162,165,167,169,170,171,172,173,176,177,180,181,184,185,193,195,199,207,208,210,214,217,218,219,220,223,224,225,226,227,228,229,230,237,240,243,244,245,246,247,248,249,250,258,262,263,264,266,270,276,277,285,],[-21,49,-159,-42,-20,-43,-88,-96,-159,-98,-83,-159,-159,49,-25,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-21,-128,-134,205,-159,211,-106,-108,-107,-110,-109,-87,-91,-159,-95,-82,-86,-129,233,-61,-156,-151,-153,-93,-69,247,-148,-147,-80,-79,-77,-78,-75,-76,-72,252,-64,205,-90,-89,-144,-150,-159,-146,-85,-84,-159,-152,49,247,-21,247,-149,-129,252,]),'SCONST':([52,55,82,86,88,89,90,91,94,97,104,106,115,129,134,139,140,142,143,144,146,147,152,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,220,221,222,233,236,237,238,247,256,258,259,268,280,],[-24,-159,-159,-159,125,-97,-111,-112,-100,-99,-159,155,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-24,-159,-159,-159,-159,]),'ID':([14,15,16,17,18,31,43,45,46,47,49,50,51,52,55,59,61,62,63,64,65,71,72,73,75,77,78,82,85,86,89,102,104,105,107,108,109,110,111,112,113,115,117,129,134,139,140,142,143,144,146,147,152,155,156,164,166,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,211,212,213,215,216,221,222,233,236,237,238,242,247,252,256,258,259,260,267,268,273,274,275,278,280,284,288,292,293,],[-22,-119,-117,-118,-120,38,74,-121,80,-122,-23,-28,-19,-24,98,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,74,-66,98,38,98,-97,151,98,-139,-138,156,-52,157,-53,-37,-50,98,-51,98,-24,-24,-24,-24,-24,-24,-24,-24,98,-140,-137,207,-27,-24,-24,98,98,-24,-24,98,98,98,98,98,98,98,-114,-61,98,-23,-30,-26,98,98,98,98,98,98,-64,-24,38,98,151,-24,98,98,-159,-116,98,-46,-49,-29,-113,98,-44,-45,-126,-123,]),'TRACKDECISION':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[62,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,62,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),';':([38,39,48,66,68,70,79,81,83,84,92,93,95,96,98,99,100,101,120,121,123,124,125,126,127,128,130,131,132,133,135,137,138,141,145,148,149,154,158,165,167,169,170,171,172,173,176,177,181,184,185,198,200,208,210,214,217,223,224,225,226,227,228,229,232,234,243,244,245,246,249,250,255,257,262,263,265,269,271,276,279,281,282,286,],[-21,50,-159,109,111,113,117,-42,-20,-43,-155,-88,-96,-159,-98,-83,-159,-159,50,-25,-92,-101,-103,-102,-105,-104,-154,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-132,197,-159,212,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-59,-63,-151,-153,-93,-69,-80,-79,-77,-78,-75,-76,-72,-135,-133,-90,-89,-144,-150,-85,-84,-136,-124,-152,50,-127,280,-25,-149,-25,-62,-41,-40,]),'=':([1,2,4,38,39,48,74,81,83,84,114,120,157,159,165,196,201,208,210,235,262,263,],[8,9,11,-21,52,-159,-60,-42,-20,-43,-21,52,-21,-159,-159,-159,238,-151,-153,256,-152,52,]),'<':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,144,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'$end':([5,12,33,37,40,42,44,54,112,168,],[0,-1,-159,-16,-15,-159,-33,-14,-37,-31,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,118,155,156,166,205,212,213,260,267,273,274,275,278,284,288,292,293,],[-159,-159,15,-4,-3,15,-9,-8,-11,-10,-6,-5,-12,-7,-13,15,15,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,15,-66,-52,-53,-37,-50,-51,15,-140,-137,-27,15,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'FOR':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[67,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,67,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'SHOW':([60,],[106,]),'#':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[60,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,60,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'ELSE':([112,260,],[-37,272,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[71,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,71,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'ICONST':([52,55,82,86,88,89,90,91,94,97,104,115,129,134,139,140,142,143,144,146,147,152,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,220,221,222,233,236,237,238,247,256,258,259,268,280,],[-24,-159,-159,-159,126,-97,-111,-112,-100,-99,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-24,-159,-159,-159,-159,]),'[':([38,48,74,98,114,137,157,159,165,196,],[-21,82,-60,-98,-21,82,-21,82,209,82,]),']':([81,84,93,95,96,98,99,100,101,119,123,124,125,126,127,128,131,132,133,135,137,138,141,145,148,149,165,169,170,171,172,173,176,177,181,184,185,208,210,214,217,223,224,225,226,227,228,229,241,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-159,-98,-83,-159,-159,165,-92,-101,-103,-102,-105,-104,-159,-94,-68,-70,-159,-159,-74,-81,-71,-73,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-69,-80,-79,-77,-78,-75,-76,-72,262,-90,-89,-144,-150,-85,-84,-152,-149,]),'YES':([11,],[27,]),'IF':([43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[76,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,76,-66,-52,-53,-37,-50,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'AND':([81,84,93,95,98,99,100,101,123,124,125,126,127,128,131,132,137,138,141,145,165,169,170,171,172,173,176,177,181,184,185,208,210,214,223,224,225,226,227,228,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,-159,147,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-74,-81,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-80,-79,-77,-78,-75,-76,-90,-89,-144,-150,-85,-84,-152,-149,]),'ALL':([8,9,],[21,21,]),'FALSE':([52,55,82,86,88,89,90,91,94,97,104,115,129,134,139,140,142,143,144,146,147,152,175,178,179,180,182,183,186,187,188,189,190,191,192,197,199,209,215,216,220,221,222,233,236,237,238,247,256,258,259,268,280,],[-24,-159,-159,-159,127,-97,-111,-112,-100,-99,-159,-159,-159,-24,-24,-24,-24,-24,-24,-24,-24,-159,-24,-24,-159,-159,-24,-24,-159,-159,-159,-159,-159,-159,-159,-114,-61,-159,-159,-159,-100,-159,-159,-159,-159,-64,-24,-159,-24,-159,-159,-159,-159,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,118,155,156,166,205,212,213,260,267,273,274,275,278,284,288,292,293,],[-159,-159,16,-4,-3,16,-9,-8,-11,-10,-6,-5,-12,-7,-13,16,16,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,16,-66,-52,-53,-37,-50,-51,16,-140,-137,-27,16,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'EQ':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,143,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'LTEQ':([81,84,93,95,98,99,100,123,124,125,126,127,128,131,132,137,138,165,169,170,171,172,173,176,177,181,184,185,208,210,214,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,-98,-83,140,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-90,-89,-144,-150,-85,-84,-152,-149,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,118,155,156,166,205,212,213,260,267,273,274,275,278,284,288,292,293,],[-159,-159,17,-4,-3,17,-9,-8,-11,-10,-6,-5,-12,-7,-13,17,17,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,17,-66,-52,-53,-37,-50,-51,17,-140,-137,-27,17,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'OR':([81,84,93,95,96,98,99,100,101,123,124,125,126,127,128,131,132,137,138,141,145,148,149,165,169,170,171,172,173,176,177,181,184,185,208,210,214,223,224,225,226,227,228,229,243,244,245,246,249,250,262,276,],[-42,-43,-88,-96,134,-98,-83,-159,-159,-92,-101,-103,-102,-105,-104,-159,-94,-159,-159,-74,-81,-71,-73,-159,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-151,-153,-93,-80,-79,-77,-78,-75,-76,-72,-90,-89,-144,-150,-85,-84,-152,-149,]),'TRACK':([60,],[107,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,59,61,62,63,64,65,71,72,73,75,77,78,109,111,112,113,117,118,155,156,166,205,212,213,260,267,273,274,275,278,284,288,292,293,],[-159,-159,18,-4,-3,18,-9,-8,-11,-10,-6,-5,-12,-7,-13,18,18,-28,-19,-56,-65,-141,-67,-143,-57,-142,-58,-54,-55,18,-66,-52,-53,-37,-50,-51,18,-140,-137,-27,18,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'{':([35,87,122,203,231,239,254,272,283,291,],[43,-32,43,-34,-115,43,43,-48,43,43,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,37,40,44,50,51,112,166,212,213,275,],[-159,-159,-159,-4,-3,-2,-159,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,-159,-17,-159,41,-16,-15,-33,-28,-19,-37,-27,-30,-26,-29,]),'}':([43,50,51,59,61,62,63,64,65,69,71,72,73,75,77,78,109,111,112,113,116,117,155,156,166,212,213,260,267,273,274,275,278,284,288,292,293,],[-159,-28,-19,-56,-65,-141,-67,-39,-57,112,-142,-58,-54,-55,-159,-66,-52,-53,-37,-50,-38,-51,-140,-137,-27,-30,-26,-159,-116,-46,-49,-29,-113,-44,-45,-126,-123,]),'+':([52,55,81,82,84,86,89,93,95,98,99,104,115,123,124,125,126,127,128,129,131,132,134,137,138,139,140,142,143,144,146,147,152,165,169,170,171,172,173,175,176,177,178,179,180,181,182,183,186,187,188,189,190,191,192,197,199,208,209,210,214,215,216,221,222,233,236,237,238,243,244,245,246,247,256,258,259,262,268,276,280,],[-24,90,-42,90,-43,90,-97,-88,-96,-98,-83,90,90,-92,-101,-103,-102,-105,-104,90,-159,-94,-24,-159,182,-24,-24,-24,-24,-24,-24,-24,90,-159,-106,-108,-107,-110,-109,-24,-87,-91,-24,90,90,-95,-24,-24,90,90,90,90,90,90,90,-114,-61,-151,90,-153,-93,90,90,90,90,90,90,-64,-24,-90,-89,-144,-150,90,-24,90,90,-152,90,-149,90,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([118,],[161,]),'superexpressionB':([101,],[148,]),'while_quadruple':([231,],[254,]),'seen_term':([99,],[138,]),'validate_id':([102,252,],[150,266,]),'for_quadruple':([257,],[269,]),'whileloop':([43,77,],[59,59,]),'seen_iconst':([126,],[171,]),'signB':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,215,216,221,222,233,236,247,258,259,268,280,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'endcondition_quadruple':([274,],[284,]),'expressionB':([100,],[141,]),'funcsOpt':([30,33,42,],[34,40,54,]),'push_operator':([52,134,139,140,142,143,144,146,147,175,178,182,183,238,256,],[86,179,186,187,188,189,190,191,192,215,216,221,222,259,268,]),'program':([0,],[5,]),'factor':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,215,216,221,222,233,236,247,258,259,268,280,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'main':([34,],[42,]),'return':([43,77,],[66,66,]),'read':([43,77,],[68,68,]),'paramsB':([162,240,],[204,261,]),'localdirective':([43,77,],[72,72,]),'quadruple_assign':([121,271,279,],[167,282,286,]),'condition':([43,77,],[75,75,]),'suprafunc':([30,33,42,],[33,33,33,]),'term':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,215,216,221,222,233,236,247,258,259,268,280,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,243,244,99,99,99,99,99,99,99,99,99,]),'start_quadruple':([13,],[30,]),'push_type':([14,],[31,]),'init_while':([57,197,],[103,236,]),'localdecisiondirective':([43,77,],[78,78,]),'output':([43,77,],[79,79,]),'seen_sconst':([125,],[170,]),'assignfunccallB':([159,],[198,]),'sign':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,215,216,221,222,233,236,247,258,259,268,280,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'return_quadruple':([92,],[130,]),'funccallC':([218,264,270,],[245,276,281,]),'funccallB':([180,247,258,],[218,264,270,]),'dimensions':([48,137,159,196,],[81,81,81,81,]),'condition_quadruple':([160,],[202,]),'hyperexpression':([55,82,86,104,115,129,152,179,180,209,233,236,247,258,259,268,280,],[92,119,121,153,160,174,194,217,219,241,153,257,219,219,271,279,287,]),'seen_param':([219,],[248,]),'body':([6,],[12,]),'forloop':([43,77,],[65,65,]),'superexpression':([55,82,86,104,115,129,152,179,180,192,209,233,236,247,258,259,268,280,],[96,96,96,96,96,96,96,96,96,229,96,96,96,96,96,96,96,96,]),'assignfunccall':([43,77,],[70,70,]),'seen_main':([87,],[122,]),'seen_factor':([93,],[131,]),'seen_true':([128,],[173,]),'repush_type':([49,211,],[85,242,]),'localmsgdirective':([43,77,],[63,63,]),'termB':([131,],[176,]),'expression':([55,82,86,104,115,129,152,179,180,192,209,233,236,247,258,259,268,280,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'assign':([110,],[158,]),'block':([35,122,239,254,283,291,],[44,168,260,267,288,292,]),'seen_funccall':([74,],[114,]),'read_quadruple':([193,277,],[230,285,]),'configdirective':([0,3,],[3,3,]),'constant':([88,],[123,]),'print_quadruple':([153,],[195,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([60,],[108,]),'localvardirective':([43,77,],[61,61,]),'seen_parentheses':([89,],[129,]),'params':([118,205,],[162,240,]),'type':([6,19,36,43,77,118,205,],[14,14,47,14,14,164,164,]),'empty':([0,3,6,19,30,33,42,43,48,55,77,82,86,96,100,101,104,115,118,129,131,137,138,152,159,162,165,179,180,186,187,188,189,190,191,192,196,209,215,216,221,222,230,233,236,240,247,258,259,260,268,280,285,],[7,7,20,20,37,37,37,64,84,94,64,94,94,135,145,149,94,94,163,94,177,84,185,94,84,206,210,94,220,94,94,94,94,94,94,94,84,94,94,94,94,94,253,94,94,206,220,220,94,273,94,94,253,]),'for_expression':([287,],[290,]),'else':([260,],[274,]),'func':([30,33,42,],[35,35,35,]),'declaration':([6,19,43,77,],[19,19,73,73,]),'expB':([138,],[184,]),'declarationB':([31,85,242,],[39,120,263,]),'declarationC':([39,120,263,],[51,166,275,]),'declarationD':([167,],[213,]),'seen_factor_funccall':([95,],[132,]),'declarationsOpt':([6,19,],[13,32,]),'instruction':([43,77,],[77,77,]),'pop_operand':([199,],[237,]),'seen_a_funccall':([237,],[258,]),'outputB':([104,233,],[154,255,]),'outputC':([195,],[234,]),'dimensionsB':([165,],[208,]),'push_operand':([38,114,150,157,266,],[48,159,193,196,277,]),'dimensionsOpt':([48,137,159,196,],[83,181,201,235,]),'seen_a_factor_funccall':([98,],[136,]),'readB':([230,285,],[251,289,]),'seen_ID':([98,],[137,]),'hyperexpressionB':([96,],[133,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([272,],[283,]),'funccall':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,215,216,221,222,233,236,247,258,259,268,280,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'instructionsOpt':([43,77,],[69,116,]),'returntype':([36,],[46,]),'seen_fconst':([124,],[169,]),'seen_false':([127,],[172,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([292,],[293,]),'assignB':([159,],[200,]),'exp':([55,82,86,104,115,129,152,179,180,186,187,188,189,190,191,192,209,221,222,233,236,247,258,259,268,280,],[100,100,100,100,100,100,100,100,100,223,224,225,226,227,228,100,100,249,250,100,100,100,100,100,100,100,]),'endwhile_quadruple':([267,],[278,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',37),
  ('start_quadruple -> <empty>','start_quadruple',0,'p_start_quadruple','parser.py',40),
  ('config -> configdirective config','config',2,'p_config','parser.py',46),
  ('config -> empty','config',1,'p_config','parser.py',47),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',51),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',52),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',53),
  ('options -> SOME','options',1,'p_options','parser.py',56),
  ('options -> ALL','options',1,'p_options','parser.py',57),
  ('options -> MOST','options',1,'p_options','parser.py',58),
  ('options -> NONE','options',1,'p_options','parser.py',59),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',62),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',63),
  ('body -> declarationsOpt start_quadruple funcsOpt main funcsOpt','body',5,'p_body','parser.py',67),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',70),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',71),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',74),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',75),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',79),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',87),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',109),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',118),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',122),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',127),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',131),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',149),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',150),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',151),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',159),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',160),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',164),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',167),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',175),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',205),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',229),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',230),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',234),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',237),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',238),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',242),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',249),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',252),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',253),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',259),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',263),
  ('else -> empty','else',1,'p_else','parser.py',264),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',267),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',279),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',288),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',298),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',299),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',300),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',301),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',302),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',303),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',304),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',305),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',306),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',311),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',341),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',346),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',352),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',353),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',357),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',362),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',363),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',364),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',368),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',371),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',372),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',380),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',383),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',384),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',392),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',396),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',397),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',398),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',399),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',400),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',401),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',402),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',411),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',414),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',421),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',422),
  ('expB -> empty','expB',1,'p_expB','parser.py',423),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',427),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',430),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',436),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',437),
  ('termB -> empty','termB',1,'p_termB','parser.py',438),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',444),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',445),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',446),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',447),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',457),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',475),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',479),
  ('signB -> sign','signB',1,'p_signB','parser.py',497),
  ('signB -> empty','signB',1,'p_signB','parser.py',498),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',503),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',508),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',513),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',518),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',523),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',528),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',529),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',530),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',531),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',532),
  ('sign -> +','sign',1,'p_sign','parser.py',544),
  ('sign -> -','sign',1,'p_sign','parser.py',545),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',550),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',553),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',557),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',569),
  ('type -> INT','type',1,'p_type','parser.py',580),
  ('type -> FLOAT','type',1,'p_type','parser.py',581),
  ('type -> STRING','type',1,'p_type','parser.py',582),
  ('type -> BOOL','type',1,'p_type','parser.py',583),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',589),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',590),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',595),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',599),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',614),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',626),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',636),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',639),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',647),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',654),
  ('readB -> empty','readB',1,'p_readB','parser.py',655),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',658),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',661),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',664),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',673),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',674),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',678),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',692),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',693),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',698),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',703),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',704),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',705),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',711),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',739),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',744),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',745),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',748),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',766),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',767),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',771),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',775),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',776),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',781),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',785),
  ('params -> type ID','params',2,'p_params','parser.py',804),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',813),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',814),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',817),
]
