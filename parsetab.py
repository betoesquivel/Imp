
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x83'\x88J\x0e\x14\xff{:\x0f_@\xc7\xdb\xbf\x05"
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[56,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,56,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'VOID':([33,],[43,]),'SOME':([8,9,],[22,22,]),'WHILE':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[58,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,58,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'SCONST':([101,103,189,],[151,154,151,]),'PRINT':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[59,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,59,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'TRUE':([48,51,56,83,84,85,86,87,89,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[-122,-122,-122,-79,124,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'>':([50,53,88,90,92,93,94,120,121,122,123,124,128,129,134,137,138,141,148,160,168,169,170,172,173,174,183,185,196,197,223,227,],[-35,-36,-122,-77,-122,-122,143,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,178,-122,-112,-76,-73,-72,-110,-69,-68,-115,-117,-111,-114,-116,-113,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,37,40,42,47,49,109,119,131,132,149,206,],[-122,-122,-122,-3,-2,33,-122,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-26,-18,-22,-30,-21,-20,-24,-25,-23,]),'FORGET':([61,],[102,]),'NONE':([8,9,],[23,23,]),'FCONST':([48,51,56,83,84,85,86,87,89,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[-122,-122,-122,-79,121,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'NO':([11,],[29,]),')':([50,53,54,88,90,92,93,94,95,112,118,120,121,122,123,124,125,128,129,133,134,137,138,139,142,145,147,148,150,151,152,158,160,161,163,164,165,166,168,169,170,172,173,174,176,179,183,185,194,195,196,197,202,204,205,207,208,209,210,211,212,218,220,222,223,226,227,231,232,],[-35,-36,97,-122,-77,-122,-122,-122,-122,160,-122,-84,-81,-82,-75,-83,168,-71,-74,160,-78,-67,-70,-59,-66,-55,-58,-122,186,187,187,-122,-112,197,200,201,-122,-29,-76,-73,-72,-110,-69,-68,-60,-61,-115,-117,219,-97,-111,-114,-28,-121,-119,-63,-64,-62,-65,-56,-57,-122,197,-122,-116,-96,-113,-120,234,]),'(':([39,48,51,56,58,59,68,73,74,76,81,85,92,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[54,85,85,85,100,101,108,110,112,115,118,85,133,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([50,53,88,90,92,120,121,122,123,124,134,148,160,168,172,183,185,196,197,223,227,],[-35,-36,126,-77,-122,-84,-81,-82,-75,-83,-78,-122,-112,-76,-110,-115,-117,-111,-114,-116,-113,]),'-':([48,50,51,53,56,85,88,90,92,93,100,101,112,115,120,121,122,123,124,126,127,128,129,133,134,135,136,141,143,148,160,162,168,169,170,172,175,177,178,180,181,182,183,184,185,189,192,196,197,198,216,223,225,227,],[87,-35,87,-36,87,87,-122,-77,-122,136,87,87,87,87,-84,-81,-82,-75,-83,87,87,-71,-74,87,-78,87,87,87,87,-122,-112,87,-76,-73,-72,-110,87,87,87,87,87,87,-115,87,-117,87,87,-111,-114,87,87,-116,87,-113,]),',':([35,36,50,52,53,82,88,90,91,92,93,94,95,120,121,122,123,124,128,129,134,137,138,139,142,145,147,148,151,152,158,160,161,165,168,169,170,171,172,173,174,176,179,183,185,196,197,205,207,208,209,210,211,212,218,220,222,223,227,],[46,-122,-35,-19,-36,46,-122,-77,130,-122,-122,-122,-122,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-59,-66,-55,-58,-122,189,189,193,-112,198,203,-76,-73,-72,46,-110,-69,-68,-60,-61,-115,-117,-111,-114,-119,-63,-64,-62,-65,-56,-57,193,198,203,-116,-113,]),'/':([50,53,88,90,92,120,121,122,123,124,134,148,160,168,172,183,185,196,197,223,227,],[-35,-36,127,-77,-122,-84,-81,-82,-75,-83,-78,-122,-112,-76,-110,-115,-117,-111,-114,-116,-113,]),'ID':([14,15,16,17,18,41,43,44,45,46,47,48,49,51,56,60,62,63,65,66,70,71,72,75,77,78,79,85,99,100,101,102,104,105,106,107,108,109,110,112,115,117,119,126,127,130,131,132,133,135,136,141,143,154,155,162,167,175,177,178,180,181,182,184,189,192,193,198,206,214,216,221,225,228,229,233,235,],[-90,-88,36,-89,-91,74,-92,81,-93,36,-18,92,-22,92,92,-46,-52,-107,-109,-47,-108,-48,-44,-45,74,-54,-53,92,-40,92,92,-105,-104,155,-43,-42,156,-30,158,92,92,-41,-21,92,92,36,-20,-24,92,92,92,92,92,-106,-103,92,205,92,92,92,92,92,92,92,92,92,218,92,-23,-87,92,-122,92,-37,-39,-38,-94,]),'TRACKDECISION':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[63,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,63,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),';':([35,36,50,52,53,57,64,67,80,82,88,90,91,92,93,94,95,98,111,113,120,121,122,123,124,128,129,134,137,138,139,142,145,147,148,153,157,159,160,168,169,170,171,172,173,174,176,179,183,185,187,188,190,196,197,199,207,208,209,210,211,212,215,217,219,223,224,227,],[49,-122,-35,-19,-36,99,106,107,117,49,-122,-77,132,-122,-122,-122,-122,-118,-49,-51,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-59,-66,-55,-58,-122,-98,192,-50,-112,-76,-73,-72,49,-110,-69,-68,-60,-61,-115,-117,-101,-99,-100,-111,-114,-34,-63,-64,-62,-65,-56,-57,-102,225,-95,-116,-33,-113,]),'=':([1,2,4,35,36,50,52,53,74,82,88,90,92,93,94,114,120,121,122,123,124,128,129,134,137,138,140,141,143,148,156,160,168,169,170,171,172,173,174,183,185,191,196,197,223,227,],[8,9,11,48,-122,-35,-19,-36,-122,48,-122,-77,-122,-122,140,162,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,175,177,180,-122,-122,-112,-76,-73,-72,48,-110,-69,-68,-115,-117,216,-111,-114,-116,-113,]),'<':([50,53,88,90,92,93,94,120,121,122,123,124,128,129,134,137,138,148,160,168,169,170,172,173,174,183,185,196,197,223,227,],[-35,-36,-122,-77,-122,-122,141,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-122,-112,-76,-73,-72,-110,-69,-68,-115,-117,-111,-114,-116,-113,]),'$end':([5,12,30,34,38,40,42,55,109,149,],[0,-1,-122,-15,-14,-122,-26,-13,-30,-25,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,131,132,154,155,203,206,214,221,228,229,233,235,],[-122,-122,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,14,-54,-53,-40,-43,-42,-30,-41,14,-21,-20,-24,-106,-103,14,-23,-87,-122,-37,-39,-38,-94,]),'FOR':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[68,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,68,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'SHOW':([61,],[103,]),'#':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[61,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,61,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'ELSE':([109,221,],[-30,230,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[70,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,70,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'ICONST':([48,51,56,83,84,85,86,87,89,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[-122,-122,-122,-79,122,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'INPUT':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[73,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,73,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'[':([36,74,92,148,156,],[51,51,51,184,51,]),']':([50,53,88,90,92,93,94,95,96,120,121,122,123,124,128,129,134,137,138,139,142,145,147,148,160,168,169,170,172,173,174,176,179,183,185,196,197,207,208,209,210,211,212,213,223,227,],[-35,-36,-122,-77,-122,-122,-122,-122,148,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-59,-66,-55,-58,-122,-112,-76,-73,-72,-110,-69,-68,-60,-61,-115,-117,-111,-114,-63,-64,-62,-65,-56,-57,223,-116,-113,]),'YES':([11,],[27,]),'IF':([41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,119,131,132,154,155,206,214,221,228,229,233,235,],[76,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,76,-54,-53,-40,-43,-42,-30,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'&':([50,53,88,90,92,93,94,95,120,121,122,123,124,128,129,134,137,138,139,142,144,148,160,168,169,170,172,173,174,176,179,183,185,196,197,207,208,209,210,223,227,],[-35,-36,-122,-77,-122,-122,-122,144,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-59,-66,181,-122,-112,-76,-73,-72,-110,-69,-68,-60,-61,-115,-117,-111,-114,-63,-64,-62,-65,-116,-113,]),'ALL':([8,9,],[21,21,]),'FALSE':([48,51,56,83,84,85,86,87,89,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[-122,-122,-122,-79,120,-122,-85,-86,-80,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,131,132,154,155,203,206,214,221,228,229,233,235,],[-122,-122,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,15,-54,-53,-40,-43,-42,-30,-41,15,-21,-20,-24,-106,-103,15,-23,-87,-122,-37,-39,-38,-94,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,131,132,154,155,203,206,214,221,228,229,233,235,],[-122,-122,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,17,-54,-53,-40,-43,-42,-30,-41,17,-21,-20,-24,-106,-103,17,-23,-87,-122,-37,-39,-38,-94,]),'|':([50,53,88,90,92,93,94,95,120,121,122,123,124,128,129,134,137,138,139,142,146,148,160,168,169,170,172,173,174,176,179,183,185,196,197,207,208,209,210,223,227,],[-35,-36,-122,-77,-122,-122,-122,146,-84,-81,-82,-75,-83,-71,-74,-78,-67,-70,-59,-66,182,-122,-112,-76,-73,-72,-110,-69,-68,-60,-61,-115,-117,-111,-114,-63,-64,-62,-65,-116,-113,]),'TRACK':([61,],[104,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,41,47,49,60,62,63,65,66,70,71,72,75,77,78,79,99,106,107,109,117,118,119,131,132,154,155,203,206,214,221,228,229,233,235,],[-122,-122,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-18,-22,-46,-52,-107,-109,-47,-108,-48,-44,-45,18,-54,-53,-40,-43,-42,-30,-41,18,-21,-20,-24,-106,-103,18,-23,-87,-122,-37,-39,-38,-94,]),'{':([32,97,186,200,201,230,234,],[41,41,41,41,-27,41,41,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,37,38,42,47,49,109,119,131,132,206,],[-122,-122,-122,-3,-2,-122,-122,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-122,39,-15,-16,-14,-26,-18,-22,-30,-21,-20,-24,-23,]),'}':([41,47,49,60,62,63,65,66,69,70,71,72,75,77,78,79,99,106,107,109,116,117,119,131,132,154,155,206,214,221,228,229,233,235,],[-122,-18,-22,-46,-52,-107,-32,-47,109,-108,-48,-44,-45,-122,-54,-53,-40,-43,-42,-30,-31,-41,-21,-20,-24,-106,-103,-23,-87,-122,-37,-39,-38,-94,]),'+':([48,50,51,53,56,85,88,90,92,93,100,101,112,115,120,121,122,123,124,126,127,128,129,133,134,135,136,141,143,148,160,162,168,169,170,172,175,177,178,180,181,182,183,184,185,189,192,196,197,198,216,223,225,227,],[86,-35,86,-36,86,86,-122,-77,-122,135,86,86,86,86,-84,-81,-82,-75,-83,86,86,-71,-74,86,-78,86,86,86,86,-122,-112,86,-76,-73,-72,-110,86,86,86,86,86,86,-115,86,-117,86,86,-111,-114,86,86,-116,86,-113,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([84,],[123,]),'localdirective':([41,77,],[71,71,]),'assignfunccallB':([74,],[111,]),'assignfunccall':([41,77,],[57,57,]),'paramsOpt':([118,],[164,]),'assignB':([74,],[113,]),'sign':([48,51,56,85,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'localvardirective':([41,77,],[62,62,]),'dimensionsB':([148,],[183,]),'dimensionsOpt':([36,74,92,156,],[52,114,134,191,]),'forloop':([41,77,],[66,66,]),'funccallB':([112,133,],[159,172,]),'funccallC':([161,220,],[196,227,]),'dimensions':([36,74,92,156,],[50,50,50,50,]),'optionsyesno':([11,],[28,]),'expressionB':([94,],[139,]),'funcsOpt':([13,30,40,],[31,38,55,]),'localvardirectiveB':([61,],[105,]),'configdirective':([0,3,],[3,3,]),'program':([0,],[5,]),'params':([118,203,],[165,222,]),'factor':([48,51,56,85,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'input':([41,77,],[64,64,]),'main':([31,],[40,]),'type':([6,19,33,41,77,118,203,],[16,16,45,16,16,167,167,]),'empty':([0,3,6,13,19,30,36,40,41,48,51,56,74,77,85,88,92,93,94,95,100,101,112,115,118,126,127,133,135,136,141,143,148,156,158,162,165,175,177,178,180,181,182,184,189,192,198,216,218,221,222,225,],[7,7,20,34,20,34,53,34,65,89,89,89,53,65,89,129,53,138,142,147,89,89,89,89,166,89,89,89,89,89,89,89,185,53,195,89,204,89,89,89,89,89,89,89,89,89,89,89,195,229,204,89,]),'body':([6,],[12,]),'whileloop':([41,77,],[60,60,]),'return':([41,77,],[67,67,]),'superexpressionB':([95,],[145,]),'funccall':([48,51,56,85,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'instructionsOpt':([41,77,],[69,116,]),'else':([221,],[228,]),'superexpression':([48,51,56,85,100,101,112,115,133,162,181,182,184,189,192,198,216,225,],[91,96,98,125,150,152,161,163,161,199,211,212,213,152,217,220,224,232,]),'paramsB':([165,222,],[202,231,]),'func':([13,30,40,],[32,32,32,]),'declaration':([6,19,41,77,],[19,19,72,72,]),'returntype':([33,],[44,]),'expB':([93,],[137,]),'declarationB':([16,46,130,],[35,82,171,]),'declarationC':([35,82,171,],[47,119,206,]),'declarationD':([91,],[131,]),'condition':([41,77,],[75,75,]),'suprafunc':([13,30,40,],[30,30,30,]),'declarationsOpt':([6,19,],[13,37,]),'term':([48,51,56,85,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[93,93,93,93,93,93,93,93,169,170,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'signB':([48,51,56,85,100,101,112,115,126,127,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'config':([0,3,],[6,10,]),'instruction':([41,77,],[77,77,]),'assign':([108,],[157,]),'inputB':([158,218,],[194,226,]),'localmsgdirective':([41,77,],[78,78,]),'localdecisiondirective':([41,77,],[79,79,]),'termB':([88,],[128,]),'exp':([48,51,56,85,100,101,112,115,133,135,136,141,143,162,175,177,178,180,181,182,184,189,192,198,216,225,],[94,94,94,94,94,94,94,94,94,173,174,176,179,94,207,208,209,210,94,94,94,94,94,94,94,94,]),'outputB':([101,189,],[153,215,]),'output':([41,77,],[80,80,]),'expression':([48,51,56,85,100,101,112,115,133,162,181,182,184,189,192,198,216,225,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'options':([8,9,],[25,26,]),'block':([32,97,186,200,230,234,],[42,149,214,221,233,235,]),'outputC':([151,152,],[188,190,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',14),
  ('config -> configdirective config','config',2,'p_config','parser.py',18),
  ('config -> empty','config',1,'p_config','parser.py',19),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',23),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',24),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',25),
  ('options -> SOME','options',1,'p_options','parser.py',28),
  ('options -> ALL','options',1,'p_options','parser.py',29),
  ('options -> MOST','options',1,'p_options','parser.py',30),
  ('options -> NONE','options',1,'p_options','parser.py',31),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',34),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',35),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',39),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',42),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',43),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',46),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',47),
  ('declaration -> type declarationB declarationC','declaration',3,'p_declaration','parser.py',51),
  ('declarationB -> ID dimensionsOpt','declarationB',2,'p_declarationB','parser.py',54),
  ('declarationC -> = superexpression declarationD','declarationC',3,'p_declarationC','parser.py',72),
  ('declarationC -> , declarationB declarationC','declarationC',3,'p_declarationC','parser.py',73),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',74),
  ('declarationD -> , declarationB declarationC','declarationD',3,'p_declarationD','parser.py',82),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',83),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',87),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',91),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',96),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',107),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',108),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',112),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',115),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',116),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',120),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',127),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',130),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',131),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',136),
  ('else -> ELSE block','else',2,'p_else','parser.py',140),
  ('else -> empty','else',1,'p_else','parser.py',141),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',145),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',146),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',147),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',148),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',149),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',150),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',151),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',152),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',153),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',158),
  ('assignfunccallB -> ( funccallB','assignfunccallB',2,'p_assignfunccallB','parser.py',161),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',162),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',166),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',167),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',168),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',172),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',175),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',176),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',177),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',181),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',184),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',185),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',186),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',187),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',188),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',189),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',190),
  ('exp -> term expB','exp',2,'p_exp','parser.py',194),
  ('expB -> - exp','expB',2,'p_expB','parser.py',197),
  ('expB -> + exp','expB',2,'p_expB','parser.py',198),
  ('expB -> empty','expB',1,'p_expB','parser.py',199),
  ('term -> factor termB','term',2,'p_term','parser.py',203),
  ('termB -> / term','termB',2,'p_termB','parser.py',206),
  ('termB -> * term','termB',2,'p_termB','parser.py',207),
  ('termB -> empty','termB',1,'p_termB','parser.py',208),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',214),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',215),
  ('factor -> funccall','factor',1,'p_factor','parser.py',216),
  ('factor -> ID dimensionsOpt','factor',2,'p_factor','parser.py',217),
  ('signB -> sign','signB',1,'p_signB','parser.py',220),
  ('signB -> empty','signB',1,'p_signB','parser.py',221),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',225),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',226),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',227),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',228),
  ('sign -> +','sign',1,'p_sign','parser.py',232),
  ('sign -> -','sign',1,'p_sign','parser.py',233),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',237),
  ('type -> INT','type',1,'p_type','parser.py',241),
  ('type -> FLOAT','type',1,'p_type','parser.py',242),
  ('type -> STRING','type',1,'p_type','parser.py',243),
  ('type -> BOOL','type',1,'p_type','parser.py',244),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',249),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',250),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',255),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',259),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',262),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',263),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',266),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',269),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',270),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',273),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',274),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',278),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',281),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',282),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',286),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',290),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',291),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',292),
  ('funccall -> ID ( funccallB','funccall',3,'p_funccall','parser.py',296),
  ('funccallB -> superexpression funccallC','funccallB',2,'p_funccallB','parser.py',299),
  ('funccallB -> )','funccallB',1,'p_funccallB','parser.py',300),
  ('funccallC -> , superexpression funccallC','funccallC',3,'p_funccallC','parser.py',303),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',304),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',308),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',312),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',313),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',318),
  ('params -> type ID','params',2,'p_params','parser.py',322),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',331),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',332),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',335),
]
