
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '9k;\x01\xd5\x18\x10\x1f\xd8\xed\x8b\x81\xd8H\xc9\x00'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[49,-50,-56,-113,-115,-51,-114,-52,-48,-49,49,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[51,-50,-56,-113,-115,-51,-114,-52,-48,-49,51,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'/':([86,88,90,106,112,121,122,123,124,125,126,133,168,172,194,196,205,219,221,230,238,],[129,-81,-83,-39,-40,-79,-86,-88,-87,-90,-89,-128,-80,-82,-120,-128,-116,-121,-123,-119,-122,]),'PRINT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[52,-50,-56,-113,-115,-51,-114,-52,-48,-49,52,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'TRUE':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,157,160,175,176,177,179,181,182,186,189,195,214,220,228,],[-128,-22,-84,126,-128,-91,-92,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,]),'>':([86,88,90,91,92,106,112,121,122,123,124,125,126,130,131,133,136,137,140,168,169,170,172,173,174,194,196,205,219,221,230,238,],[-128,-81,-83,-128,142,-39,-40,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,177,-80,-77,-76,-82,-73,-72,-120,-128,-116,-121,-123,-119,-122,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,104,120,166,225,226,240,],[-128,-128,-128,-3,-2,33,-128,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-30,-26,-18,-34,-29,-25,-28,-24,-27,]),'FORGET':([54,],[97,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,157,160,175,176,177,179,181,182,186,189,195,214,220,228,],[-128,-22,-84,122,-128,-91,-92,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,]),'NO':([11,],[29,]),')':([47,86,88,90,91,92,93,106,108,112,116,121,122,123,124,125,126,127,130,131,132,133,136,137,138,141,144,146,147,148,149,155,156,157,158,161,162,163,164,168,169,170,171,172,173,174,178,180,191,192,194,195,196,200,202,203,205,206,207,208,209,210,211,216,218,219,221,223,229,230,235,237,238,],[80,-128,-81,-83,-128,-128,-128,-39,-128,-40,-128,-79,-86,-88,-87,-90,-89,168,-75,-78,-128,-128,-71,-74,-63,-70,-59,-62,183,184,184,-128,194,-118,-117,198,199,-128,-33,-80,-77,-76,194,-82,-73,-72,-64,-65,217,-103,-120,-128,-128,-32,-127,-125,-116,-67,-68,-66,-69,-60,-61,-128,194,-121,-123,-128,-102,-119,-126,241,-122,]),'(':([38,49,51,52,61,66,67,69,74,79,83,90,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[47,83,95,96,103,105,108,113,116,-22,83,132,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,90,106,112,121,122,123,124,125,126,133,168,172,194,196,205,219,221,230,238,],[128,-81,-83,-39,-40,-79,-86,-88,-87,-90,-89,-128,-80,-82,-120,-128,-116,-121,-123,-119,-122,]),'-':([49,79,83,86,88,90,91,95,96,106,108,110,112,113,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,140,142,160,168,169,170,172,175,176,177,179,181,182,186,189,194,195,196,205,214,219,220,221,228,230,238,],[85,-22,85,-128,-81,-83,135,85,85,-39,85,85,-40,85,85,-79,-86,-88,-87,-90,-89,85,85,-75,-78,85,-128,85,85,85,85,85,-80,-77,-76,-82,85,85,85,85,85,85,85,85,-120,85,-128,-116,85,-121,85,-123,85,-119,-122,]),',':([45,46,75,86,88,90,91,92,93,106,108,112,117,118,121,122,123,124,125,126,130,131,132,133,136,137,138,141,144,146,148,149,155,156,157,158,163,167,168,169,170,171,172,173,174,178,180,194,195,196,203,204,205,206,207,208,209,210,211,216,218,219,221,223,230,236,238,],[-20,76,-128,-128,-81,-83,-128,-128,-128,-39,-128,-40,-19,76,-79,-86,-88,-87,-90,-89,-75,-78,-128,-128,-71,-74,-63,-70,-59,-62,186,186,190,195,-118,-117,201,-23,-80,-77,-76,195,-82,-73,-72,-64,-65,-120,-128,-128,-125,224,-116,-67,-68,-66,-69,-60,-61,190,195,-121,-123,201,-119,76,-122,]),'SCONST':([49,79,81,82,83,84,85,87,95,96,98,108,110,113,119,128,129,132,134,135,140,142,157,160,175,176,177,179,181,182,186,189,195,214,220,228,],[-128,-22,-84,123,-128,-91,-92,-85,-128,148,151,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-85,-128,-128,-128,-128,-128,-128,-128,148,-128,-128,-128,-128,-128,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,58,59,63,64,65,68,70,71,72,76,77,78,79,83,94,95,96,97,99,100,101,102,103,104,105,108,110,113,115,119,128,129,132,134,135,140,142,151,152,160,165,166,175,176,177,179,181,182,186,189,190,195,212,214,220,222,224,225,226,228,232,233,239,240,242,],[-96,-94,-21,-95,-97,45,67,-98,74,-99,90,-50,-56,-113,-115,-51,-114,-52,-48,-49,67,-58,-57,45,-26,-18,-22,90,-44,90,90,-111,-110,152,-47,-46,153,-34,155,90,90,90,-45,90,90,90,90,90,90,90,90,-112,-109,90,203,-25,90,90,90,90,90,90,90,90,216,90,-93,90,90,-128,45,-28,-24,90,-41,-43,-42,-27,-100,]),'TRACKDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[56,-50,-56,-113,-115,-51,-114,-52,-48,-49,56,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),';':([45,46,50,57,60,73,75,86,88,89,90,91,92,93,106,107,109,112,117,118,121,122,123,124,125,126,130,131,133,136,137,138,141,144,146,150,154,167,168,169,170,172,173,174,178,180,184,185,187,193,194,196,197,204,205,206,207,208,209,210,211,213,215,217,219,221,227,230,236,238,],[-20,77,94,101,102,115,-128,-128,-81,-124,-83,-128,-128,-128,-39,-53,-55,-40,-19,77,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,-63,-70,-59,-62,-104,189,-23,-80,-77,-76,-82,-73,-72,-64,-65,-107,-105,-106,-54,-120,-128,-38,225,-116,-67,-68,-66,-69,-60,-61,-108,228,-101,-121,-123,-37,-119,77,-122,]),'=':([1,2,4,45,46,67,75,86,88,90,91,92,106,111,112,117,118,121,122,123,124,125,126,130,131,133,136,137,139,140,142,153,168,169,170,172,173,174,188,194,196,205,219,221,230,236,238,],[8,9,11,-20,79,-128,-128,-128,-81,-83,-128,139,-39,160,-40,-19,79,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,175,176,179,-128,-80,-77,-76,-82,-73,-72,214,-120,-128,-116,-121,-123,-119,79,-122,]),'<':([86,88,90,91,92,106,112,121,122,123,124,125,126,130,131,133,136,137,168,169,170,172,173,174,194,196,205,219,221,230,238,],[-128,-81,-83,-128,140,-39,-40,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,-80,-77,-76,-82,-73,-72,-120,-128,-116,-121,-123,-119,-122,]),'$end':([5,12,30,34,37,39,41,48,104,120,],[0,-1,-128,-15,-14,-128,-30,-13,-34,-29,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,151,152,166,201,212,222,225,226,232,233,239,240,242,],[-128,-128,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-50,-56,-113,-115,-51,-114,-52,-48,-49,14,-58,-57,-26,-18,-44,-47,-46,-34,-45,14,-112,-109,-25,14,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'FOR':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[61,-50,-56,-113,-115,-51,-114,-52,-48,-49,61,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'SHOW':([54,],[98,]),'#':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[54,-50,-56,-113,-115,-51,-114,-52,-48,-49,54,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'ELSE':([104,222,],[-34,234,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[63,-50,-56,-113,-115,-51,-114,-52,-48,-49,63,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'ICONST':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,157,160,175,176,177,179,181,182,186,189,195,214,220,228,],[-128,-22,-84,124,-128,-91,-92,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,]),'INPUT':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[66,-50,-56,-113,-115,-51,-114,-52,-48,-49,66,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'[':([45,67,75,90,133,153,196,],[-20,110,110,-83,110,110,220,]),']':([86,88,90,91,92,93,106,112,121,122,123,124,125,126,130,131,133,136,137,138,141,144,146,159,168,169,170,172,173,174,178,180,194,196,205,206,207,208,209,210,211,219,221,230,231,238,],[-128,-81,-83,-128,-128,-128,-39,-40,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,-63,-70,-59,-62,196,-80,-77,-76,-82,-73,-72,-64,-65,-120,-128,-116,-67,-68,-66,-69,-60,-61,-121,-123,-119,238,-122,]),'YES':([11,],[27,]),'IF':([40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,151,152,166,212,222,225,226,232,233,239,240,242,],[69,-50,-56,-113,-115,-51,-114,-52,-48,-49,69,-58,-57,-26,-18,-44,-47,-46,-34,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'&':([86,88,90,91,92,93,106,112,121,122,123,124,125,126,130,131,133,136,137,138,141,143,168,169,170,172,173,174,178,180,194,196,205,206,207,208,209,219,221,230,238,],[-128,-81,-83,-128,-128,143,-39,-40,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,-63,-70,181,-80,-77,-76,-82,-73,-72,-64,-65,-120,-128,-116,-67,-68,-66,-69,-121,-123,-119,-122,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,85,87,95,96,108,110,113,119,128,129,132,134,135,140,142,157,160,175,176,177,179,181,182,186,189,195,214,220,228,],[-128,-22,-84,125,-128,-91,-92,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-85,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,151,152,166,201,212,222,225,226,232,233,239,240,242,],[-128,-128,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-50,-56,-113,-115,-51,-114,-52,-48,-49,15,-58,-57,-26,-18,-44,-47,-46,-34,-45,15,-112,-109,-25,15,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,151,152,166,201,212,222,225,226,232,233,239,240,242,],[-128,-128,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-50,-56,-113,-115,-51,-114,-52,-48,-49,17,-58,-57,-26,-18,-44,-47,-46,-34,-45,17,-112,-109,-25,17,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'|':([86,88,90,91,92,93,106,112,121,122,123,124,125,126,130,131,133,136,137,138,141,145,168,169,170,172,173,174,178,180,194,196,205,206,207,208,209,219,221,230,238,],[-128,-81,-83,-128,-128,145,-39,-40,-79,-86,-88,-87,-90,-89,-75,-78,-128,-71,-74,-63,-70,182,-80,-77,-76,-82,-73,-72,-64,-65,-120,-128,-116,-67,-68,-66,-69,-121,-123,-119,-122,]),'TRACK':([54,],[99,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,58,59,63,64,65,68,70,71,72,77,78,94,101,102,104,115,116,151,152,166,201,212,222,225,226,232,233,239,240,242,],[-128,-128,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-50,-56,-113,-115,-51,-114,-52,-48,-49,18,-58,-57,-26,-18,-44,-47,-46,-34,-45,18,-112,-109,-25,18,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'{':([32,80,183,198,199,234,241,],[40,40,40,40,-31,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,104,166,225,226,240,],[-128,-128,-128,-3,-2,-128,-128,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-128,38,-15,-16,-14,-30,-26,-18,-34,-25,-28,-24,-27,]),'}':([40,53,55,56,58,59,62,63,64,65,68,70,71,72,77,78,94,101,102,104,114,115,151,152,166,212,222,225,226,232,233,239,240,242,],[-128,-50,-56,-113,-36,-51,104,-114,-52,-48,-49,-128,-58,-57,-26,-18,-44,-47,-46,-34,-35,-45,-112,-109,-25,-93,-128,-28,-24,-41,-43,-42,-27,-100,]),'+':([49,79,83,86,88,90,91,95,96,106,108,110,112,113,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,140,142,160,168,169,170,172,175,176,177,179,181,182,186,189,194,195,196,205,214,219,220,221,228,230,238,],[84,-22,84,-128,-81,-83,134,84,84,-39,84,84,-40,84,84,-79,-86,-88,-87,-90,-89,84,84,-75,-78,84,-128,84,84,84,84,84,-80,-77,-76,-82,84,84,84,84,84,84,84,84,-120,84,-128,-116,84,-121,84,-123,84,-119,-122,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([82,],[121,]),'localdirective':([40,70,],[64,64,]),'assignfunccallB':([67,],[107,]),'assignfunccall':([40,70,],[50,50,]),'paramsOpt':([116,],[162,]),'assignB':([67,],[109,]),'sign':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'localvardirective':([40,70,],[55,55,]),'push_operator':([79,],[119,]),'dimensionsB':([196,],[219,]),'push_operand':([45,],[75,]),'dimensionsOpt':([67,75,133,153,],[111,117,172,188,]),'forloop':([40,70,],[59,59,]),'funccallB':([108,132,195,],[156,171,218,]),'funccallC':([156,171,218,],[193,205,230,]),'dimensions':([67,75,133,153,],[106,106,106,106,]),'optionsyesno':([11,],[28,]),'expressionB':([92,],[138,]),'funcsOpt':([13,30,39,],[31,37,48,]),'localvardirectiveB':([54,],[100,]),'configdirective':([0,3,],[3,3,]),'seen_ID':([90,],[133,]),'program':([0,],[5,]),'params':([116,201,],[163,223,]),'factor':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'input':([40,70,],[57,57,]),'main':([31,],[39,]),'type':([6,19,33,40,70,116,201,],[16,16,44,16,16,165,165,]),'empty':([0,3,6,13,19,30,39,40,49,67,70,75,83,86,91,92,93,95,96,108,110,113,116,119,128,129,132,133,134,135,140,142,153,155,160,163,175,176,177,179,181,182,186,189,195,196,214,216,220,222,223,228,],[7,7,20,34,20,34,34,58,87,112,58,112,87,131,137,141,146,87,87,157,87,87,164,87,87,87,157,112,87,87,87,87,112,192,87,202,87,87,87,87,87,87,87,87,157,221,87,192,87,233,202,87,]),'body':([6,],[12,]),'whileloop':([40,70,],[53,53,]),'return':([40,70,],[60,60,]),'superexpressionB':([93,],[144,]),'funccall':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,70,],[62,114,]),'else':([222,],[232,]),'superexpression':([49,83,95,96,108,110,113,119,132,160,181,182,186,189,195,214,220,228,],[89,127,147,149,158,159,161,167,158,197,210,211,149,215,158,227,231,237,]),'paramsB':([163,223,],[200,235,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,70,],[19,19,65,65,]),'returntype':([33,],[43,]),'expB':([91,],[136,]),'declarationB':([35,76,224,],[46,118,236,]),'declarationC':([46,118,236,],[78,166,240,]),'declarationD':([204,],[226,]),'quadruple_assign':([167,],[204,]),'condition':([40,70,],[68,68,]),'suprafunc':([13,30,39,],[30,30,30,]),'declarationsOpt':([6,19,],[13,36,]),'term':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[91,91,91,91,91,91,91,91,169,170,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'signB':([49,83,95,96,108,110,113,119,128,129,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'config':([0,3,],[6,10,]),'push_type':([16,],[35,]),'instruction':([40,70,],[70,70,]),'assign':([103,],[154,]),'inputB':([155,216,],[191,229,]),'localmsgdirective':([40,70,],[71,71,]),'localdecisiondirective':([40,70,],[72,72,]),'termB':([86,],[130,]),'exp':([49,83,95,96,108,110,113,119,132,134,135,140,142,160,175,176,177,179,181,182,186,189,195,214,220,228,],[92,92,92,92,92,92,92,92,92,173,174,178,180,92,206,207,208,209,92,92,92,92,92,92,92,92,]),'outputB':([96,186,],[150,213,]),'output':([40,70,],[73,73,]),'expression':([49,83,95,96,108,110,113,119,132,160,181,182,186,189,195,214,220,228,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'options':([8,9,],[25,26,]),'block':([32,80,183,198,234,241,],[41,120,212,222,239,242,]),'outputC':([148,149,],[185,187,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',17),
  ('config -> configdirective config','config',2,'p_config','parser.py',21),
  ('config -> empty','config',1,'p_config','parser.py',22),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',26),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',27),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',28),
  ('options -> SOME','options',1,'p_options','parser.py',31),
  ('options -> ALL','options',1,'p_options','parser.py',32),
  ('options -> MOST','options',1,'p_options','parser.py',33),
  ('options -> NONE','options',1,'p_options','parser.py',34),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',37),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',38),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',42),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',45),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',46),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',49),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',50),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',54),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',57),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',75),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',79),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',83),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',87),
  ('declarationC -> = push_operator superexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',100),
  ('declarationC -> , declarationB declarationC','declarationC',3,'p_declarationC','parser.py',101),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',102),
  ('declarationD -> , declarationB declarationC','declarationD',3,'p_declarationD','parser.py',110),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',111),
  ('main -> MAIN ( ) block','main',4,'p_main','parser.py',115),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',119),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',124),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',135),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',136),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',140),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',143),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',144),
  ('assign -> ID dimensionsOpt = superexpression','assign',4,'p_assign','parser.py',148),
  ('assignB -> dimensionsOpt = superexpression','assignB',3,'p_assignB','parser.py',155),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',158),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',159),
  ('condition -> IF ( superexpression ) block else','condition',6,'p_condition','parser.py',165),
  ('else -> ELSE block','else',2,'p_else','parser.py',169),
  ('else -> empty','else',1,'p_else','parser.py',170),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',174),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',175),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',176),
  ('instruction -> input ;','instruction',2,'p_instruction','parser.py',177),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',178),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',179),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',180),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',181),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',182),
  ('assignfunccall -> ID assignfunccallB','assignfunccall',2,'p_assignfunccall','parser.py',187),
  ('assignfunccallB -> ( funccallB funccallC','assignfunccallB',3,'p_assignfunccallB','parser.py',206),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',207),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',212),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',213),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',214),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',218),
  ('superexpressionB -> & & superexpression','superexpressionB',3,'p_superexpressionB','parser.py',222),
  ('superexpressionB -> | | superexpression','superexpressionB',3,'p_superexpressionB','parser.py',223),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',224),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',232),
  ('expressionB -> < exp','expressionB',2,'p_expressionB','parser.py',237),
  ('expressionB -> > exp','expressionB',2,'p_expressionB','parser.py',238),
  ('expressionB -> < > exp','expressionB',3,'p_expressionB','parser.py',239),
  ('expressionB -> = = exp','expressionB',3,'p_expressionB','parser.py',240),
  ('expressionB -> < = exp','expressionB',3,'p_expressionB','parser.py',241),
  ('expressionB -> > = exp','expressionB',3,'p_expressionB','parser.py',242),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',243),
  ('exp -> term expB','exp',2,'p_exp','parser.py',255),
  ('expB -> - exp','expB',2,'p_expB','parser.py',259),
  ('expB -> + exp','expB',2,'p_expB','parser.py',260),
  ('expB -> empty','expB',1,'p_expB','parser.py',261),
  ('term -> factor termB','term',2,'p_term','parser.py',270),
  ('termB -> / term','termB',2,'p_termB','parser.py',274),
  ('termB -> * term','termB',2,'p_termB','parser.py',275),
  ('termB -> empty','termB',1,'p_termB','parser.py',276),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',287),
  ('factor -> ( superexpression )','factor',3,'p_factor','parser.py',288),
  ('factor -> funccall','factor',1,'p_factor','parser.py',289),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',290),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',308),
  ('signB -> sign','signB',1,'p_signB','parser.py',316),
  ('signB -> empty','signB',1,'p_signB','parser.py',317),
  ('constant -> FCONST','constant',1,'p_constant','parser.py',322),
  ('constant -> ICONST','constant',1,'p_constant','parser.py',323),
  ('constant -> SCONST','constant',1,'p_constant','parser.py',324),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',325),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',326),
  ('sign -> +','sign',1,'p_sign','parser.py',331),
  ('sign -> -','sign',1,'p_sign','parser.py',332),
  ('whileloop -> WHILE ( superexpression ) block','whileloop',5,'p_whileloop','parser.py',337),
  ('type -> INT','type',1,'p_type','parser.py',341),
  ('type -> FLOAT','type',1,'p_type','parser.py',342),
  ('type -> STRING','type',1,'p_type','parser.py',343),
  ('type -> BOOL','type',1,'p_type','parser.py',344),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',350),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',351),
  ('forloop -> FOR ( assign ; superexpression ; superexpression ) block','forloop',9,'p_forloop','parser.py',356),
  ('input -> INPUT ( ID inputB )','input',5,'p_input','parser.py',360),
  ('inputB -> , ID inputB','inputB',3,'p_inputB','parser.py',363),
  ('inputB -> empty','inputB',1,'p_inputB','parser.py',364),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',367),
  ('outputB -> SCONST outputC','outputB',2,'p_outputB','parser.py',370),
  ('outputB -> superexpression outputC','outputB',2,'p_outputB','parser.py',371),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',374),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',375),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',379),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',382),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',383),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',387),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',391),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',392),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',393),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',397),
  ('funccallB -> superexpression','funccallB',1,'p_funccallB','parser.py',409),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',410),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',415),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',416),
  ('dimensions -> [ superexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',420),
  ('dimensionsB -> [ superexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',424),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',425),
  ('return -> RETURN superexpression','return',2,'p_return','parser.py',430),
  ('params -> type ID','params',2,'p_params','parser.py',434),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',443),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',444),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',447),
]
