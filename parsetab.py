
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x99?{\x97\xd7\xb8n_];89$4D\xae'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'RETURN':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[55,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,55,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'GTEQ':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,143,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'READ':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[56,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,56,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'VOID':([36,],[45,]),'SOME':([8,9,],[22,22,]),'WHILE':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[59,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,59,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'/':([85,88,97,99,102,127,128,129,130,131,132,135,136,141,172,176,177,178,179,180,188,213,215,219,250,251,267,281,],[-43,-44,-88,-96,-98,-92,-101,-103,-102,-105,-104,185,-94,-162,-162,-106,-108,-107,-110,-109,-95,-154,-156,-93,-147,-153,-155,-152,]),'PRINT':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[60,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,60,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'DIFF':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,146,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'TRUE':([52,55,86,90,92,93,94,95,98,101,109,117,133,138,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,225,226,227,236,237,239,242,252,262,274,284,],[-24,-162,-162,-162,132,-97,-111,-112,-100,-99,-162,-162,-162,-24,-24,-24,-24,-24,-24,-24,-24,-61,-162,-24,-24,-162,-162,-24,-24,-162,-162,-162,-162,-162,-162,-162,-64,-24,-117,-162,-162,-162,-100,-162,-162,-162,-162,-162,-162,-162,-24,-162,-162,]),'>':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,150,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,42,44,50,51,118,173,175,217,218,280,],[-162,-162,-162,-4,-3,-2,-162,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,36,-17,36,36,-33,-28,-19,-37,-27,-31,-30,-26,-29,]),'FORGET':([62,],[110,]),'NONE':([8,9,],[23,23,]),'FCONST':([52,55,86,90,92,93,94,95,98,101,109,117,133,138,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,225,226,227,236,237,239,242,252,262,274,284,],[-24,-162,-162,-162,128,-97,-111,-112,-100,-99,-162,-162,-162,-24,-24,-24,-24,-24,-24,-24,-24,-61,-162,-24,-24,-162,-162,-24,-24,-162,-162,-162,-162,-162,-162,-162,-64,-24,-117,-162,-162,-162,-100,-162,-162,-162,-162,-162,-162,-162,-24,-162,-162,]),'NO':([11,],[29,]),')':([53,85,88,97,99,100,102,103,104,105,122,127,128,129,130,131,132,135,136,137,139,141,142,145,149,152,153,154,155,157,160,166,168,169,170,172,176,177,178,179,180,181,183,184,187,188,191,192,200,201,203,206,207,209,211,212,213,215,219,222,223,224,225,228,229,230,231,232,233,234,235,236,245,248,249,250,251,252,253,254,255,256,258,259,266,267,269,271,281,282,288,290,292,293,],[91,-43,-44,-88,-96,-162,-98,-83,-162,-162,-162,-92,-101,-103,-102,-105,-104,-162,-94,-68,-70,-162,-162,-74,-81,-71,-73,-21,-131,-61,-137,-48,208,-162,-36,-162,-106,-108,-107,-110,-109,219,-87,-91,-162,-95,-82,-86,-132,-64,238,243,244,-35,-161,-159,-154,-156,-93,-69,251,-151,-150,-80,-79,-77,-78,-75,-76,-72,-162,-162,-162,-90,-89,-147,-153,-162,-149,-85,-84,270,-134,251,-160,-155,251,-21,-152,-132,-162,-128,-133,294,]),'(':([41,52,55,56,58,59,60,63,70,72,74,77,79,84,86,90,93,102,108,109,117,119,133,138,140,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,226,227,236,237,239,242,252,262,274,284,],[53,-24,93,106,-21,-114,109,-115,115,117,-117,-40,-113,122,93,93,-97,-148,157,93,93,167,93,-24,187,-24,-24,-24,-24,-24,-24,-24,-61,93,-24,-24,93,93,-24,-24,93,93,93,93,93,93,93,-64,-24,-117,93,93,93,93,93,93,93,93,93,93,-24,93,93,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'*':([85,88,97,99,102,127,128,129,130,131,132,135,136,141,172,176,177,178,179,180,188,213,215,219,250,251,267,281,],[-43,-44,-88,-96,-98,-92,-101,-103,-102,-105,-104,182,-94,-162,-162,-106,-108,-107,-110,-109,-95,-154,-156,-93,-147,-153,-155,-152,]),'-':([52,55,85,86,88,90,93,97,99,102,103,109,117,127,128,129,130,131,132,133,135,136,138,141,142,143,144,146,147,148,150,151,157,167,172,176,177,178,179,180,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,201,202,205,213,214,215,219,220,221,226,227,236,237,239,242,248,249,250,251,252,262,267,274,281,284,],[-24,95,-43,95,-44,95,-97,-88,-96,-98,-83,95,95,-92,-101,-103,-102,-105,-104,95,-162,-94,-24,-162,190,-24,-24,-24,-24,-24,-24,-24,-61,95,-162,-106,-108,-107,-110,-109,-24,-87,-91,-24,95,95,-95,-24,-24,95,95,95,95,95,95,95,-64,-24,-117,-154,95,-156,-93,95,95,95,95,95,95,95,95,-90,-89,-147,-153,95,-24,-155,95,-152,95,]),',':([38,39,48,85,87,88,97,99,100,102,103,104,105,124,125,127,128,129,130,131,132,135,136,137,139,141,142,145,149,152,153,154,155,157,160,169,172,174,176,177,178,179,180,183,184,187,188,191,192,200,201,203,212,213,215,219,222,223,224,225,228,229,230,231,232,233,234,235,236,245,248,249,250,251,252,253,254,255,259,267,268,269,271,281,282,288,],[-21,49,-162,-43,-20,-44,-88,-96,-162,-98,-83,-162,-162,49,-25,-92,-101,-103,-102,-105,-104,-162,-94,-68,-70,-162,-162,-74,-81,-71,-73,-21,-131,-61,-137,210,-162,216,-106,-108,-107,-110,-109,-87,-91,-162,-95,-82,-86,-132,-64,239,-159,-154,-156,-93,-69,252,-151,-150,-80,-79,-77,-78,-75,-76,-72,257,-162,210,-90,-89,-147,-153,-162,-149,-85,-84,252,-155,49,252,-21,-152,-132,257,]),'SCONST':([52,55,86,90,92,93,94,95,98,101,109,111,117,133,138,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,225,226,227,236,237,239,242,252,262,274,284,],[-24,-162,-162,-162,129,-97,-111,-112,-100,-99,-162,162,-162,-162,-24,-24,-24,-24,-24,-24,-24,-24,-61,-162,-24,-24,-162,-162,-24,-24,-162,-162,-162,-162,-162,-162,-162,-64,-24,-117,-162,-162,-162,-100,-162,-162,-162,-162,-162,-162,-162,-24,-162,-162,]),'ID':([14,15,16,17,18,31,43,45,46,47,49,50,51,52,55,61,64,65,66,67,68,75,76,78,80,81,82,86,89,90,93,106,107,109,110,112,113,114,115,116,117,118,121,133,138,143,144,146,147,148,150,151,157,162,163,167,171,173,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,216,217,218,220,221,226,227,236,237,239,242,247,252,257,262,264,274,277,278,279,280,284,286,287,291,295,296,],[-22,-122,-120,-121,-123,38,77,-124,84,-125,-23,-28,-19,-24,102,-57,-65,-144,-67,-146,-58,-59,-55,-56,77,-145,-66,102,38,102,-97,155,-51,102,-142,-141,163,-53,77,-54,102,-37,-52,102,-24,-24,-24,-24,-24,-24,-24,-24,-61,-143,-140,102,212,-27,-24,-24,102,102,-24,-24,102,102,102,102,102,102,102,-64,-24,-117,102,-23,-30,-26,102,102,102,102,102,102,102,102,38,102,155,-24,-162,102,-47,-50,-119,-29,102,-45,-116,-46,-129,-126,]),'TRACKDECISION':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[65,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,65,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),';':([38,39,48,57,69,71,83,85,87,88,96,97,99,100,102,103,104,105,124,125,127,128,129,130,131,132,134,135,136,137,139,141,142,145,149,152,153,156,158,161,165,172,174,176,177,178,179,180,183,184,188,191,192,213,215,219,222,228,229,230,231,232,233,234,238,240,248,249,250,251,254,255,260,261,263,267,268,270,272,273,275,281,283,289,],[-21,50,-162,107,114,116,121,-43,-20,-44,-158,-88,-96,-162,-98,-83,-162,-162,50,-25,-92,-101,-103,-102,-105,-104,-157,-162,-94,-68,-70,-162,-162,-74,-81,-71,-73,-60,-63,-135,205,-162,217,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-69,-80,-79,-77,-78,-75,-76,-72,-138,-136,-90,-89,-147,-153,-85,-84,-25,-139,-127,-155,50,-130,-62,-42,284,-152,-25,-41,]),'=':([1,2,4,38,39,48,58,77,85,87,88,108,124,159,164,172,204,213,215,241,267,268,],[8,9,11,-21,52,-162,-21,-40,-43,-20,-44,-162,52,202,-21,-162,-162,-154,-156,262,-155,52,]),'<':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,148,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'$end':([5,12,33,37,40,42,44,54,118,175,],[0,-1,-162,-16,-15,-162,-33,-14,-37,-31,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,122,162,163,173,210,217,218,264,277,278,279,280,286,287,291,295,296,],[-162,-162,15,-4,-3,15,-9,-8,-11,-10,-6,-5,-12,-7,-13,15,15,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,15,-145,-66,-51,-53,-54,-37,-52,15,-143,-140,-27,15,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'FOR':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[63,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,63,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'SHOW':([62,],[111,]),'#':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[62,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,62,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ELSE':([118,264,],[-37,276,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[81,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,81,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ICONST':([52,55,86,90,92,93,94,95,98,101,109,117,133,138,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,225,226,227,236,237,239,242,252,262,274,284,],[-24,-162,-162,-162,130,-97,-111,-112,-100,-99,-162,-162,-162,-24,-24,-24,-24,-24,-24,-24,-24,-61,-162,-24,-24,-162,-162,-24,-24,-162,-162,-162,-162,-162,-162,-162,-64,-24,-117,-162,-162,-162,-100,-162,-162,-162,-162,-162,-162,-162,-24,-162,-162,]),']':([85,88,97,99,100,102,103,104,105,123,127,128,129,130,131,132,135,136,137,139,141,142,145,149,152,153,172,176,177,178,179,180,183,184,188,191,192,213,215,219,222,228,229,230,231,232,233,234,246,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-162,-98,-83,-162,-162,172,-92,-101,-103,-102,-105,-104,-162,-94,-68,-70,-162,-162,-74,-81,-71,-73,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-69,-80,-79,-77,-78,-75,-76,-72,267,-90,-89,-147,-153,-85,-84,-155,-152,]),'[':([38,48,58,77,102,108,141,164,172,204,],[-21,86,-21,-40,-98,86,86,-21,214,86,]),'EQ':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,147,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'YES':([11,],[27,]),'IF':([43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[79,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,79,-145,-66,-51,-53,-54,-37,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'AND':([85,88,97,99,102,103,104,105,127,128,129,130,131,132,135,136,141,142,145,149,172,176,177,178,179,180,183,184,188,191,192,213,215,219,228,229,230,231,232,233,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,-162,151,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-74,-81,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-80,-79,-77,-78,-75,-76,-90,-89,-147,-153,-85,-84,-155,-152,]),'ALL':([8,9,],[21,21,]),'FALSE':([52,55,86,90,92,93,94,95,98,101,109,117,133,138,143,144,146,147,148,150,151,157,167,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,205,214,220,221,225,226,227,236,237,239,242,252,262,274,284,],[-24,-162,-162,-162,131,-97,-111,-112,-100,-99,-162,-162,-162,-24,-24,-24,-24,-24,-24,-24,-24,-61,-162,-24,-24,-162,-162,-24,-24,-162,-162,-162,-162,-162,-162,-162,-64,-24,-117,-162,-162,-162,-100,-162,-162,-162,-162,-162,-162,-162,-24,-162,-162,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,122,162,163,173,210,217,218,264,277,278,279,280,286,287,291,295,296,],[-162,-162,16,-4,-3,16,-9,-8,-11,-10,-6,-5,-12,-7,-13,16,16,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,16,-145,-66,-51,-53,-54,-37,-52,16,-143,-140,-27,16,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'LTEQ':([85,88,97,99,102,103,104,127,128,129,130,131,132,135,136,141,142,172,176,177,178,179,180,183,184,188,191,192,213,215,219,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,-98,-83,144,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-90,-89,-147,-153,-85,-84,-155,-152,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,122,162,163,173,210,217,218,264,277,278,279,280,286,287,291,295,296,],[-162,-162,17,-4,-3,17,-9,-8,-11,-10,-6,-5,-12,-7,-13,17,17,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,17,-145,-66,-51,-53,-54,-37,-52,17,-143,-140,-27,17,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'OR':([85,88,97,99,100,102,103,104,105,127,128,129,130,131,132,135,136,141,142,145,149,152,153,172,176,177,178,179,180,183,184,188,191,192,213,215,219,228,229,230,231,232,233,234,248,249,250,251,254,255,267,281,],[-43,-44,-88,-96,138,-98,-83,-162,-162,-92,-101,-103,-102,-105,-104,-162,-94,-162,-162,-74,-81,-71,-73,-162,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-154,-156,-93,-80,-79,-77,-78,-75,-76,-72,-90,-89,-147,-153,-85,-84,-155,-152,]),'TRACK':([62,],[112,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,67,68,75,76,78,80,81,82,107,114,116,118,121,122,162,163,173,210,217,218,264,277,278,279,280,286,287,291,295,296,],[-162,-162,18,-4,-3,18,-9,-8,-11,-10,-6,-5,-12,-7,-13,18,18,-28,-19,-57,-65,-144,-67,-146,-58,-59,-55,-56,18,-145,-66,-51,-53,-54,-37,-52,18,-143,-140,-27,18,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'{':([35,91,126,208,243,244,265,276,285,294,],[43,-32,43,-34,43,-118,43,-49,43,43,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,37,40,44,50,51,118,173,217,218,280,],[-162,-162,-162,-4,-3,-2,-162,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,-162,-17,-162,41,-16,-15,-33,-28,-19,-37,-27,-30,-26,-29,]),'}':([43,50,51,61,64,65,66,67,68,73,75,76,78,80,81,82,107,114,116,118,120,121,162,163,173,217,218,264,277,278,279,280,286,287,291,295,296,],[-162,-28,-19,-57,-65,-144,-67,-39,-58,118,-59,-55,-56,-162,-145,-66,-51,-53,-54,-37,-38,-52,-143,-140,-27,-30,-26,-162,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'+':([52,55,85,86,88,90,93,97,99,102,103,109,117,127,128,129,130,131,132,133,135,136,138,141,142,143,144,146,147,148,150,151,157,167,172,176,177,178,179,180,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,201,202,205,213,214,215,219,220,221,226,227,236,237,239,242,248,249,250,251,252,262,267,274,281,284,],[-24,94,-43,94,-44,94,-97,-88,-96,-98,-83,94,94,-92,-101,-103,-102,-105,-104,94,-162,-94,-24,-162,189,-24,-24,-24,-24,-24,-24,-24,-61,94,-162,-106,-108,-107,-110,-109,-24,-87,-91,-24,94,94,-95,-24,-24,94,94,94,94,94,94,94,-64,-24,-117,-154,94,-156,-93,94,94,94,94,94,94,94,94,-90,-89,-147,-153,94,-24,-155,94,-152,94,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([122,],[168,]),'superexpressionB':([105,],[152,]),'while_quadruple':([244,],[265,]),'seen_term':([103,],[142,]),'validate_id':([106,257,],[154,271,]),'for_quadruple':([263,],[275,]),'whileloop':([43,80,],[61,61,]),'seen_iconst':([130,],[178,]),'signB':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,220,221,226,227,236,237,239,242,252,274,284,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'endcondition_quadruple':([278,],[286,]),'expressionB':([104,],[145,]),'funcsOpt':([30,33,42,],[34,40,54,]),'push_operator':([52,138,143,144,146,147,148,150,151,182,185,189,190,202,262,],[90,186,193,194,195,196,197,198,199,220,221,226,227,237,274,]),'program':([0,],[5,]),'factor':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,220,221,226,227,236,237,239,242,252,274,284,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'main':([34,],[42,]),'return':([43,80,],[69,69,]),'read':([43,80,],[71,71,]),'register_while':([43,80,],[74,74,]),'localdirective':([43,80,],[75,75,]),'quadruple_assign':([125,260,283,],[174,273,289,]),'condition':([43,80,],[78,78,]),'suprafunc':([30,33,42,],[33,33,33,]),'term':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,220,221,226,227,236,237,239,242,252,274,284,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,248,249,103,103,103,103,103,103,103,103,103,]),'start_quadruple':([13,],[30,]),'push_type':([14,],[31,]),'init_while':([74,205,],[119,242,]),'localdecisiondirective':([43,80,],[82,82,]),'output':([43,80,],[83,83,]),'seen_sconst':([129,],[177,]),'assignfunccallB':([108,],[156,]),'id_record_line':([43,80,115,],[58,58,164,]),'sign':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,220,221,226,227,236,237,239,242,252,274,284,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'return_quadruple':([96,],[134,]),'funccallC':([223,259,269,],[250,272,281,]),'funccallB':([187,236,252,],[223,259,269,]),'dimensions':([48,108,141,204,],[85,85,85,85,]),'condition_quadruple':([166,],[206,]),'hyperexpression':([55,86,90,109,117,133,167,186,187,214,236,237,239,242,252,274,284,],[96,123,125,160,166,181,207,222,224,246,224,260,160,263,224,283,290,]),'seen_param':([224,],[253,]),'body':([6,],[12,]),'forloop':([43,80,],[68,68,]),'superexpression':([55,86,90,109,117,133,167,186,187,199,214,236,237,239,242,252,274,284,],[100,100,100,100,100,100,100,100,100,234,100,100,100,100,100,100,100,100,]),'assignfunccall':([43,80,],[57,57,]),'seen_main':([91,],[126,]),'seen_factor':([97,],[135,]),'seen_true':([132,],[180,]),'repush_type':([49,216,],[89,247,]),'localmsgdirective':([43,80,],[66,66,]),'termB':([135,],[183,]),'expression':([55,86,90,109,117,133,167,186,187,199,214,236,237,239,242,252,274,284,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'assign':([115,],[165,]),'block':([35,126,243,265,285,294,],[44,175,264,279,291,295,]),'read_quadruple':([200,282,],[235,288,]),'configdirective':([0,3,],[3,3,]),'constant':([92,],[127,]),'print_quadruple':([160,],[203,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([62,],[113,]),'localvardirective':([43,80,],[64,64,]),'seen_parentheses':([93,],[133,]),'params':([122,210,],[169,245,]),'type':([6,19,36,43,80,122,210,],[14,14,47,14,14,171,171,]),'empty':([0,3,6,19,30,33,42,43,48,55,80,86,90,100,104,105,108,109,117,122,133,135,141,142,167,169,172,186,187,193,194,195,196,197,198,199,204,214,220,221,226,227,235,236,237,239,242,245,252,264,274,284,288,],[7,7,20,20,37,37,37,67,88,98,67,98,98,139,149,153,88,98,98,170,98,184,88,192,98,211,215,98,225,98,98,98,98,98,98,98,88,98,98,98,98,98,258,225,98,98,98,211,225,277,98,98,258,]),'for_expression':([290,],[293,]),'else':([264,],[278,]),'func':([30,33,42,],[35,35,35,]),'declaration':([6,19,43,80,],[19,19,76,76,]),'expB':([142,],[191,]),'declarationB':([31,89,247,],[39,124,268,]),'declarationC':([39,124,268,],[51,173,280,]),'declarationD':([174,],[218,]),'seen_factor_funccall':([99,],[136,]),'declarationsOpt':([6,19,],[13,32,]),'instruction':([43,80,],[80,80,]),'pop_operand':([157,],[201,]),'seen_a_funccall':([201,],[236,]),'outputB':([109,239,],[161,261,]),'outputC':([203,],[240,]),'dimensionsB':([172,],[213,]),'push_operand':([38,58,154,164,271,],[48,108,200,204,282,]),'dimensionsOpt':([48,108,141,204,],[87,159,188,241,]),'seen_a_factor_funccall':([102,],[140,]),'readB':([235,288,],[256,292,]),'seen_ID':([102,],[141,]),'hyperexpressionB':([100,],[137,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([276,],[285,]),'funccall':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,220,221,226,227,236,237,239,242,252,274,284,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'register_if':([43,80,],[72,72,]),'instructionsOpt':([43,80,],[73,120,]),'register_for':([43,80,],[70,70,]),'returntype':([36,],[46,]),'seen_fconst':([128,],[176,]),'seen_false':([131,],[179,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([295,],[296,]),'paramsB':([169,245,],[209,266,]),'assignB':([108,],[158,]),'exp':([55,86,90,109,117,133,167,186,187,193,194,195,196,197,198,199,214,226,227,236,237,239,242,252,274,284,],[104,104,104,104,104,104,104,104,104,228,229,230,231,232,233,104,104,254,255,104,104,104,104,104,104,104,]),'endwhile_quadruple':([279,],[287,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',37),
  ('start_quadruple -> <empty>','start_quadruple',0,'p_start_quadruple','parser.py',40),
  ('config -> configdirective config','config',2,'p_config','parser.py',46),
  ('config -> empty','config',1,'p_config','parser.py',47),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',51),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',52),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',53),
  ('options -> SOME','options',1,'p_options','parser.py',56),
  ('options -> ALL','options',1,'p_options','parser.py',57),
  ('options -> MOST','options',1,'p_options','parser.py',58),
  ('options -> NONE','options',1,'p_options','parser.py',59),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',62),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',63),
  ('body -> declarationsOpt start_quadruple funcsOpt main funcsOpt','body',5,'p_body','parser.py',67),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',70),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',71),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',74),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',75),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',79),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',87),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',110),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',119),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',123),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',128),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',132),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',155),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',156),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',157),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',165),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',166),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',170),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',189),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',203),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',234),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',258),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',259),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',263),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',266),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',267),
  ('id_record_line -> ID','id_record_line',1,'p_id_record_line','parser.py',270),
  ('assign -> id_record_line push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',277),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',284),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',287),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',288),
  ('condition -> register_if ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',294),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',298),
  ('else -> empty','else',1,'p_else','parser.py',299),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',302),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',314),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',323),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',333),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',334),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',335),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',336),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',337),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',338),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',339),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',340),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',341),
  ('assignfunccall -> id_record_line push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',346),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',376),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',382),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',383),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',387),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',393),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',394),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',395),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',399),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',402),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',403),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',411),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',414),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',415),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',423),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',427),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',428),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',429),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',430),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',431),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',432),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',433),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',442),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',445),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',452),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',453),
  ('expB -> empty','expB',1,'p_expB','parser.py',454),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',458),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',461),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',467),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',468),
  ('termB -> empty','termB',1,'p_termB','parser.py',469),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',477),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',478),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',479),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',480),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',490),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',509),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',513),
  ('signB -> sign','signB',1,'p_signB','parser.py',531),
  ('signB -> empty','signB',1,'p_signB','parser.py',532),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',537),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',542),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',547),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',552),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',557),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',562),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',563),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',564),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',565),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',566),
  ('sign -> +','sign',1,'p_sign','parser.py',578),
  ('sign -> -','sign',1,'p_sign','parser.py',579),
  ('register_if -> IF','register_if',1,'p_register_if','parser.py',583),
  ('register_while -> WHILE','register_while',1,'p_register_while','parser.py',591),
  ('register_for -> FOR','register_for',1,'p_register_for','parser.py',599),
  ('whileloop -> register_while init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',608),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',611),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',615),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',627),
  ('type -> INT','type',1,'p_type','parser.py',638),
  ('type -> FLOAT','type',1,'p_type','parser.py',639),
  ('type -> STRING','type',1,'p_type','parser.py',640),
  ('type -> BOOL','type',1,'p_type','parser.py',641),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',647),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',648),
  ('forloop -> register_for ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',653),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',657),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',672),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',684),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',694),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',697),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',705),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',712),
  ('readB -> empty','readB',1,'p_readB','parser.py',713),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',716),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',719),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',722),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',731),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',732),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',736),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',750),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',751),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',756),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',761),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',762),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',763),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',769),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',798),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',806),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',807),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',811),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',829),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',830),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',841),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',845),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',846),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',851),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',855),
  ('params -> type ID','params',2,'p_params','parser.py',874),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',886),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',887),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',890),
]
