
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xcd\xeacMC\x9c\xdb6b\xf0to6\x11\xa8\xb5'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[49,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,49,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,134,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'READ':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[50,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,50,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[51,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,51,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,132,165,166,167,168,169,179,207,210,214,215,239,241,264,275,],[-86,-92,-95,-41,-42,-90,-98,-100,-99,-102,-101,174,-156,-103,-105,-104,-107,-106,-93,-156,-91,-142,-147,-148,-150,-146,-149,]),'PRINT':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[52,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,52,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,137,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'TRUE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,171,174,175,178,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[-156,-23,124,-94,-108,-109,-97,-96,-156,-156,-156,-156,-156,-23,-156,-23,-23,-23,-23,-23,-23,-23,-156,-23,-23,-156,-97,-23,-23,-156,-156,-156,-156,-156,-156,-156,-111,-60,-156,-156,-156,-156,-156,-156,-156,-156,-23,-156,-23,-156,-156,-156,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,141,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,164,208,243,244,284,],[-156,-156,-156,-3,-2,33,-156,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-32,-27,-18,-36,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,171,174,175,178,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[-156,-23,120,-94,-108,-109,-97,-96,-156,-156,-156,-156,-156,-23,-156,-23,-23,-23,-23,-23,-23,-23,-156,-23,-23,-156,-97,-23,-23,-156,-156,-156,-156,-156,-156,-156,-111,-60,-156,-156,-156,-156,-156,-156,-156,-156,-23,-156,-23,-156,-156,-156,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,156,157,158,159,165,166,167,168,169,170,172,173,176,177,178,179,182,183,191,192,193,194,198,201,203,205,206,207,210,213,214,215,216,217,220,221,222,223,224,225,226,227,229,235,238,239,241,245,246,247,248,249,250,252,258,261,264,266,275,277,285,287,289,290,],[80,-86,-92,-156,-95,-81,-156,-156,-156,-41,-42,-90,-98,-100,-99,-102,-101,-156,-66,-68,-156,-156,-156,-72,-79,-69,-71,-20,-125,-20,-132,-46,202,-156,-35,-103,-105,-104,-107,-106,210,-85,-89,215,-145,-144,-93,-80,-84,-126,228,-132,230,-60,237,-34,-155,-153,-156,-91,-67,-142,-147,-156,-143,-78,-77,-75,-76,-73,-74,-70,-156,230,-156,-156,-148,-150,-88,-87,215,-83,-82,265,-128,215,-154,-146,-20,-149,-126,-156,-122,-127,291,]),'(':([38,49,50,51,52,61,68,70,74,79,82,91,96,97,107,108,113,117,125,129,131,134,135,137,138,139,141,142,147,155,171,174,175,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[47,82,95,-111,97,103,-59,108,111,-23,-94,131,147,82,-20,82,82,82,82,-23,82,-23,-23,-23,-23,-23,-23,-23,82,198,-23,-23,82,-23,-23,82,82,82,82,82,82,82,-111,-60,82,82,82,82,82,82,82,82,-23,82,-23,82,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,132,165,166,167,168,169,179,207,210,214,215,239,241,264,275,],[-86,-92,-95,-41,-42,-90,-98,-100,-99,-102,-101,171,-156,-103,-105,-104,-107,-106,-93,-156,-91,-142,-147,-148,-150,-146,-149,]),'-':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,196,198,207,210,211,212,214,215,216,218,219,231,234,235,236,239,240,241,245,246,256,259,264,268,275,280,],[84,-23,-94,-86,-92,-95,-81,84,84,-41,84,-42,84,-90,-98,-100,-99,-102,-101,84,-156,-23,84,-156,181,-23,-23,-23,-23,-23,-23,-23,84,-103,-105,-104,-107,-106,-23,-85,-89,-23,84,-93,-23,-23,84,84,84,84,84,84,84,-111,-60,-156,-91,84,84,-142,-147,84,84,84,84,84,84,-23,-148,84,-150,-88,-87,-23,84,-146,84,-149,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,130,131,132,133,136,140,143,144,145,146,148,149,158,162,163,165,166,167,168,169,172,173,176,177,178,179,182,183,191,193,194,198,206,207,209,210,213,214,215,216,217,220,221,222,223,224,225,226,227,229,235,238,239,241,245,246,247,248,249,258,264,266,275,276,277,285,],[-20,76,-156,-86,-92,-156,-95,-81,-156,-156,-41,-19,-42,-90,-98,-100,-99,-102,-101,-156,-66,-68,-156,-156,-156,-72,-79,-69,-71,-20,-125,-20,-132,204,76,-24,-103,-105,-104,-107,-106,-85,-89,216,-145,-144,-93,-80,-84,-126,-132,231,-60,-153,-156,242,-91,-67,-142,-147,-156,-143,-78,-77,-75,-76,-73,-74,-70,251,231,-156,204,-148,-150,-88,-87,216,-83,-82,216,-146,-20,-149,76,-126,251,]),'SCONST':([49,79,81,82,83,84,87,90,97,99,108,113,117,125,129,131,134,135,137,138,139,141,142,147,171,174,175,178,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[-156,-23,121,-94,-108,-109,-97,-96,148,151,-156,-156,-156,-156,-23,-156,-23,-23,-23,-23,-23,-23,-23,-156,-23,-23,-156,-97,-23,-23,-156,-156,-156,-156,-156,-156,-156,-111,-60,-156,-156,-156,-156,-156,148,-156,-156,-23,-156,-23,-156,-156,-156,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,57,58,59,65,66,67,69,71,72,76,77,78,79,82,95,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,129,131,134,135,137,138,139,141,142,147,151,152,160,171,174,175,180,181,184,185,186,187,188,189,190,196,198,208,211,212,216,218,219,231,234,235,236,240,242,243,244,251,256,259,260,263,267,268,273,274,278,280,283,284,288,292,293,],[-116,-114,-21,-115,-117,45,68,-118,74,-119,91,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,68,-64,-22,-27,-18,-23,-94,146,91,-137,-136,152,-51,153,-52,-36,-49,91,-50,91,45,91,91,-23,91,-23,-23,-23,-23,-23,-23,-23,91,-138,-135,206,-23,-23,91,-23,-23,91,91,91,91,91,91,91,-111,-60,-26,91,91,91,91,91,91,91,91,-23,91,-22,-29,-25,146,-23,91,-156,45,-113,91,-45,-48,-110,91,-43,-28,-44,-123,-120,]),'TRACKDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[56,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,56,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),';':([45,46,60,62,64,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,130,132,133,136,140,143,144,150,154,162,163,165,166,167,168,169,172,173,179,182,183,197,199,207,209,210,213,214,215,220,221,222,223,224,225,226,230,232,239,241,245,246,248,249,254,255,257,264,265,269,270,271,275,276,279,281,286,],[-20,77,102,104,106,110,-156,-152,-86,-92,-156,-95,-81,-156,-156,-41,-19,-42,-90,-98,-100,-99,-102,-101,-151,-156,-66,-68,-156,-156,-72,-79,-69,-71,-129,196,77,-24,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-58,-62,-156,243,-91,-67,-142,-147,-78,-77,-75,-76,-73,-74,-70,-133,-131,-148,-150,-88,-87,-83,-82,-130,-134,-121,-146,-124,280,-61,-24,-149,77,-24,-40,-39,]),'=':([1,2,4,45,46,68,75,107,112,114,115,153,155,162,195,200,207,233,239,241,275,276,],[8,9,11,-20,79,-59,-156,-20,-41,-19,-42,-20,-156,79,-156,236,-156,256,-148,-150,-149,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,139,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'$end':([5,12,30,34,37,39,41,48,105,164,],[0,-1,-156,-15,-14,-156,-32,-13,-36,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,204,208,243,244,260,267,273,274,278,283,284,288,292,293,],[-156,-156,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,14,-64,-27,-18,-51,-52,-36,-49,-50,14,-138,-135,14,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'FOR':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[61,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,61,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[54,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,54,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'ELSE':([105,260,],[-36,272,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[65,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,65,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'ICONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,171,174,175,178,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[-156,-23,122,-94,-108,-109,-97,-96,-156,-156,-156,-156,-156,-23,-156,-23,-23,-23,-23,-23,-23,-23,-156,-23,-23,-156,-97,-23,-23,-156,-156,-156,-156,-156,-156,-156,-111,-60,-156,-156,-156,-156,-156,-156,-156,-156,-23,-156,-23,-156,-156,-156,]),'[':([45,68,75,91,107,132,153,155,195,207,],[-20,-59,113,-95,-20,113,-20,113,113,240,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,161,165,166,167,168,169,172,173,179,182,183,207,210,213,214,215,220,221,222,223,224,225,226,239,241,245,246,248,249,262,264,275,],[-86,-92,-156,-95,-81,-156,-156,-41,-42,-90,-98,-100,-99,-102,-101,-156,-66,-68,-156,-156,-72,-79,-69,-71,207,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-67,-142,-147,-78,-77,-75,-76,-73,-74,-70,-148,-150,-88,-87,-83,-82,275,-146,-149,]),'YES':([11,],[27,]),'IF':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[70,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,70,-64,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,165,166,167,168,169,172,173,179,182,183,207,210,214,215,220,221,222,223,224,225,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,-156,142,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-72,-79,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-78,-77,-75,-76,-73,-74,-148,-150,-88,-87,-83,-82,-146,-149,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,131,134,135,137,138,139,141,142,147,171,174,175,178,180,181,184,185,186,187,188,189,190,196,198,211,212,216,218,219,231,234,235,236,240,256,259,268,280,],[-156,-23,123,-94,-108,-109,-97,-96,-156,-156,-156,-156,-156,-23,-156,-23,-23,-23,-23,-23,-23,-23,-156,-23,-23,-156,-97,-23,-23,-156,-156,-156,-156,-156,-156,-156,-111,-60,-156,-156,-156,-156,-156,-156,-156,-156,-23,-156,-23,-156,-156,-156,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,204,208,243,244,260,267,273,274,278,283,284,288,292,293,],[-156,-156,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,15,-64,-27,-18,-51,-52,-36,-49,-50,15,-138,-135,15,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,138,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,165,166,167,168,169,172,173,179,182,183,207,210,214,215,239,241,245,246,248,249,264,275,],[-86,-92,-95,-81,135,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-148,-150,-88,-87,-83,-82,-146,-149,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,204,208,243,244,260,267,273,274,278,283,284,288,292,293,],[-156,-156,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,17,-64,-27,-18,-51,-52,-36,-49,-50,17,-138,-135,17,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,143,144,165,166,167,168,169,172,173,179,182,183,207,210,214,215,220,221,222,223,224,225,226,239,241,245,246,248,249,264,275,],[-86,-92,129,-95,-81,-156,-156,-41,-42,-90,-98,-100,-99,-102,-101,-156,-156,-156,-72,-79,-69,-71,-103,-105,-104,-107,-106,-85,-89,-93,-80,-84,-156,-91,-142,-147,-78,-77,-75,-76,-73,-74,-70,-148,-150,-88,-87,-83,-82,-146,-149,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,151,152,204,208,243,244,260,267,273,274,278,283,284,288,292,293,],[-156,-156,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-55,-63,-139,-65,-141,-56,-140,-57,-53,-54,18,-64,-27,-18,-51,-52,-36,-49,-50,18,-138,-135,18,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'{':([32,80,118,202,228,237,253,272,282,291,],[40,-31,40,-33,-112,40,40,-47,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,208,243,244,284,],[-156,-156,-156,-3,-2,-156,-156,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-156,38,-15,-16,-14,-32,-27,-18,-36,-26,-29,-25,-28,]),'}':([40,53,55,56,57,58,59,63,65,66,67,69,71,72,77,78,102,104,105,106,109,110,151,152,208,243,244,260,267,273,274,278,283,284,288,292,293,],[-156,-55,-63,-139,-65,-38,-56,105,-140,-57,-53,-54,-156,-64,-27,-18,-51,-52,-36,-49,-37,-50,-138,-135,-26,-29,-25,-156,-113,-45,-48,-110,-43,-28,-44,-123,-120,]),'+':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,131,132,133,134,135,137,138,139,141,142,147,165,166,167,168,169,171,172,173,174,175,179,180,181,184,185,186,187,188,189,190,196,198,207,210,211,212,214,215,216,218,219,231,234,235,236,239,240,241,245,246,256,259,264,268,275,280,],[83,-23,-94,-86,-92,-95,-81,83,83,-41,83,-42,83,-90,-98,-100,-99,-102,-101,83,-156,-23,83,-156,180,-23,-23,-23,-23,-23,-23,-23,83,-103,-105,-104,-107,-106,-23,-85,-89,-23,83,-93,-23,-23,83,83,83,83,83,83,83,-111,-60,-156,-91,83,83,-142,-147,83,83,83,83,83,83,-23,-148,83,-150,-88,-87,-23,83,-146,83,-149,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[157,]),'superexpressionB':([94,],[143,]),'while_quadruple':([228,],[253,]),'seen_term':([92,],[133,]),'validate_id':([95,251,],[145,266,]),'for_quadruple':([257,],[269,]),'forloop':([40,71,],[59,59,]),'seen_iconst':([122,],[167,]),'signB':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,211,212,216,218,219,231,234,235,240,259,268,280,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([274,],[283,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,129,134,135,137,138,139,141,142,171,174,180,181,236,256,],[117,175,184,185,186,187,188,189,190,211,212,218,219,259,268,]),'program':([0,],[5,]),'factor':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,211,212,216,218,219,231,234,235,240,259,268,280,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[60,60,]),'read':([40,71,],[62,62,]),'paramsB':([158,238,],[203,261,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([163,271,279,],[209,281,286,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,211,212,216,218,219,231,234,235,240,259,268,280,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,245,246,92,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([51,196,],[96,234,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[166,]),'assignfunccallB':([155,],[197,]),'sign':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,211,212,216,218,219,231,234,235,240,259,268,280,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([176,247,258,],[214,264,270,]),'funccallB':([131,216,235,],[176,247,258,]),'dimensions':([75,132,155,195,],[112,112,112,112,]),'condition_quadruple':([156,],[201,]),'hyperexpression':([49,97,108,113,117,125,131,147,175,216,231,234,235,240,259,268,280,],[85,149,156,161,163,170,177,192,213,177,149,257,177,262,271,279,287,]),'seen_param':([177,],[217,]),'body':([6,],[12,]),'whileloop':([40,71,],[53,53,]),'superexpression':([49,97,108,113,117,125,131,147,175,190,216,231,234,235,240,259,268,280,],[89,89,89,89,89,89,89,89,89,226,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[64,64,]),'seen_main':([80,],[118,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[169,]),'repush_type':([76,242,],[116,263,]),'localmsgdirective':([40,71,],[57,57,]),'termB':([127,],[172,]),'expression':([49,97,108,113,117,125,131,147,175,190,216,231,234,235,240,259,268,280,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([103,],[154,]),'block':([32,118,237,253,282,291,],[41,164,260,267,288,292,]),'seen_funccall':([68,],[107,]),'read_quadruple':([191,277,],[227,285,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([149,193,],[194,229,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([54,],[101,]),'localvardirective':([40,71,],[55,55,]),'seen_parentheses':([82,],[125,]),'params':([111,204,],[158,238,]),'type':([6,19,33,40,71,111,204,],[16,16,44,16,16,160,160,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,97,108,111,113,117,125,127,131,132,133,147,155,158,175,184,185,186,187,188,189,190,195,207,211,212,216,218,219,227,231,234,235,238,240,259,260,268,280,285,],[7,7,20,34,20,34,34,58,87,58,115,130,140,144,87,87,159,87,87,87,173,178,115,183,87,115,205,87,87,87,87,87,87,87,87,115,241,87,87,178,87,87,252,87,87,178,205,87,87,273,87,87,252,]),'for_expression':([287,],[290,]),'else':([260,],[274,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([133,],[182,]),'declarationB':([35,116,263,],[46,162,276,]),'declarationC':([46,162,276,],[78,208,284,]),'declarationD':([209,],[244,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([198,],[235,]),'outputB':([97,231,],[150,255,]),'outputC':([194,229,],[232,254,]),'dimensionsB':([207,],[239,]),'push_operand':([45,107,145,148,153,266,],[75,155,191,193,195,277,]),'dimensionsOpt':([75,132,155,195,],[114,179,200,233,]),'readB':([227,285,],[250,289,]),'seen_ID':([91,],[132,]),'hyperexpressionB':([89,],[128,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([272,],[282,]),'funccall':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,211,212,216,218,219,231,234,235,240,259,268,280,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[63,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[165,]),'seen_false':([123,],[168,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([292,],[293,]),'assignB':([155,],[199,]),'exp':([49,97,108,113,117,125,131,147,175,184,185,186,187,188,189,190,216,218,219,231,234,235,240,259,268,280,],[93,93,93,93,93,93,93,93,93,220,221,222,223,224,225,93,93,248,249,93,93,93,93,93,93,93,]),'endwhile_quadruple':([267,],[278,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',26),
  ('config -> configdirective config','config',2,'p_config','parser.py',30),
  ('config -> empty','config',1,'p_config','parser.py',31),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',35),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',36),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',37),
  ('options -> SOME','options',1,'p_options','parser.py',40),
  ('options -> ALL','options',1,'p_options','parser.py',41),
  ('options -> MOST','options',1,'p_options','parser.py',42),
  ('options -> NONE','options',1,'p_options','parser.py',43),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',46),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',47),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',51),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',54),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',55),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',58),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',59),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',63),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',71),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',93),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',102),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',106),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',111),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',115),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',133),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',134),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',135),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',143),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',144),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',148),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',151),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',157),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',163),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',176),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',177),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',181),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',184),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',185),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',189),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',196),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',199),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',200),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',206),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',210),
  ('else -> empty','else',1,'p_else','parser.py',211),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',214),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',226),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',235),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',245),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',246),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',247),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',248),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',249),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',250),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',251),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',252),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',253),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',258),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',276),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',280),
  ('assignfunccallB -> ( pop_operand funccallB funccallC','assignfunccallB',4,'p_assignfunccallB','parser.py',286),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',287),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',292),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',293),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',294),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',298),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',301),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',302),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',310),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',313),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',314),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',322),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',326),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',327),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',328),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',329),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',330),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',331),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',332),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',341),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',344),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',351),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',352),
  ('expB -> empty','expB',1,'p_expB','parser.py',353),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',357),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',360),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',366),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',367),
  ('termB -> empty','termB',1,'p_termB','parser.py',368),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',374),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',375),
  ('factor -> funccall','factor',1,'p_factor','parser.py',376),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',377),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',387),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',391),
  ('signB -> sign','signB',1,'p_signB','parser.py',409),
  ('signB -> empty','signB',1,'p_signB','parser.py',410),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',415),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',420),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',425),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',430),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',435),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',440),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',441),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',442),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',443),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',444),
  ('sign -> +','sign',1,'p_sign','parser.py',456),
  ('sign -> -','sign',1,'p_sign','parser.py',457),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',462),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',465),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',469),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',481),
  ('type -> INT','type',1,'p_type','parser.py',492),
  ('type -> FLOAT','type',1,'p_type','parser.py',493),
  ('type -> STRING','type',1,'p_type','parser.py',494),
  ('type -> BOOL','type',1,'p_type','parser.py',495),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',501),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',502),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',507),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',511),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',526),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',538),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',548),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',551),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',559),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',566),
  ('readB -> empty','readB',1,'p_readB','parser.py',567),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',570),
  ('outputB -> SCONST push_operand print_quadruple outputC','outputB',4,'p_outputB','parser.py',573),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',574),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',577),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',584),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',585),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',589),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',592),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',593),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',597),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',601),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',602),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',603),
  ('funccall -> ID ( funccallB funccallC','funccall',4,'p_funccall','parser.py',607),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',620),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',621),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',624),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',638),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',639),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',643),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',647),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',648),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',653),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',657),
  ('params -> type ID','params',2,'p_params','parser.py',676),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',685),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',686),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',689),
]
