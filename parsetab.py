
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb9C1:\xae\x0en\xf4L\xbc\x0b\x9b\x8c\xa7\t\x15'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'RETURN':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[49,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,49,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'GTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,134,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'READ':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[50,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,50,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'VOID':([33,],[42,]),'SOME':([8,9,],[22,22,]),'WHILE':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[51,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,51,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'/':([86,88,91,112,115,119,120,121,122,123,124,127,132,164,165,166,167,168,176,203,206,233,235,241,242,271,273,],[-87,-93,-96,-41,-42,-91,-99,-101,-100,-103,-102,173,-157,-104,-106,-105,-108,-107,-94,-157,-92,-149,-151,-142,-148,-150,-147,]),'PRINT':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[52,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,52,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'DIFF':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,137,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'TRUE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,134,135,137,138,139,141,142,147,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,212,213,214,225,228,229,230,234,243,252,254,255,264,277,],[-157,-23,124,-95,-109,-110,-98,-97,-157,-157,-157,-157,-157,-23,-23,-23,-23,-23,-23,-23,-23,-157,-23,-23,-157,-157,-23,-23,-157,-157,-157,-157,-157,-157,-157,-112,-60,-157,-157,-98,-157,-157,-157,-157,-63,-23,-157,-157,-23,-157,-157,-157,-157,]),'>':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,141,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,36,39,41,77,78,105,163,204,237,238,282,],[-157,-157,-157,-3,-2,33,-157,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,33,-16,33,-32,-27,-18,-36,-30,-26,-29,-25,-28,]),'FORGET':([54,],[98,]),'NONE':([8,9,],[23,23,]),'FCONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,134,135,137,138,139,141,142,147,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,212,213,214,225,228,229,230,234,243,252,254,255,264,277,],[-157,-23,120,-95,-109,-110,-98,-97,-157,-157,-157,-157,-157,-23,-23,-23,-23,-23,-23,-23,-23,-157,-23,-23,-157,-157,-23,-23,-157,-157,-157,-157,-157,-157,-157,-112,-60,-157,-157,-98,-157,-157,-157,-157,-63,-23,-157,-157,-23,-157,-157,-157,-157,]),'NO':([11,],[29,]),')':([47,86,88,89,91,92,93,94,111,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,145,146,148,155,156,157,158,164,165,166,167,168,169,171,172,175,176,179,180,188,189,190,194,197,199,201,202,203,206,209,210,211,212,215,216,217,218,219,220,221,222,229,232,233,235,239,240,241,242,243,244,245,246,247,249,254,257,260,262,266,271,273,274,283,285,287,288,],[80,-87,-93,-157,-96,-82,-157,-157,-157,-41,-42,-91,-99,-101,-100,-103,-102,-157,-67,-69,-157,-157,-73,-80,-70,-72,-20,-126,-132,-46,198,-157,-35,-104,-106,-105,-108,-107,206,-86,-90,-157,-94,-81,-85,-127,223,224,-60,231,-34,-156,-154,-157,-92,-68,242,-146,-145,-79,-78,-76,-77,-74,-75,-71,-157,-63,-157,-149,-151,-89,-88,-142,-148,-157,-144,-84,-83,261,-129,-157,-155,242,-20,242,-150,-147,-127,-157,-123,-128,289,]),'(':([38,49,50,51,52,61,68,70,74,79,82,91,96,97,107,108,113,117,125,129,131,134,135,137,138,139,141,142,147,154,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,213,214,225,228,229,230,234,243,252,254,255,264,277,],[47,82,95,-112,97,103,-59,108,111,-23,-95,-143,147,82,-20,82,82,82,82,-23,175,-23,-23,-23,-23,-23,-23,-23,82,194,-23,-23,82,82,-23,-23,82,82,82,82,82,82,82,-112,-60,82,82,82,82,82,82,-63,-23,82,82,-23,82,82,82,82,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'*':([86,88,91,112,115,119,120,121,122,123,124,127,132,164,165,166,167,168,176,203,206,233,235,241,242,271,273,],[-87,-93,-96,-41,-42,-91,-99,-101,-100,-103,-102,170,-157,-104,-106,-105,-108,-107,-94,-157,-92,-149,-151,-142,-148,-150,-147,]),'-':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,132,133,134,135,137,138,139,141,142,147,164,165,166,167,168,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,192,194,203,206,207,208,213,214,225,228,229,230,233,234,235,239,240,241,242,243,252,254,255,264,271,273,277,],[84,-23,-95,-87,-93,-96,-82,84,84,-41,84,-42,84,-91,-99,-101,-100,-103,-102,84,-157,-23,-157,178,-23,-23,-23,-23,-23,-23,-23,84,-104,-106,-105,-108,-107,-23,-86,-90,-23,84,84,-94,-23,-23,84,84,84,84,84,84,84,-112,-60,-157,-92,84,84,84,84,84,84,-63,-23,-149,84,-151,-89,-88,-142,-148,84,-23,84,84,84,-150,-147,84,]),',':([45,46,75,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,145,146,148,157,161,162,164,165,166,167,168,171,172,175,176,179,180,188,190,194,202,203,205,206,209,210,211,212,215,216,217,218,219,220,221,222,229,232,233,235,239,240,241,242,243,244,245,246,254,260,262,266,271,272,273,274,283,],[-20,76,-157,-87,-93,-157,-96,-82,-157,-157,-41,-19,-42,-91,-99,-101,-100,-103,-102,-157,-67,-69,-157,-157,-73,-80,-70,-72,-20,-126,-132,200,76,-24,-104,-106,-105,-108,-107,-86,-90,-157,-94,-81,-85,-127,225,-60,-154,-157,236,-92,-68,243,-146,-145,-79,-78,-76,-77,-74,-75,-71,248,-63,200,-149,-151,-89,-88,-142,-148,-157,-144,-84,-83,-157,243,-20,243,-150,76,-147,-127,248,]),'SCONST':([49,79,81,82,83,84,87,90,97,99,108,113,117,125,129,134,135,137,138,139,141,142,147,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,212,213,214,225,228,229,230,234,243,252,254,255,264,277,],[-157,-23,121,-95,-109,-110,-98,-97,-157,150,-157,-157,-157,-157,-23,-23,-23,-23,-23,-23,-23,-23,-157,-23,-23,-157,-157,-23,-23,-157,-157,-157,-157,-157,-157,-157,-112,-60,-157,-157,-98,-157,-157,-157,-157,-63,-23,-157,-157,-23,-157,-157,-157,-157,]),'ID':([14,15,16,17,18,35,40,42,43,44,49,53,55,56,57,58,59,65,66,67,69,71,72,76,77,78,79,82,95,97,98,100,101,102,103,104,105,106,108,110,113,116,117,125,129,134,135,137,138,139,141,142,147,150,151,159,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,204,207,208,213,214,225,228,229,230,234,236,237,238,243,248,252,254,255,256,259,263,264,269,270,275,277,281,282,286,290,291,],[-117,-115,-21,-116,-118,45,68,-119,74,-120,91,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,68,-65,-22,-27,-18,-23,-95,146,91,-137,-136,151,-51,152,-52,-36,-49,91,-50,91,45,91,91,-23,-23,-23,-23,-23,-23,-23,-23,91,-138,-135,202,-23,-23,91,91,-23,-23,91,91,91,91,91,91,91,-112,-60,-26,91,91,91,91,91,91,-63,-23,91,-22,-29,-25,91,146,-23,91,91,-157,45,-114,91,-45,-48,-111,91,-43,-28,-44,-124,-121,]),'TRACKDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[56,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,56,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),';':([45,46,60,62,64,73,75,85,86,88,89,91,92,93,94,112,114,115,119,120,121,122,123,124,126,127,128,130,132,133,136,140,143,144,149,153,161,162,164,165,166,167,168,171,172,176,179,180,193,195,203,205,206,209,215,216,217,218,219,220,221,224,226,233,235,239,240,241,242,245,246,251,253,261,265,267,271,272,273,276,278,279,284,],[-20,77,102,104,106,110,-157,-153,-87,-93,-157,-96,-82,-157,-157,-41,-19,-42,-91,-99,-101,-100,-103,-102,-152,-157,-67,-69,-157,-157,-73,-80,-70,-72,-130,192,77,-24,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-58,-62,-157,237,-92,-68,-79,-78,-76,-77,-74,-75,-71,-133,-131,-149,-151,-89,-88,-142,-148,-84,-83,-134,-122,-125,277,-24,-150,77,-147,-24,-61,-40,-39,]),'=':([1,2,4,45,46,68,75,107,112,114,115,152,154,161,191,196,203,227,233,235,271,272,],[8,9,11,-20,79,-59,-157,-20,-41,-19,-42,-20,-157,79,-157,230,-157,252,-149,-151,-150,79,]),'<':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,139,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'$end':([5,12,30,34,37,39,41,48,105,163,],[0,-1,-157,-15,-14,-157,-32,-13,-36,-30,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,200,204,237,238,256,263,269,270,275,281,282,286,290,291,],[-157,-157,14,-3,-2,14,-8,-7,-10,-9,-5,-4,-11,-6,-12,14,14,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,14,-65,-27,-18,-51,-52,-36,-49,-50,14,-138,-135,14,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'FOR':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[61,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,61,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'SHOW':([54,],[99,]),'#':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[54,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,54,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'ELSE':([105,256,],[-36,268,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[65,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,65,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'ICONST':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,134,135,137,138,139,141,142,147,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,212,213,214,225,228,229,230,234,243,252,254,255,264,277,],[-157,-23,122,-95,-109,-110,-98,-97,-157,-157,-157,-157,-157,-23,-23,-23,-23,-23,-23,-23,-23,-157,-23,-23,-157,-157,-23,-23,-157,-157,-157,-157,-157,-157,-157,-112,-60,-157,-157,-98,-157,-157,-157,-157,-63,-23,-157,-157,-23,-157,-157,-157,-157,]),'[':([45,68,75,91,107,132,152,154,191,203,],[-20,-59,113,-96,-20,113,-20,113,113,234,]),']':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,128,130,132,133,136,140,143,144,160,164,165,166,167,168,171,172,176,179,180,203,206,209,215,216,217,218,219,220,221,233,235,239,240,241,242,245,246,258,271,273,],[-87,-93,-157,-96,-82,-157,-157,-41,-42,-91,-99,-101,-100,-103,-102,-157,-67,-69,-157,-157,-73,-80,-70,-72,203,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-68,-79,-78,-76,-77,-74,-75,-71,-149,-151,-89,-88,-142,-148,-84,-83,271,-150,-147,]),'YES':([11,],[27,]),'IF':([40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[70,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,70,-65,-27,-18,-51,-52,-36,-49,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'AND':([86,88,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,164,165,166,167,168,171,172,176,179,180,203,206,215,216,217,218,219,220,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,-157,142,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-73,-80,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-79,-78,-76,-77,-74,-75,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'ALL':([8,9,],[21,21,]),'FALSE':([49,79,81,82,83,84,87,90,97,108,113,117,125,129,134,135,137,138,139,141,142,147,170,173,174,175,177,178,181,182,183,184,185,186,187,192,194,207,208,212,213,214,225,228,229,230,234,243,252,254,255,264,277,],[-157,-23,123,-95,-109,-110,-98,-97,-157,-157,-157,-157,-157,-23,-23,-23,-23,-23,-23,-23,-23,-157,-23,-23,-157,-157,-23,-23,-157,-157,-157,-157,-157,-157,-157,-112,-60,-157,-157,-98,-157,-157,-157,-157,-63,-23,-157,-157,-23,-157,-157,-157,-157,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,200,204,237,238,256,263,269,270,275,281,282,286,290,291,],[-157,-157,15,-3,-2,15,-8,-7,-10,-9,-5,-4,-11,-6,-12,15,15,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,15,-65,-27,-18,-51,-52,-36,-49,-50,15,-138,-135,15,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'EQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,138,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'LTEQ':([86,88,91,92,93,112,115,119,120,121,122,123,124,127,132,133,164,165,166,167,168,171,172,176,179,180,203,206,233,235,239,240,241,242,245,246,271,273,],[-87,-93,-96,-82,135,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,200,204,237,238,256,263,269,270,275,281,282,286,290,291,],[-157,-157,17,-3,-2,17,-8,-7,-10,-9,-5,-4,-11,-6,-12,17,17,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,17,-65,-27,-18,-51,-52,-36,-49,-50,17,-138,-135,17,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'OR':([86,88,89,91,92,93,94,112,115,119,120,121,122,123,124,127,132,133,136,140,143,144,164,165,166,167,168,171,172,176,179,180,203,206,215,216,217,218,219,220,221,233,235,239,240,241,242,245,246,271,273,],[-87,-93,129,-96,-82,-157,-157,-41,-42,-91,-99,-101,-100,-103,-102,-157,-157,-157,-73,-80,-70,-72,-104,-106,-105,-108,-107,-86,-90,-94,-81,-85,-157,-92,-79,-78,-76,-77,-74,-75,-71,-149,-151,-89,-88,-142,-148,-84,-83,-150,-147,]),'TRACK':([54,],[100,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-8,-7,-10,-9,-5,-4,-11,-6,-12,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,33,40,53,55,56,57,58,59,65,66,67,69,71,72,77,78,102,104,105,106,110,111,150,151,200,204,237,238,256,263,269,270,275,281,282,286,290,291,],[-157,-157,18,-3,-2,18,-8,-7,-10,-9,-5,-4,-11,-6,-12,18,18,-55,-64,-139,-66,-141,-56,-140,-57,-53,-54,18,-65,-27,-18,-51,-52,-36,-49,-50,18,-138,-135,18,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'{':([32,80,118,198,223,231,250,268,280,289,],[40,-31,40,-33,-113,40,40,-47,40,40,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,41,77,78,105,204,237,238,282,],[-157,-157,-157,-3,-2,-157,-157,-17,-8,-7,-10,-9,-5,-4,-11,-6,-12,-157,38,-15,-16,-14,-32,-27,-18,-36,-26,-29,-25,-28,]),'}':([40,53,55,56,57,58,59,63,65,66,67,69,71,72,77,78,102,104,105,106,109,110,150,151,204,237,238,256,263,269,270,275,281,282,286,290,291,],[-157,-55,-64,-139,-66,-38,-56,105,-140,-57,-53,-54,-157,-65,-27,-18,-51,-52,-36,-49,-37,-50,-138,-135,-26,-29,-25,-157,-114,-45,-48,-111,-43,-28,-44,-124,-121,]),'+':([49,79,82,86,88,91,92,97,108,112,113,115,117,119,120,121,122,123,124,125,127,129,132,133,134,135,137,138,139,141,142,147,164,165,166,167,168,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,192,194,203,206,207,208,213,214,225,228,229,230,233,234,235,239,240,241,242,243,252,254,255,264,271,273,277,],[83,-23,-95,-87,-93,-96,-82,83,83,-41,83,-42,83,-91,-99,-101,-100,-103,-102,83,-157,-23,-157,177,-23,-23,-23,-23,-23,-23,-23,83,-104,-106,-105,-108,-107,-23,-86,-90,-23,83,83,-94,-23,-23,83,83,83,83,83,83,83,-112,-60,-157,-92,83,83,83,83,83,83,-63,-23,-149,83,-151,-89,-88,-142,-148,83,-23,83,83,83,-150,-147,83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([111,],[156,]),'superexpressionB':([94,],[143,]),'while_quadruple':([223,],[250,]),'seen_term':([92,],[133,]),'validate_id':([95,248,],[145,262,]),'for_quadruple':([253,],[265,]),'forloop':([40,71,],[59,59,]),'seen_iconst':([122,],[166,]),'signB':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,207,208,213,214,225,228,234,243,254,255,264,277,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'endcondition_quadruple':([270,],[281,]),'expressionB':([93,],[136,]),'funcsOpt':([13,30,39,],[31,37,48,]),'push_operator':([79,129,134,135,137,138,139,141,142,170,173,177,178,230,252,],[117,174,181,182,183,184,185,186,187,207,208,213,214,255,264,]),'program':([0,],[5,]),'factor':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,207,208,213,214,225,228,234,243,254,255,264,277,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'main':([31,],[39,]),'return':([40,71,],[60,60,]),'read':([40,71,],[62,62,]),'paramsB':([157,232,],[199,257,]),'localdirective':([40,71,],[66,66,]),'quadruple_assign':([162,267,276,],[205,279,284,]),'condition':([40,71,],[69,69,]),'suprafunc':([13,30,39,],[30,30,30,]),'term':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,207,208,213,214,225,228,234,243,254,255,264,277,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,239,240,92,92,92,92,92,92,92,92,92,92,]),'push_type':([16,],[35,]),'init_while':([51,192,],[96,228,]),'localdecisiondirective':([40,71,],[72,72,]),'output':([40,71,],[73,73,]),'seen_sconst':([121,],[165,]),'assignfunccallB':([154,],[193,]),'sign':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,207,208,213,214,225,228,234,243,254,255,264,277,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'return_quadruple':([85,],[126,]),'funccallC':([210,260,266,],[241,273,278,]),'funccallB':([175,243,254,],[210,260,266,]),'dimensions':([75,132,154,191,],[112,112,112,112,]),'condition_quadruple':([155,],[197,]),'hyperexpression':([49,97,108,113,117,125,147,174,175,225,228,234,243,254,255,264,277,],[85,148,155,160,162,169,189,209,211,148,253,258,211,211,267,276,285,]),'seen_param':([211,],[244,]),'body':([6,],[12,]),'whileloop':([40,71,],[53,53,]),'superexpression':([49,97,108,113,117,125,147,174,175,187,225,228,234,243,254,255,264,277,],[89,89,89,89,89,89,89,89,89,221,89,89,89,89,89,89,89,89,]),'assignfunccall':([40,71,],[64,64,]),'seen_main':([80,],[118,]),'seen_factor':([86,],[127,]),'seen_true':([124,],[168,]),'repush_type':([76,236,],[116,259,]),'localmsgdirective':([40,71,],[57,57,]),'termB':([127,],[171,]),'expression':([49,97,108,113,117,125,147,174,175,187,225,228,234,243,254,255,264,277,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assign':([103,],[153,]),'block':([32,118,231,250,280,289,],[41,163,256,263,286,290,]),'seen_funccall':([68,],[107,]),'read_quadruple':([188,274,],[222,283,]),'configdirective':([0,3,],[3,3,]),'constant':([81,],[119,]),'print_quadruple':([148,],[190,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([54,],[101,]),'localvardirective':([40,71,],[55,55,]),'seen_parentheses':([82,],[125,]),'params':([111,200,],[157,232,]),'type':([6,19,33,40,71,111,200,],[16,16,44,16,16,159,159,]),'empty':([0,3,6,13,19,30,39,40,49,71,75,89,93,94,97,108,111,113,117,125,127,132,133,147,154,157,174,175,181,182,183,184,185,186,187,191,203,207,208,213,214,222,225,228,232,234,243,254,255,256,264,277,283,],[7,7,20,34,20,34,34,58,87,58,115,130,140,144,87,87,158,87,87,87,172,115,180,87,115,201,87,212,87,87,87,87,87,87,87,115,235,87,87,87,87,249,87,87,201,87,212,212,87,269,87,87,249,]),'for_expression':([285,],[288,]),'else':([256,],[270,]),'func':([13,30,39,],[32,32,32,]),'declaration':([6,19,40,71,],[19,19,67,67,]),'expB':([133,],[179,]),'declarationB':([35,116,259,],[46,161,272,]),'declarationC':([46,161,272,],[78,204,282,]),'declarationD':([205,],[238,]),'declarationsOpt':([6,19,],[13,36,]),'instruction':([40,71,],[71,71,]),'pop_operand':([194,],[229,]),'seen_a_funccall':([229,],[254,]),'outputB':([97,225,],[149,251,]),'outputC':([190,],[226,]),'dimensionsB':([203,],[233,]),'push_operand':([45,107,145,152,262,],[75,154,188,191,274,]),'dimensionsOpt':([75,132,154,191,],[114,176,196,227,]),'seen_a_factor_funccall':([91,],[131,]),'readB':([222,283,],[247,287,]),'seen_ID':([91,],[132,]),'hyperexpressionB':([89,],[128,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([268,],[280,]),'funccall':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,207,208,213,214,225,228,234,243,254,255,264,277,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'instructionsOpt':([40,71,],[63,109,]),'returntype':([33,],[43,]),'seen_fconst':([120,],[164,]),'seen_false':([123,],[167,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([290,],[291,]),'assignB':([154,],[195,]),'exp':([49,97,108,113,117,125,147,174,175,181,182,183,184,185,186,187,213,214,225,228,234,243,254,255,264,277,],[93,93,93,93,93,93,93,93,93,215,216,217,218,219,220,93,245,246,93,93,93,93,93,93,93,93,]),'endwhile_quadruple':([263,],[275,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',26),
  ('config -> configdirective config','config',2,'p_config','parser.py',30),
  ('config -> empty','config',1,'p_config','parser.py',31),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',35),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',36),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',37),
  ('options -> SOME','options',1,'p_options','parser.py',40),
  ('options -> ALL','options',1,'p_options','parser.py',41),
  ('options -> MOST','options',1,'p_options','parser.py',42),
  ('options -> NONE','options',1,'p_options','parser.py',43),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',46),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',47),
  ('body -> declarationsOpt funcsOpt main funcsOpt','body',4,'p_body','parser.py',51),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',54),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',55),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',58),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',59),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',63),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',71),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',93),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',102),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',106),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',111),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',115),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',133),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',134),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',135),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',143),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',144),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',148),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',151),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',157),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',176),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',190),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',191),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',195),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',198),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',199),
  ('assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',203),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',210),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',213),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',214),
  ('condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',220),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',224),
  ('else -> empty','else',1,'p_else','parser.py',225),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',228),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',240),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',249),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',259),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',260),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',261),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',262),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',263),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',264),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',265),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',266),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',267),
  ('assignfunccall -> ID seen_funccall push_operand assignfunccallB','assignfunccall',4,'p_assignfunccall','parser.py',272),
  ('seen_funccall -> <empty>','seen_funccall',0,'p_seen_funccall','parser.py',304),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',309),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',315),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',316),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',320),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',325),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',326),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',327),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',331),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',334),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',335),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',343),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',346),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',347),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',355),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',359),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',360),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',361),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',362),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',363),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',364),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',365),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',374),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',377),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',384),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',385),
  ('expB -> empty','expB',1,'p_expB','parser.py',386),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',390),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',393),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',399),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',400),
  ('termB -> empty','termB',1,'p_termB','parser.py',401),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',407),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',408),
  ('factor -> funccall','factor',1,'p_factor','parser.py',409),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',410),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',420),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',424),
  ('signB -> sign','signB',1,'p_signB','parser.py',442),
  ('signB -> empty','signB',1,'p_signB','parser.py',443),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',448),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',453),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',458),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',463),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',468),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',473),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',474),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',475),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',476),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',477),
  ('sign -> +','sign',1,'p_sign','parser.py',489),
  ('sign -> -','sign',1,'p_sign','parser.py',490),
  ('whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',495),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',498),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',502),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',514),
  ('type -> INT','type',1,'p_type','parser.py',525),
  ('type -> FLOAT','type',1,'p_type','parser.py',526),
  ('type -> STRING','type',1,'p_type','parser.py',527),
  ('type -> BOOL','type',1,'p_type','parser.py',528),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',534),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',535),
  ('forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',540),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',544),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',559),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',571),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',581),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',584),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',592),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',599),
  ('readB -> empty','readB',1,'p_readB','parser.py',600),
  ('output -> PRINT ( outputB','output',3,'p_output','parser.py',603),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',606),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',609),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',618),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',619),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',623),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',626),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',627),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',631),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',635),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',636),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',637),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',641),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',669),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',674),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',675),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',678),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',696),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',697),
  ('dimensions -> [ hyperexpression ] dimensionsB','dimensions',4,'p_dimensions','parser.py',701),
  ('dimensionsB -> [ hyperexpression ]','dimensionsB',3,'p_dimensionsB','parser.py',705),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',706),
  ('return -> RETURN hyperexpression return_quadruple','return',3,'p_return','parser.py',711),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',715),
  ('params -> type ID','params',2,'p_params','parser.py',734),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',743),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',744),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',747),
]
