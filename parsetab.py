
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xdf\r\xe8@/\xc7S\xbd\xad$\xc6o\xa0\xed\xd6\x0c'
    
_lr_action_items = {'DECISIONSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[1,1,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'RETURN':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[55,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,55,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'GTEQ':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,143,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'READ':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[56,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,56,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'VOID':([36,],[45,]),'SOME':([8,9,],[22,22,]),'WHILE':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[59,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,59,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'/':([86,89,98,100,103,128,129,130,131,132,133,135,136,141,176,177,178,179,180,188,213,217,244,246,250,251,282,289,],[-43,-44,-88,-96,-98,-92,-101,-103,-102,-105,-104,185,-94,-165,-106,-108,-107,-110,-109,-95,-165,-93,-157,-159,-148,-154,-153,-158,]),'PRINT':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[60,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,60,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'DIFF':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,146,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'TRUE':([52,55,87,91,93,94,95,96,99,102,117,120,134,138,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,223,224,225,234,235,237,241,245,252,261,274,285,],[-24,-165,-165,-165,133,-97,-111,-112,-100,-99,-165,-165,-165,-24,-24,-24,-24,-24,-24,-24,-24,-61,-165,-24,-24,-165,-165,-24,-24,-165,-165,-165,-165,-165,-165,-165,-64,-24,-117,-165,-165,-100,-165,-165,-165,-165,-165,-165,-165,-165,-24,-165,-165,]),'>':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,150,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'DEF':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,42,44,50,51,118,173,175,215,216,281,],[-165,-165,-165,-4,-3,-2,-165,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,36,-17,36,36,-33,-28,-19,-37,-27,-31,-30,-26,-29,]),'FORGET':([62,],[110,]),'NONE':([8,9,],[23,23,]),'FCONST':([52,55,87,91,93,94,95,96,99,102,117,120,134,138,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,223,224,225,234,235,237,241,245,252,261,274,285,],[-24,-165,-165,-165,129,-97,-111,-112,-100,-99,-165,-165,-165,-24,-24,-24,-24,-24,-24,-24,-24,-61,-165,-24,-24,-165,-165,-24,-24,-165,-165,-165,-165,-165,-165,-165,-64,-24,-117,-165,-165,-100,-165,-165,-165,-165,-165,-165,-165,-165,-24,-165,-165,]),'NO':([11,],[29,]),')':([53,86,89,98,100,101,103,104,105,106,123,128,129,130,131,132,133,135,136,137,139,141,142,145,149,152,153,154,155,157,164,166,168,169,170,176,177,178,179,180,181,183,184,187,188,191,192,200,201,205,206,207,209,211,212,213,217,220,221,222,223,226,227,228,229,230,231,232,233,234,243,244,246,248,249,250,251,252,253,254,255,256,258,259,266,269,271,282,283,289,290,292,294,295,],[92,-43,-44,-88,-96,-165,-98,-83,-165,-165,-165,-92,-101,-103,-102,-105,-104,-165,-94,-68,-70,-165,-165,-74,-81,-71,-73,-21,-131,-61,-48,-138,208,-165,-36,-106,-108,-107,-110,-109,217,-87,-91,-165,-95,-82,-86,-132,-64,238,239,240,-35,-164,-162,-165,-93,-69,251,-152,-151,-80,-79,-77,-78,-75,-76,-72,-165,-165,-165,-157,-159,-90,-89,-148,-154,-165,-150,-85,-84,270,-134,251,-163,251,-21,-153,-132,-158,-165,-128,-133,296,]),'(':([41,52,55,56,58,59,60,63,67,71,73,75,78,80,85,87,91,94,103,109,117,119,120,134,138,140,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,224,225,234,235,237,241,245,252,261,274,285,],[53,-24,94,107,-21,-114,-135,-115,-113,115,117,-117,-40,120,123,94,94,-97,-149,157,94,165,94,94,-24,187,-24,-24,-24,-24,-24,-24,-24,-61,94,-24,-24,94,94,-24,-24,94,94,94,94,94,94,94,-64,-24,-117,94,94,94,94,94,94,94,94,94,94,-24,94,94,]),'VARSCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[2,2,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'*':([86,89,98,100,103,128,129,130,131,132,133,135,136,141,176,177,178,179,180,188,213,217,244,246,250,251,282,289,],[-43,-44,-88,-96,-98,-92,-101,-103,-102,-105,-104,182,-94,-165,-106,-108,-107,-110,-109,-95,-165,-93,-157,-159,-148,-154,-153,-158,]),'-':([52,55,86,87,89,91,94,98,100,103,104,117,120,128,129,130,131,132,133,134,135,136,138,141,142,143,144,146,147,148,150,151,157,165,176,177,178,179,180,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,201,202,204,213,217,218,219,224,225,234,235,237,241,244,245,246,248,249,250,251,252,261,274,282,285,289,],[-24,96,-43,96,-44,96,-97,-88,-96,-98,-83,96,96,-92,-101,-103,-102,-105,-104,96,-165,-94,-24,-165,190,-24,-24,-24,-24,-24,-24,-24,-61,96,-106,-108,-107,-110,-109,-24,-87,-91,-24,96,96,-95,-24,-24,96,96,96,96,96,96,96,-64,-24,-117,-165,-93,96,96,96,96,96,96,96,96,-157,96,-159,-90,-89,-148,-154,96,-24,96,-153,96,-158,]),',':([38,39,48,86,88,89,98,100,101,103,104,105,106,125,126,128,129,130,131,132,133,135,136,137,139,141,142,145,149,152,153,154,155,157,166,169,174,176,177,178,179,180,183,184,187,188,191,192,200,201,207,212,213,217,220,221,222,223,226,227,228,229,230,231,232,233,234,243,244,246,248,249,250,251,252,253,254,255,259,268,269,271,282,283,289,290,],[-21,49,-165,-43,-20,-44,-88,-96,-165,-98,-83,-165,-165,49,-25,-92,-101,-103,-102,-105,-104,-165,-94,-68,-70,-165,-165,-74,-81,-71,-73,-21,-131,-61,-138,210,214,-106,-108,-107,-110,-109,-87,-91,-165,-95,-82,-86,-132,-64,241,-162,-165,-93,-69,252,-152,-151,-80,-79,-77,-78,-75,-76,-72,257,-165,210,-157,-159,-90,-89,-148,-154,-165,-150,-85,-84,252,49,252,-21,-153,-132,-158,257,]),'SCONST':([52,55,87,91,93,94,95,96,99,102,111,117,120,134,138,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,223,224,225,234,235,237,241,245,252,261,274,285,],[-24,-165,-165,-165,130,-97,-111,-112,-100,-99,160,-165,-165,-165,-24,-24,-24,-24,-24,-24,-24,-24,-61,-165,-24,-24,-165,-165,-24,-24,-165,-165,-165,-165,-165,-165,-165,-64,-24,-117,-165,-165,-100,-165,-165,-165,-165,-165,-165,-165,-165,-24,-165,-165,]),'ID':([14,15,16,17,18,31,43,45,46,47,49,50,51,52,55,61,64,65,66,68,69,76,77,79,81,82,83,87,90,91,94,107,108,110,112,113,114,115,116,117,118,120,122,134,138,143,144,146,147,148,150,151,157,160,161,165,171,173,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,214,215,216,218,219,224,225,234,235,237,241,245,247,252,257,261,263,274,277,278,279,281,285,287,288,293,297,298,],[-22,-122,-120,-121,-123,38,78,-124,85,-125,-23,-28,-19,-24,103,-57,-65,-145,-67,-147,-58,-59,-55,-56,78,-146,-66,103,38,103,-97,155,-51,-143,-142,161,-53,78,-54,103,-37,103,-52,103,-24,-24,-24,-24,-24,-24,-24,-24,-61,-144,-141,103,212,-27,-24,-24,103,103,-24,-24,103,103,103,103,103,103,103,-64,-24,-117,-23,-30,-26,103,103,103,103,103,103,103,103,103,38,103,155,-24,-165,103,-47,-50,-119,-29,103,-45,-116,-46,-129,-126,]),'TRACKDECISION':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[65,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,65,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),';':([38,39,48,57,70,72,84,86,88,89,97,98,100,101,103,104,105,106,125,126,128,129,130,131,132,133,135,136,137,139,141,142,145,149,152,153,156,158,163,167,174,176,177,178,179,180,183,184,188,191,192,213,217,220,226,227,228,229,230,231,232,240,242,244,246,248,249,250,251,254,255,260,262,265,268,270,272,273,275,282,284,289,291,],[-21,50,-165,108,114,116,122,-43,-20,-44,-160,-88,-96,-165,-98,-83,-165,-165,50,-25,-92,-101,-103,-102,-105,-104,-165,-94,-68,-70,-165,-165,-74,-81,-71,-73,-60,-63,204,-136,215,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-69,-80,-79,-77,-78,-75,-76,-72,-139,-137,-157,-159,-90,-89,-148,-154,-85,-84,-25,-127,-140,50,-130,-62,-42,285,-153,-25,-158,-41,]),'=':([1,2,4,38,39,48,58,78,86,88,89,109,125,159,162,203,213,236,244,246,268,289,],[8,9,11,-21,52,-165,-21,-40,-43,-20,-44,-165,52,202,-21,-165,-165,261,-157,-159,52,-158,]),'<':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,148,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'$end':([5,12,33,37,40,42,44,54,118,175,],[0,-1,-165,-16,-15,-165,-33,-14,-37,-31,]),'STRING':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,123,160,161,173,210,215,216,263,277,278,279,281,287,288,293,297,298,],[-165,-165,15,-4,-3,15,-9,-8,-11,-10,-6,-5,-12,-7,-13,15,15,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,15,-146,-66,-51,-53,-54,-37,-52,15,-144,-141,-27,15,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'FOR':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[63,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,63,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'SHOW':([62,],[111,]),'#':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[62,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,62,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ELSE':([118,263,],[-37,276,]),'MOST':([8,9,],[24,24,]),'FORGETDECISION':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[82,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,82,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'ICONST':([52,55,87,91,93,94,95,96,99,102,117,120,134,138,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,223,224,225,234,235,237,241,245,252,261,274,285,],[-24,-165,-165,-165,131,-97,-111,-112,-100,-99,-165,-165,-165,-24,-24,-24,-24,-24,-24,-24,-24,-61,-165,-24,-24,-165,-165,-24,-24,-165,-165,-165,-165,-165,-165,-165,-64,-24,-117,-165,-165,-100,-165,-165,-165,-165,-165,-165,-165,-165,-24,-165,-165,]),']':([86,89,98,100,101,103,104,105,106,124,128,129,130,131,132,133,135,136,137,139,141,142,145,149,152,153,172,176,177,178,179,180,183,184,188,191,192,213,217,220,226,227,228,229,230,231,232,244,246,248,249,250,251,254,255,267,280,282,289,],[-43,-44,-88,-96,-165,-98,-83,-165,-165,-155,-92,-101,-103,-102,-105,-104,-165,-94,-68,-70,-165,-165,-74,-81,-71,-73,213,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-69,-80,-79,-77,-78,-75,-76,-72,-157,-159,-90,-89,-148,-154,-85,-84,-156,289,-153,-158,]),'[':([38,48,58,78,103,109,141,162,203,213,],[-21,87,-21,-40,-98,87,87,-21,87,245,]),'EQ':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,147,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'YES':([11,],[27,]),'IF':([43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[67,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,67,-146,-66,-51,-53,-54,-37,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'AND':([86,89,98,100,103,104,105,106,128,129,130,131,132,133,135,136,141,142,145,149,176,177,178,179,180,183,184,188,191,192,213,217,226,227,228,229,230,231,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,-165,151,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-74,-81,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-80,-79,-77,-78,-75,-76,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'ALL':([8,9,],[21,21,]),'FALSE':([52,55,87,91,93,94,95,96,99,102,117,120,134,138,143,144,146,147,148,150,151,157,165,182,185,186,187,189,190,193,194,195,196,197,198,199,201,202,204,218,219,223,224,225,234,235,237,241,245,252,261,274,285,],[-24,-165,-165,-165,132,-97,-111,-112,-100,-99,-165,-165,-165,-24,-24,-24,-24,-24,-24,-24,-24,-61,-165,-24,-24,-165,-165,-24,-24,-165,-165,-165,-165,-165,-165,-165,-64,-24,-117,-165,-165,-100,-165,-165,-165,-165,-165,-165,-165,-165,-24,-165,-165,]),'INT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,123,160,161,173,210,215,216,263,277,278,279,281,287,288,293,297,298,],[-165,-165,16,-4,-3,16,-9,-8,-11,-10,-6,-5,-12,-7,-13,16,16,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,16,-146,-66,-51,-53,-54,-37,-52,16,-144,-141,-27,16,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'LTEQ':([86,89,98,100,103,104,105,128,129,130,131,132,133,135,136,141,142,176,177,178,179,180,183,184,188,191,192,213,217,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,-98,-83,144,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'FLOAT':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,123,160,161,173,210,215,216,263,277,278,279,281,287,288,293,297,298,],[-165,-165,17,-4,-3,17,-9,-8,-11,-10,-6,-5,-12,-7,-13,17,17,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,17,-146,-66,-51,-53,-54,-37,-52,17,-144,-141,-27,17,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'OR':([86,89,98,100,101,103,104,105,106,128,129,130,131,132,133,135,136,141,142,145,149,152,153,176,177,178,179,180,183,184,188,191,192,213,217,226,227,228,229,230,231,232,244,246,248,249,250,251,254,255,282,289,],[-43,-44,-88,-96,138,-98,-83,-165,-165,-92,-101,-103,-102,-105,-104,-165,-94,-165,-165,-74,-81,-71,-73,-106,-108,-107,-110,-109,-87,-91,-95,-82,-86,-165,-93,-80,-79,-77,-78,-75,-76,-72,-157,-159,-90,-89,-148,-154,-85,-84,-153,-158,]),'TRACK':([62,],[112,]),'COMPLEXITYCONFIG':([0,3,21,22,23,24,25,26,27,28,29,],[4,4,-9,-8,-11,-10,-6,-5,-12,-7,-13,]),'BOOL':([0,3,6,7,10,19,21,22,23,24,25,26,27,28,29,36,43,50,51,61,64,65,66,68,69,76,77,79,81,82,83,108,114,116,118,122,123,160,161,173,210,215,216,263,277,278,279,281,287,288,293,297,298,],[-165,-165,18,-4,-3,18,-9,-8,-11,-10,-6,-5,-12,-7,-13,18,18,-28,-19,-57,-65,-145,-67,-147,-58,-59,-55,-56,18,-146,-66,-51,-53,-54,-37,-52,18,-144,-141,-27,18,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'{':([35,92,127,208,238,239,264,276,286,296,],[43,-32,43,-34,43,-118,43,-49,43,43,]),'MAIN':([0,3,6,7,10,13,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,37,40,44,50,51,118,173,215,216,281,],[-165,-165,-165,-4,-3,-2,-165,-18,-9,-8,-11,-10,-6,-5,-12,-7,-13,-165,-17,-165,41,-16,-15,-33,-28,-19,-37,-27,-30,-26,-29,]),'}':([43,50,51,61,64,65,66,68,69,74,76,77,79,81,82,83,108,114,116,118,121,122,160,161,173,215,216,263,277,278,279,281,287,288,293,297,298,],[-165,-28,-19,-57,-65,-145,-67,-39,-58,118,-59,-55,-56,-165,-146,-66,-51,-53,-54,-37,-38,-52,-144,-141,-27,-30,-26,-165,-47,-50,-119,-29,-45,-116,-46,-129,-126,]),'+':([52,55,86,87,89,91,94,98,100,103,104,117,120,128,129,130,131,132,133,134,135,136,138,141,142,143,144,146,147,148,150,151,157,165,176,177,178,179,180,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,201,202,204,213,217,218,219,224,225,234,235,237,241,244,245,246,248,249,250,251,252,261,274,282,285,289,],[-24,95,-43,95,-44,95,-97,-88,-96,-98,-83,95,95,-92,-101,-103,-102,-105,-104,95,-165,-94,-24,-165,189,-24,-24,-24,-24,-24,-24,-24,-61,95,-106,-108,-107,-110,-109,-24,-87,-91,-24,95,95,-95,-24,-24,95,95,95,95,95,95,95,-64,-24,-117,-165,-93,95,95,95,95,95,95,95,95,-157,95,-159,-90,-89,-148,-154,95,-24,95,-153,95,-158,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paramsOpt':([123,],[168,]),'superexpressionB':([106,],[152,]),'while_quadruple':([239,],[264,]),'seen_term':([104,],[142,]),'validate_id':([107,257,],[154,271,]),'for_quadruple':([262,],[275,]),'whileloop':([43,81,],[61,61,]),'seen_iconst':([131,],[178,]),'signB':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,218,219,224,225,234,235,237,241,245,252,274,285,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'endcondition_quadruple':([278,],[287,]),'expressionB':([105,],[145,]),'funcsOpt':([30,33,42,],[34,40,54,]),'push_operator':([52,138,143,144,146,147,148,150,151,182,185,189,190,202,261,],[91,186,193,194,195,196,197,198,199,218,219,224,225,235,274,]),'program':([0,],[5,]),'factor':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,218,219,224,225,234,235,237,241,245,252,274,285,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'main':([34,],[42,]),'return':([43,81,],[70,70,]),'read':([43,81,],[72,72,]),'paramsB':([169,243,],[209,266,]),'localdirective':([43,81,],[76,76,]),'quadruple_assign':([126,260,284,],[174,273,291,]),'condition':([43,81,],[79,79,]),'suprafunc':([30,33,42,],[33,33,33,]),'term':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,218,219,224,225,234,235,237,241,245,252,274,285,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,248,249,104,104,104,104,104,104,104,104,104,104,]),'start_quadruple':([13,],[30,]),'push_type':([14,],[31,]),'init_while':([75,204,],[119,237,]),'localdecisiondirective':([43,81,],[83,83,]),'output':([43,81,],[84,84,]),'seen_sconst':([130,],[177,]),'assignfunccallB':([109,],[156,]),'id_record_line':([43,81,115,],[58,58,162,]),'sign':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,218,219,224,225,234,235,237,241,245,252,274,285,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'funccallC':([221,259,269,],[250,272,282,]),'funccallB':([187,234,252,],[221,259,269,]),'dimensions':([48,109,141,203,],[86,86,86,86,]),'condition_quadruple':([164,],[205,]),'hyperexpression':([55,87,91,117,120,134,165,186,187,234,235,237,241,245,252,274,285,],[97,124,126,164,166,181,206,220,222,222,260,262,166,267,222,284,292,]),'seen_param':([222,],[253,]),'body':([6,],[12,]),'forloop':([43,81,],[69,69,]),'superexpression':([55,87,91,117,120,134,165,186,187,199,234,235,237,241,245,252,274,285,],[101,101,101,101,101,101,101,101,101,232,101,101,101,101,101,101,101,101,]),'assignfunccall':([43,81,],[57,57,]),'seen_main':([92,],[127,]),'seen_factor':([98,],[135,]),'seen_true':([133,],[180,]),'repush_type':([49,214,],[90,247,]),'localmsgdirective':([43,81,],[66,66,]),'termB':([135,],[183,]),'expression':([55,87,91,117,120,134,165,186,187,199,234,235,237,241,245,252,274,285,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'assign':([115,],[163,]),'block':([35,127,238,264,286,296,],[44,175,263,279,293,297,]),'read_quadruple':([200,283,],[233,290,]),'configdirective':([0,3,],[3,3,]),'dimensionsB':([213,],[244,]),'print_quadruple':([166,],[207,]),'optionsyesno':([11,],[28,]),'localvardirectiveB':([62,],[113,]),'localvardirective':([43,81,],[64,64,]),'seen_parentheses':([94,],[134,]),'params':([123,210,],[169,243,]),'type':([6,19,36,43,81,123,210,],[14,14,47,14,14,171,171,]),'empty':([0,3,6,19,30,33,42,43,48,55,81,87,91,101,105,106,109,117,120,123,134,135,141,142,165,169,186,187,193,194,195,196,197,198,199,203,213,218,219,224,225,233,234,235,237,241,243,245,252,263,274,285,290,],[7,7,20,20,37,37,37,68,89,99,68,99,99,139,149,153,89,99,99,170,99,184,89,192,99,211,99,223,99,99,99,99,99,99,99,89,246,99,99,99,99,258,223,99,99,99,211,99,223,277,99,99,258,]),'for_expression':([292,],[295,]),'else':([263,],[278,]),'seen_dimensiony':([267,],[280,]),'seen_dimensionx':([124,],[172,]),'func':([30,33,42,],[35,35,35,]),'declaration':([6,19,43,81,],[19,19,77,77,]),'expB':([142,],[191,]),'declarationB':([31,90,247,],[39,125,268,]),'declarationC':([39,125,268,],[51,173,281,]),'declarationD':([174,],[216,]),'seen_factor_funccall':([100,],[136,]),'register_print_line':([43,81,],[80,80,]),'declarationsOpt':([6,19,],[13,32,]),'instruction':([43,81,],[81,81,]),'pop_operand':([157,],[201,]),'seen_a_funccall':([201,],[234,]),'outputB':([120,241,],[167,265,]),'outputC':([207,],[242,]),'constant':([93,],[128,]),'push_operand':([38,58,154,162,271,],[48,109,200,203,283,]),'dimensionsOpt':([48,109,141,203,],[88,159,188,236,]),'seen_a_factor_funccall':([103,],[140,]),'readB':([233,290,],[256,294,]),'seen_ID':([103,],[141,]),'hyperexpressionB':([101,],[137,]),'config':([0,3,],[6,10,]),'elsecondition_quadruple':([276,],[286,]),'funccall':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,218,219,224,225,234,235,237,241,245,252,274,285,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'register_if':([43,81,],[73,73,]),'instructionsOpt':([43,81,],[74,121,]),'register_for':([43,81,],[71,71,]),'returntype':([36,],[46,]),'seen_fconst':([129,],[176,]),'seen_false':([132,],[179,]),'options':([8,9,],[25,26,]),'endfor_quadruple':([297,],[298,]),'register_while':([43,81,],[75,75,]),'assignB':([109,],[158,]),'exp':([55,87,91,117,120,134,165,186,187,193,194,195,196,197,198,199,224,225,234,235,237,241,245,252,274,285,],[105,105,105,105,105,105,105,105,105,226,227,228,229,230,231,105,254,255,105,105,105,105,105,105,105,105,]),'endwhile_quadruple':([279,],[288,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> config body','program',2,'p_program','parser.py',38),
  ('start_quadruple -> <empty>','start_quadruple',0,'p_start_quadruple','parser.py',41),
  ('config -> configdirective config','config',2,'p_config','parser.py',47),
  ('config -> empty','config',1,'p_config','parser.py',48),
  ('configdirective -> VARSCONFIG = options','configdirective',3,'p_configdirective','parser.py',52),
  ('configdirective -> DECISIONSCONFIG = options','configdirective',3,'p_configdirective','parser.py',53),
  ('configdirective -> COMPLEXITYCONFIG = optionsyesno','configdirective',3,'p_configdirective','parser.py',54),
  ('options -> SOME','options',1,'p_options','parser.py',57),
  ('options -> ALL','options',1,'p_options','parser.py',58),
  ('options -> MOST','options',1,'p_options','parser.py',59),
  ('options -> NONE','options',1,'p_options','parser.py',60),
  ('optionsyesno -> YES','optionsyesno',1,'p_optionsyesno','parser.py',63),
  ('optionsyesno -> NO','optionsyesno',1,'p_optionsyesno','parser.py',64),
  ('body -> declarationsOpt start_quadruple funcsOpt main funcsOpt','body',5,'p_body','parser.py',68),
  ('funcsOpt -> suprafunc funcsOpt','funcsOpt',2,'p_funcsOpt','parser.py',71),
  ('funcsOpt -> empty','funcsOpt',1,'p_funcsOpt','parser.py',72),
  ('declarationsOpt -> declaration declarationsOpt','declarationsOpt',2,'p_declarationsOpt','parser.py',75),
  ('declarationsOpt -> empty','declarationsOpt',1,'p_declarationsOpt','parser.py',76),
  ('declaration -> type push_type declarationB declarationC','declaration',4,'p_declaration','parser.py',80),
  ('declarationB -> ID push_operand dimensionsOpt','declarationB',3,'p_declarationB','parser.py',88),
  ('push_operand -> <empty>','push_operand',0,'p_push_operand','parser.py',120),
  ('push_type -> <empty>','push_type',0,'p_push_type','parser.py',129),
  ('repush_type -> <empty>','repush_type',0,'p_repush_type','parser.py',133),
  ('push_operator -> <empty>','push_operator',0,'p_push_operator','parser.py',138),
  ('quadruple_assign -> <empty>','quadruple_assign',0,'p_quadruple_assign','parser.py',142),
  ('declarationC -> = push_operator hyperexpression quadruple_assign declarationD','declarationC',5,'p_declarationC','parser.py',168),
  ('declarationC -> , repush_type declarationB declarationC','declarationC',4,'p_declarationC','parser.py',169),
  ('declarationC -> ;','declarationC',1,'p_declarationC','parser.py',170),
  ('declarationD -> , repush_type declarationB declarationC','declarationD',4,'p_declarationD','parser.py',178),
  ('declarationD -> ;','declarationD',1,'p_declarationD','parser.py',179),
  ('main -> MAIN ( ) seen_main block','main',5,'p_main','parser.py',183),
  ('seen_main -> <empty>','seen_main',0,'p_seen_main','parser.py',203),
  ('suprafunc -> func block','suprafunc',2,'p_suprafunc','parser.py',216),
  ('func -> DEF returntype ID ( paramsOpt )','func',6,'p_func','parser.py',247),
  ('paramsOpt -> params paramsB','paramsOpt',2,'p_paramsOpt','parser.py',271),
  ('paramsOpt -> empty','paramsOpt',1,'p_paramsOpt','parser.py',272),
  ('block -> { instructionsOpt }','block',3,'p_block','parser.py',276),
  ('instructionsOpt -> instruction instructionsOpt','instructionsOpt',2,'p_instructionsOpt','parser.py',280),
  ('instructionsOpt -> empty','instructionsOpt',1,'p_instructionsOpt','parser.py',281),
  ('id_record_line -> ID','id_record_line',1,'p_id_record_line','parser.py',284),
  ('assign -> id_record_line push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign','assign',7,'p_assign','parser.py',291),
  ('assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign','assignB',5,'p_assignB','parser.py',298),
  ('dimensionsOpt -> dimensions','dimensionsOpt',1,'p_dimensionsOpt','parser.py',301),
  ('dimensionsOpt -> empty','dimensionsOpt',1,'p_dimensionsOpt','parser.py',302),
  ('condition -> register_if ( hyperexpression condition_quadruple ) block else endcondition_quadruple','condition',8,'p_condition','parser.py',308),
  ('else -> ELSE elsecondition_quadruple block','else',3,'p_else','parser.py',312),
  ('else -> empty','else',1,'p_else','parser.py',313),
  ('condition_quadruple -> <empty>','condition_quadruple',0,'p_condition_quadruple','parser.py',316),
  ('elsecondition_quadruple -> <empty>','elsecondition_quadruple',0,'p_elsecondition_quadruple','parser.py',328),
  ('endcondition_quadruple -> <empty>','endcondition_quadruple',0,'p_endcondition_quadruple','parser.py',337),
  ('instruction -> assignfunccall ;','instruction',2,'p_instruction','parser.py',347),
  ('instruction -> output ;','instruction',2,'p_instruction','parser.py',348),
  ('instruction -> return ;','instruction',2,'p_instruction','parser.py',349),
  ('instruction -> read ;','instruction',2,'p_instruction','parser.py',350),
  ('instruction -> declaration','instruction',1,'p_instruction','parser.py',351),
  ('instruction -> condition','instruction',1,'p_instruction','parser.py',352),
  ('instruction -> whileloop','instruction',1,'p_instruction','parser.py',353),
  ('instruction -> forloop','instruction',1,'p_instruction','parser.py',354),
  ('instruction -> localdirective','instruction',1,'p_instruction','parser.py',355),
  ('assignfunccall -> id_record_line push_operand assignfunccallB','assignfunccall',3,'p_assignfunccall','parser.py',360),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',390),
  ('assignfunccallB -> ( pop_operand seen_a_funccall funccallB funccallC','assignfunccallB',5,'p_assignfunccallB','parser.py',396),
  ('assignfunccallB -> assignB','assignfunccallB',1,'p_assignfunccallB','parser.py',397),
  ('seen_a_funccall -> <empty>','seen_a_funccall',0,'p_seen_a_funccall','parser.py',401),
  ('localdirective -> localvardirective','localdirective',1,'p_localdirective','parser.py',407),
  ('localdirective -> localdecisiondirective','localdirective',1,'p_localdirective','parser.py',408),
  ('localdirective -> localmsgdirective','localdirective',1,'p_localdirective','parser.py',409),
  ('hyperexpression -> superexpression hyperexpressionB','hyperexpression',2,'p_hyperexpression','parser.py',413),
  ('hyperexpressionB -> OR push_operator hyperexpression','hyperexpressionB',3,'p_hyperexpressionB','parser.py',416),
  ('hyperexpressionB -> empty','hyperexpressionB',1,'p_hyperexpressionB','parser.py',417),
  ('superexpression -> expression superexpressionB','superexpression',2,'p_superexpression','parser.py',425),
  ('superexpressionB -> AND push_operator superexpression','superexpressionB',3,'p_superexpressionB','parser.py',428),
  ('superexpressionB -> empty','superexpressionB',1,'p_superexpressionB','parser.py',429),
  ('expression -> exp expressionB','expression',2,'p_expression','parser.py',437),
  ('expressionB -> < push_operator exp','expressionB',3,'p_expressionB','parser.py',441),
  ('expressionB -> > push_operator exp','expressionB',3,'p_expressionB','parser.py',442),
  ('expressionB -> DIFF push_operator exp','expressionB',3,'p_expressionB','parser.py',443),
  ('expressionB -> EQ push_operator exp','expressionB',3,'p_expressionB','parser.py',444),
  ('expressionB -> LTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',445),
  ('expressionB -> GTEQ push_operator exp','expressionB',3,'p_expressionB','parser.py',446),
  ('expressionB -> empty','expressionB',1,'p_expressionB','parser.py',447),
  ('exp -> term seen_term expB','exp',3,'p_exp','parser.py',456),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',459),
  ('expB -> - push_operator exp','expB',3,'p_expB','parser.py',466),
  ('expB -> + push_operator exp','expB',3,'p_expB','parser.py',467),
  ('expB -> empty','expB',1,'p_expB','parser.py',468),
  ('term -> factor seen_factor termB','term',3,'p_term','parser.py',472),
  ('seen_factor -> <empty>','seen_factor',0,'p_seen_factor','parser.py',475),
  ('termB -> / push_operator term','termB',3,'p_termB','parser.py',481),
  ('termB -> * push_operator term','termB',3,'p_termB','parser.py',482),
  ('termB -> empty','termB',1,'p_termB','parser.py',483),
  ('factor -> signB constant','factor',2,'p_factor','parser.py',491),
  ('factor -> ( seen_parentheses hyperexpression )','factor',4,'p_factor','parser.py',492),
  ('factor -> funccall seen_factor_funccall','factor',2,'p_factor','parser.py',493),
  ('factor -> ID seen_ID dimensionsOpt','factor',3,'p_factor','parser.py',494),
  ('seen_factor_funccall -> <empty>','seen_factor_funccall',0,'p_seen_factor_funccall','parser.py',504),
  ('seen_parentheses -> <empty>','seen_parentheses',0,'p_seen_parentheses','parser.py',523),
  ('seen_ID -> <empty>','seen_ID',0,'p_seen_ID','parser.py',527),
  ('signB -> sign','signB',1,'p_signB','parser.py',545),
  ('signB -> empty','signB',1,'p_signB','parser.py',546),
  ('seen_fconst -> <empty>','seen_fconst',0,'p_seen_fconst','parser.py',551),
  ('seen_iconst -> <empty>','seen_iconst',0,'p_seen_iconst','parser.py',556),
  ('seen_sconst -> <empty>','seen_sconst',0,'p_seen_sconst','parser.py',561),
  ('seen_true -> <empty>','seen_true',0,'p_seen_true','parser.py',566),
  ('seen_false -> <empty>','seen_false',0,'p_seen_false','parser.py',571),
  ('constant -> FCONST seen_fconst','constant',2,'p_constant','parser.py',576),
  ('constant -> ICONST seen_iconst','constant',2,'p_constant','parser.py',577),
  ('constant -> SCONST seen_sconst','constant',2,'p_constant','parser.py',578),
  ('constant -> TRUE seen_true','constant',2,'p_constant','parser.py',579),
  ('constant -> FALSE seen_false','constant',2,'p_constant','parser.py',580),
  ('sign -> +','sign',1,'p_sign','parser.py',592),
  ('sign -> -','sign',1,'p_sign','parser.py',593),
  ('register_if -> IF','register_if',1,'p_register_if','parser.py',597),
  ('register_while -> WHILE','register_while',1,'p_register_while','parser.py',605),
  ('register_for -> FOR','register_for',1,'p_register_for','parser.py',613),
  ('whileloop -> register_while init_while ( hyperexpression ) while_quadruple block endwhile_quadruple','whileloop',8,'p_whileloop','parser.py',622),
  ('init_while -> <empty>','init_while',0,'p_init_while','parser.py',625),
  ('while_quadruple -> <empty>','while_quadruple',0,'p_while_quadruple','parser.py',629),
  ('endwhile_quadruple -> <empty>','endwhile_quadruple',0,'p_endwhile_quadruple','parser.py',641),
  ('type -> INT','type',1,'p_type','parser.py',652),
  ('type -> FLOAT','type',1,'p_type','parser.py',653),
  ('type -> STRING','type',1,'p_type','parser.py',654),
  ('type -> BOOL','type',1,'p_type','parser.py',655),
  ('returntype -> VOID','returntype',1,'p_returntype','parser.py',661),
  ('returntype -> type','returntype',1,'p_returntype','parser.py',662),
  ('forloop -> register_for ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple','forloop',13,'p_forloop','parser.py',667),
  ('for_quadruple -> <empty>','for_quadruple',0,'p_for_quadruple','parser.py',671),
  ('for_expression -> <empty>','for_expression',0,'p_for_expression','parser.py',686),
  ('endfor_quadruple -> <empty>','endfor_quadruple',0,'p_endfor_quadruple','parser.py',698),
  ('read -> READ ( validate_id push_operand read_quadruple readB )','read',7,'p_read','parser.py',708),
  ('validate_id -> ID','validate_id',1,'p_validate_id','parser.py',711),
  ('read_quadruple -> <empty>','read_quadruple',0,'p_read_quadruple','parser.py',719),
  ('readB -> , validate_id push_operand read_quadruple readB','readB',5,'p_readB','parser.py',726),
  ('readB -> empty','readB',1,'p_readB','parser.py',727),
  ('register_print_line -> PRINT','register_print_line',1,'p_register_print_line','parser.py',730),
  ('output -> register_print_line ( outputB','output',3,'p_output','parser.py',737),
  ('outputB -> hyperexpression print_quadruple outputC','outputB',3,'p_outputB','parser.py',740),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',743),
  ('outputC -> )','outputC',1,'p_outputC','parser.py',752),
  ('outputC -> , outputB','outputC',2,'p_outputC','parser.py',753),
  ('localvardirective -> # localvardirectiveB ID','localvardirective',3,'p_localvardirective','parser.py',757),
  ('localvardirectiveB -> TRACK','localvardirectiveB',1,'p_localvardirectiveB','parser.py',771),
  ('localvardirectiveB -> FORGET','localvardirectiveB',1,'p_localvardirectiveB','parser.py',772),
  ('localmsgdirective -> # SHOW SCONST','localmsgdirective',3,'p_localmsgdirective','parser.py',777),
  ('localdecisiondirective -> TRACKDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',782),
  ('localdecisiondirective -> FORGETDECISION','localdecisiondirective',1,'p_localdecisiondirective','parser.py',783),
  ('localdecisiondirective -> empty','localdecisiondirective',1,'p_localdecisiondirective','parser.py',784),
  ('funccall -> ID seen_a_factor_funccall ( funccallB funccallC','funccall',5,'p_funccall','parser.py',790),
  ('seen_a_factor_funccall -> <empty>','seen_a_factor_funccall',0,'p_seen_a_factor_funccall','parser.py',819),
  ('funccallB -> hyperexpression seen_param','funccallB',2,'p_funccallB','parser.py',827),
  ('funccallB -> empty','funccallB',1,'p_funccallB','parser.py',828),
  ('seen_param -> <empty>','seen_param',0,'p_seen_param','parser.py',832),
  ('funccallC -> , funccallB funccallC','funccallC',3,'p_funccallC','parser.py',850),
  ('funccallC -> )','funccallC',1,'p_funccallC','parser.py',851),
  ('seen_dimensionx -> <empty>','seen_dimensionx',0,'p_seen_dimensionx','parser.py',861),
  ('seen_dimensiony -> <empty>','seen_dimensiony',0,'p_seen_dimensiony','parser.py',877),
  ('dimensions -> [ hyperexpression seen_dimensionx ] dimensionsB','dimensions',5,'p_dimensions','parser.py',895),
  ('dimensionsB -> [ hyperexpression seen_dimensiony ]','dimensionsB',4,'p_dimensionsB','parser.py',899),
  ('dimensionsB -> empty','dimensionsB',1,'p_dimensionsB','parser.py',900),
  ('return -> RETURN hyperexpression','return',2,'p_return','parser.py',905),
  ('return_quadruple -> <empty>','return_quadruple',0,'p_return_quadruple','parser.py',924),
  ('params -> type ID','params',2,'p_params','parser.py',943),
  ('paramsB -> , params paramsB','paramsB',3,'p_paramsB','parser.py',955),
  ('paramsB -> empty','paramsB',1,'p_paramsB','parser.py',956),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',959),
]
