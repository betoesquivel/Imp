INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 22
DEBUG:root:
DEBUG:root:State  : 22
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 26
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',3,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',3,12)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',3,16)
DEBUG:root:Action : Shift and goto state 43
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',3,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 92
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 44
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',3,21)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',3,25)
DEBUG:root:Action : Shift and goto state 116
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',3,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',3,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 29
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',3,26)
DEBUG:root:Action : Shift and goto state 199
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',3,28)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def',None,'algo','(',None,')'] and goto state 27
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt func . LexToken({,'{',3,28)
DEBUG:root:Action : Shift and goto state 41
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt func { . LexToken(INT,'int',4,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt func { INT . LexToken(ID,'a',4,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 88
INFO:root:Result : <str @ 0x1009e8530> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt func { type . LexToken(ID,'a',4,36)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt func { type ID . LexToken(=,'=',4,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { type ID empty . LexToken(=,'=',4,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt . LexToken(=,'=',4,38)
DEBUG:root:Action : Shift and goto state 78
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = . LexToken(ID,'b',4,40)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = ID . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = ID empty . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 131
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 78
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = factor . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = factor empty . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = factor termB . LexToken(+,'+',4,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term . LexToken(+,'+',4,42)
DEBUG:root:Action : Shift and goto state 132
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + . LexToken(ID,'a',4,44)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + ID . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + ID empty . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 131
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 78
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + factor . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + factor empty . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + factor termB . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + term . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + term empty . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 70
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + term expB . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term + exp . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 69
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = term expB . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = exp . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = exp empty . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 66
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = exp expressionB . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = expression . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = expression empty . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 58
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',4,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 55
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = superexpression . LexToken(;,';',4,45)
DEBUG:root:Action : Shift and goto state 166
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = superexpression ; . LexToken(INT,'int',5,49)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 165
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt = superexpression declarationD . LexToken(INT,'int',5,49)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt func { type ID dimensionsOpt declarationC . LexToken(INT,'int',5,49)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['a',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt func { type declarationB . LexToken(INT,'int',5,49)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with ['int',None] and goto state 18
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt func { declaration . LexToken(INT,'int',5,49)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt func { instruction . LexToken(INT,'int',5,49)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt func { instruction INT . LexToken(ID,'a',5,53)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 88
INFO:root:Result : <str @ 0x1009e8508> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt func { instruction type . LexToken(ID,'a',5,53)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID . LexToken(=,'=',5,55)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID empty . LexToken(=,'=',5,55)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt . LexToken(=,'=',5,55)
DEBUG:root:Action : Shift and goto state 78
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = . LexToken(ICONST,'23',5,57)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 88
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = empty . LexToken(ICONST,'23',5,57)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 80
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = signB . LexToken(ICONST,'23',5,57)
DEBUG:root:Action : Shift and goto state 121
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = signB ICONST . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['23'] and goto state 82
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = signB constant . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 75
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = factor . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = factor empty . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = factor termB . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = term . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = term empty . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 70
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = term expB . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = exp . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = exp empty . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 66
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = exp expressionB . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = expression . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = expression empty . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 58
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',5,59)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 55
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = superexpression . LexToken(;,';',5,59)
DEBUG:root:Action : Shift and goto state 166
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = superexpression ; . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 165
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt = superexpression declarationD . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt func { instruction type ID dimensionsOpt declarationC . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['a',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt func { instruction type declarationB . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with ['int',None] and goto state 18
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt func { instruction declaration . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt func { instruction instruction . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 61
DEBUG:root:Stack  : config declarationsOpt func { instruction instruction empty . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 32
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt func { instruction instruction instructionsOpt . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt func { instruction instructionsOpt . LexToken(},'}',6,61)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt . LexToken(},'}',6,61)
DEBUG:root:Action : Shift and goto state 107
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt } . LexToken(MAIN,'main',8,64)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 30
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt func block . LexToken(MAIN,'main',8,64)
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt suprafunc . LexToken(MAIN,'main',8,64)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt suprafunc empty . LexToken(MAIN,'main',8,64)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt suprafunc funcsOpt . LexToken(MAIN,'main',8,64)
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',8,64)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',8,68)
DEBUG:root:Action : Shift and goto state 50
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',8,69)
DEBUG:root:Action : Shift and goto state 95
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',8,71)
DEBUG:root:Action : Shift and goto state 41
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',9,75)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',9,79)
DEBUG:root:Action : Shift and goto state 110
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',9,80)
DEBUG:root:Action : Shift and goto state 156
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',9,81)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 112
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',9,81)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 50
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',9,81)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 49
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 53
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',9,81)
DEBUG:root:Action : Shift and goto state 97
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',10,83)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 40
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',10,83)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 61
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',10,83)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 32
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',10,83)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',10,83)
DEBUG:root:Action : Shift and goto state 107
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',12,86)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 30
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 145
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',12,86)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',12,86)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',12,90)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',12,94)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 88
INFO:root:Result : <str @ 0x1009e8580> ('int')
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',12,94)
INFO:root:Action : Reduce rule [returntype -> type] with ['int'] and goto state 93
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 44
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',12,94)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',12,99)
DEBUG:root:Action : Shift and goto state 116
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',12,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',12,100)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 29
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',12,100)
DEBUG:root:Action : Shift and goto state 199
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',12,102)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def',None,'algo2','(',None,')'] and goto state 27
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . LexToken({,'{',12,102)
DEBUG:root:Action : Shift and goto state 41
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { . LexToken(ID,'x',13,106)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID . LexToken(=,'=',13,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID empty . LexToken(=,'=',13,108)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt . LexToken(=,'=',13,108)
DEBUG:root:Action : Shift and goto state 158
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = . LexToken(ID,'b',13,110)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = ID . LexToken(*,'*',13,112)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = ID empty . LexToken(*,'*',13,112)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 131
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',13,112)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 78
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor . LexToken(*,'*',13,112)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * . LexToken(ICONST,'2',13,114)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 88
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',13,114)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 80
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',13,114)
DEBUG:root:Action : Shift and goto state 121
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 82
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * signB constant . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 75
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * factor . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * factor empty . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * factor termB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 168
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor * term . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 73
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = factor termB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = term . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = term empty . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 70
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = term expB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = exp . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = exp empty . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 66
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = exp expressionB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = expression . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = expression empty . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 58
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 55
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID dimensionsOpt = superexpression . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 34
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID assignB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 51
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { ID assignfunccallB . LexToken(;,';',13,115)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 49
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 53
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { assignfunccall . LexToken(;,';',13,115)
DEBUG:root:Action : Shift and goto state 97
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { assignfunccall ; . LexToken(IF,'if',14,119)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 40
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction . LexToken(IF,'if',14,119)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF . LexToken((,'(',14,122)
DEBUG:root:Action : Shift and goto state 113
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( . LexToken(ID,'oneVar',14,124)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( ID . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( ID empty . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 36
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 131
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( ID dimensionsOpt . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['oneVar',None] and goto state 78
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( factor . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( factor empty . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( factor termB . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( term . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( term empty . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 70
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( term expB . LexToken(<,'<',14,131)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp . LexToken(<,'<',14,131)
DEBUG:root:Action : Shift and goto state 138
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < . LexToken(ICONST,'3',14,133)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 88
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < empty . LexToken(ICONST,'3',14,133)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 80
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < signB . LexToken(ICONST,'3',14,133)
DEBUG:root:Action : Shift and goto state 121
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < signB ICONST . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 82
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < signB constant . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 75
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < factor . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < factor empty . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 74
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < factor termB . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < term . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < term empty . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 70
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < term expB . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp < exp . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 60
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( exp expressionB . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( expression . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( expression empty . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 58
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( expression superexpressionB . LexToken(),')',14,135)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 55
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 159
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression . LexToken(),')',14,135)
DEBUG:root:Action : Shift and goto state 198
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) . LexToken({,'{',14,137)
DEBUG:root:Action : Shift and goto state 41
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) { . LexToken(},'}',15,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 61
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) { empty . LexToken(},'}',15,141)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 32
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) { instructionsOpt . LexToken(},'}',15,141)
DEBUG:root:Action : Shift and goto state 107
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) { instructionsOpt } . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 30
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) block . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 226
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) block empty . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [else -> empty] with [None] and goto state 39
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction IF ( superexpression ) block else . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [condition -> IF ( superexpression ) block else] with ['if','(',None,')',None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction condition . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 45
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction instruction . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 61
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction instruction empty . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 32
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction instruction instructionsOpt . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instruction instructionsOpt . LexToken(},'}',16,143)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instructionsOpt . LexToken(},'}',16,143)
DEBUG:root:Action : Shift and goto state 107
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 30
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func block . $end
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main suprafunc . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 122
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main suprafunc empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main suprafunc funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x1006da7f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x1006da7f8> (None)
INFO:root:PLY: PARSE DEBUG END
