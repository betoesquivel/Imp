INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [config -> empty] with [''] and goto state 3
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [''] and goto state 17
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,0)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,0)
DEBUG:root:Action : Shift and goto state 38
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,4)
DEBUG:root:Action : Shift and goto state 47
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,5)
DEBUG:root:Action : Shift and goto state 80
DEBUG:root:
DEBUG:root:State  : 80
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,7)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(INT,'int',2,11)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { INT . LexToken(ID,'b',2,15)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x1091b2648> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type . LexToken(ID,'b',2,15)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type . LexToken(ID,'b',2,15)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type ID . LexToken(=,'=',2,17)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type ID push_operand . LexToken(=,'=',2,17)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type ID push_operand empty . LexToken(=,'=',2,17)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type ID push_operand dimensionsOpt . LexToken(=,'=',2,17)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['b',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB . LexToken(=,'=',2,17)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = . LexToken(ICONST,'8',2,19)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator . LexToken(ICONST,'8',2,19)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator empty . LexToken(ICONST,'8',2,19)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator signB . LexToken(ICONST,'8',2,19)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator signB ICONST . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator signB ICONST seen_iconst . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 102
INFO:root:Result : <str @ 0x109106058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator signB constant . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator factor . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator factor seen_factor . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator factor seen_factor empty . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator factor seen_factor termB . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator term . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator term seen_term . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator term seen_term empty . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator term seen_term expB . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator exp . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator exp empty . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator exp expressionB . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator expression . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator expression empty . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator expression superexpressionB . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator superexpression . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator superexpression empty . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator hyperexpression . LexToken(;,';',2,20)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',2,20)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(INT,'int',3,23)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(INT,'int',3,23)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { type push_type declarationB declarationC . LexToken(INT,'int',3,23)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { declaration . LexToken(INT,'int',3,23)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 52
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(INT,'int',3,23)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction INT . LexToken(ID,'x',3,27)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x1091b2670> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type . LexToken(ID,'x',3,27)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type . LexToken(ID,'x',3,27)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type ID . LexToken(,,',',3,28)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type ID push_operand . LexToken(,,',',3,28)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type ID push_operand empty . LexToken(,,',',3,28)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type ID push_operand dimensionsOpt . LexToken(,,',',3,28)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['x',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB . LexToken(,,',',3,28)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , . LexToken(ID,'y',3,30)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type . LexToken(ID,'y',3,30)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type ID . LexToken(,,',',3,31)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type ID push_operand . LexToken(,,',',3,31)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type ID push_operand empty . LexToken(,,',',3,31)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(,,',',3,31)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['y',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 165
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB . LexToken(,,',',3,31)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , . LexToken(ID,'z',3,33)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type . LexToken(ID,'z',3,33)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type ID . LexToken(;,';',3,34)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand . LexToken(;,';',3,34)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand empty . LexToken(;,';',3,34)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(;,';',3,34)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['z',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 165
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB . LexToken(;,';',3,34)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB ; . LexToken(ID,'z',5,38)
INFO:root:Action : Reduce rule [declarationC -> ;] with [';'] and goto state 27
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB declarationC . LexToken(ID,'z',5,38)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB , repush_type declarationB declarationC . LexToken(ID,'z',5,38)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction type push_type declarationB declarationC . LexToken(ID,'z',5,38)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction declaration . LexToken(ID,'z',5,38)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 52
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction . LexToken(ID,'z',5,38)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID . LexToken(=,'=',5,40)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand . LexToken(=,'=',5,40)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand empty . LexToken(=,'=',5,40)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt . LexToken(=,'=',5,40)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = . LexToken(ID,'b',5,42)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator . LexToken(ID,'b',5,42)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator ID . LexToken(*,'*',5,44)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(*,'*',5,44)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(*,'*',5,44)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(*,'*',5,44)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',5,44)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',5,44)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'1',5,46)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'1',5,46)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'1',5,46)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'1',5,46)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 102
INFO:root:Result : <str @ 0x10904c418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand assignB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID push_operand assignfunccallB . LexToken(;,';',5,47)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['z',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction assignfunccall . LexToken(;,';',5,47)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction assignfunccall ; . LexToken(ID,'x',7,52)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction . LexToken(ID,'x',7,52)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID . LexToken(=,'=',7,54)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand . LexToken(=,'=',7,54)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand empty . LexToken(=,'=',7,54)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt . LexToken(=,'=',7,54)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = . LexToken(ID,'b',7,56)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator . LexToken(ID,'b',7,56)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID . LexToken(*,'*',7,58)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(*,'*',7,58)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(*,'*',7,58)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(*,'*',7,58)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',7,58)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',7,58)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'3',7,60)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'3',7,60)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'3',7,60)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'3',7,60)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(*,'*',7,62)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(*,'*',7,62)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2f58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(*,'*',7,62)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(*,'*',7,62)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(*,'*',7,62)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * . LexToken(ICONST,'4',7,64)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator . LexToken(ICONST,'4',7,64)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'4',7,64)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'4',7,64)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',7,66)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',7,66)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2fd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',7,66)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor . LexToken(/,'/',7,66)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',7,66)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'4',7,68)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'4',7,68)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'4',7,68)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'4',7,68)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2fd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator term . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand assignB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction ID push_operand assignfunccallB . LexToken(;,';',7,69)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['x',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction assignfunccall . LexToken(;,';',7,69)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction assignfunccall ; . LexToken(INT,'int',8,73)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction . LexToken(INT,'int',8,73)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction INT . LexToken(ID,'a',8,77)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x1091b2698> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type . LexToken(ID,'a',8,77)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type . LexToken(ID,'a',8,77)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type ID . LexToken(=,'=',8,79)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type ID push_operand . LexToken(=,'=',8,79)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type ID push_operand empty . LexToken(=,'=',8,79)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type ID push_operand dimensionsOpt . LexToken(=,'=',8,79)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['a',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB . LexToken(=,'=',8,79)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = . LexToken(ICONST,'2',8,81)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator . LexToken(ICONST,'2',8,81)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator empty . LexToken(ICONST,'2',8,81)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator signB . LexToken(ICONST,'2',8,81)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator signB ICONST . LexToken(/,'/',8,83)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator signB ICONST seen_iconst . LexToken(/,'/',8,83)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x109076f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator signB constant . LexToken(/,'/',8,83)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor . LexToken(/,'/',8,83)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor . LexToken(/,'/',8,83)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / . LexToken(ICONST,'3',8,85)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator . LexToken(ICONST,'3',8,85)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'3',8,85)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'3',8,85)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB ICONST . LexToken(*,'*',8,87)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(*,'*',8,87)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2f58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB constant . LexToken(*,'*',8,87)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor . LexToken(*,'*',8,87)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor . LexToken(*,'*',8,87)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * . LexToken(ID,'x',8,89)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator . LexToken(ID,'x',8,89)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID dimensionsOpt . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['x','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator term . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator term . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor termB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator term . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term expB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator exp . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator exp empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator exp expressionB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator expression . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator expression empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator expression superexpressionB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression empty . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression . LexToken(;,';',8,90)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',8,90)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(IF,'if',9,93)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(IF,'if',9,93)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction type push_type declarationB declarationC . LexToken(IF,'if',9,93)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction declaration . LexToken(IF,'if',9,93)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 52
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction . LexToken(IF,'if',9,93)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF . LexToken((,'(',9,96)
DEBUG:root:Action : Shift and goto state 108
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( . LexToken(ID,'a',9,97)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( ID . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( ID seen_ID . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( ID seen_ID empty . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( ID seen_ID dimensionsOpt . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( factor . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( factor seen_factor . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( factor seen_factor empty . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( factor seen_factor termB . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( term . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( term seen_term . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( term seen_term empty . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( term seen_term expB . LexToken(>,'>',9,99)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp . LexToken(>,'>',9,99)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > . LexToken(ID,'b',9,101)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 191
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator . LexToken(ID,'b',9,101)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator ID . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID empty . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID dimensionsOpt . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator factor . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor empty . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor termB . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term . LexToken(+,'+',9,102)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term . LexToken(+,'+',9,102)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + . LexToken(ID,'a',9,103)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator . LexToken(ID,'a',9,103)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID . LexToken(/,'/',9,104)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID . LexToken(/,'/',9,104)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID empty . LexToken(/,'/',9,104)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID dimensionsOpt . LexToken(/,'/',9,104)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor . LexToken(/,'/',9,104)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor . LexToken(/,'/',9,104)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / . LexToken(ICONST,'2',9,105)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator . LexToken(ICONST,'2',9,105)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'2',9,105)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'2',9,105)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB ICONST . LexToken(*,'*',9,106)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(*,'*',9,106)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x109076f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB constant . LexToken(*,'*',9,106)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor . LexToken(*,'*',9,106)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor . LexToken(*,'*',9,106)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * . LexToken(ICONST,'5',9,107)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator . LexToken(ICONST,'5',9,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'5',9,107)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'5',9,107)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',9,108)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',9,108)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['5','int'] and goto state 102
INFO:root:Result : <str @ 0x109076e90> ('5')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',9,108)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','5'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor . LexToken(/,'/',9,108)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',9,108)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'8',9,109)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'8',9,109)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'8',9,109)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'8',9,109)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 102
INFO:root:Result : <str @ 0x109106058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator term . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator term . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor termB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term empty . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term expB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator exp . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term expB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp > push_operator exp . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [expressionB -> > push_operator exp] with ['>',None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( exp expressionB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( expression . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( expression empty . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( expression superexpressionB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( superexpression . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( superexpression empty . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( superexpression hyperexpressionB . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 159
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression . LexToken(),')',9,110)
INFO:root:Action : Reduce rule [condition_quadruple -> <empty>] with [] and goto state 45
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 201
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple . LexToken(),')',9,110)
DEBUG:root:Action : Shift and goto state 237
DEBUG:root:
DEBUG:root:State  : 237
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) . LexToken({,'{',9,112)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { . LexToken(ID,'x',10,115)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand empty . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt . LexToken(=,'=',10,116)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = . LexToken(ID,'a',10,117)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator . LexToken(ID,'a',10,117)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator ID . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand assignB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID push_operand assignfunccallB . LexToken(;,';',10,118)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['x',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { assignfunccall . LexToken(;,';',10,118)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { assignfunccall ; . LexToken(IF,'if',11,123)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction . LexToken(IF,'if',11,123)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF . LexToken((,'(',11,126)
DEBUG:root:Action : Shift and goto state 108
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( . LexToken(ID,'b',11,127)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID empty . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID dimensionsOpt . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor empty . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor termB . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term empty . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term expB . LexToken(<,'<',11,128)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp . LexToken(<,'<',11,128)
DEBUG:root:Action : Shift and goto state 139
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < . LexToken(ID,'a',11,129)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator . LexToken(ID,'a',11,129)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID empty . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID dimensionsOpt . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor empty . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor termB . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term empty . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term expB . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 224
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator exp . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [expressionB -> < push_operator exp] with ['<',None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp expressionB . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression empty . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression superexpressionB . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression empty . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression hyperexpressionB . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 159
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression . LexToken(),')',11,130)
INFO:root:Action : Reduce rule [condition_quadruple -> <empty>] with [] and goto state 45
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 201
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple . LexToken(),')',11,130)
DEBUG:root:Action : Shift and goto state 237
DEBUG:root:
DEBUG:root:State  : 237
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) . LexToken({,'{',11,131)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { . LexToken(ID,'x',12,136)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID . LexToken(=,'=',12,137)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand . LexToken(=,'=',12,137)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand empty . LexToken(=,'=',12,137)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt . LexToken(=,'=',12,137)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = . LexToken(ICONST,'2',12,138)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator . LexToken(ICONST,'2',12,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'2',12,138)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'2',12,138)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator signB ICONST . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x109076f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator signB constant . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand assignB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID push_operand assignfunccallB . LexToken(;,';',12,139)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['x',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { assignfunccall . LexToken(;,';',12,139)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { assignfunccall ; . LexToken(},'}',13,144)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction . LexToken(},'}',13,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction empty . LexToken(},'}',13,144)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction instructionsOpt . LexToken(},'}',13,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt . LexToken(},'}',13,144)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt } . LexToken(ELSE,'else',14,149)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 260
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block . LexToken(ELSE,'else',14,149)
DEBUG:root:Action : Shift and goto state 271
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE . LexToken({,'{',14,154)
INFO:root:Action : Reduce rule [elsecondition_quadruple -> <empty>] with [] and goto state 46
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 280
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple . LexToken({,'{',14,154)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { . LexToken(ID,'x',15,159)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID . LexToken(=,'=',15,160)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand . LexToken(=,'=',15,160)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand empty . LexToken(=,'=',15,160)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt . LexToken(=,'=',15,160)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = . LexToken(ICONST,'3',15,161)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator . LexToken(ICONST,'3',15,161)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'3',15,161)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'3',15,161)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator signB ICONST . LexToken(*,'*',15,162)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(*,'*',15,162)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2f58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator signB constant . LexToken(*,'*',15,162)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',15,162)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',15,162)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'5',15,163)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'5',15,163)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'5',15,163)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'5',15,163)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['5','int'] and goto state 102
INFO:root:Result : <str @ 0x109076e90> ('5')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','5'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand assignB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand assignfunccallB . LexToken(;,';',15,164)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['x',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall . LexToken(;,';',15,164)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall ; . LexToken(},'}',16,176)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction . LexToken(},'}',16,176)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction empty . LexToken(},'}',16,176)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction instructionsOpt . LexToken(},'}',16,176)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt . LexToken(},'}',16,176)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt } . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 286
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple block . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [else -> ELSE elsecondition_quadruple block] with ['else',None,None] and goto state 43
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 273
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block else . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [endcondition_quadruple -> <empty>] with [] and goto state 47
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple] with ['if','(',None,None,')',None,None,None] and goto state 42
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 69
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction condition . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 53
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction empty . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction instructionsOpt . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instructionsOpt . LexToken(},'}',17,181)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt . LexToken(},'}',17,181)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt } . LexToken(ELSE,'else',18,184)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 260
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block . LexToken(ELSE,'else',18,184)
DEBUG:root:Action : Shift and goto state 271
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE . LexToken({,'{',18,189)
INFO:root:Action : Reduce rule [elsecondition_quadruple -> <empty>] with [] and goto state 46
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 280
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple . LexToken({,'{',18,189)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { . LexToken(ID,'x',19,192)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID . LexToken(=,'=',19,193)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand . LexToken(=,'=',19,193)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand empty . LexToken(=,'=',19,193)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt . LexToken(=,'=',19,193)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = . LexToken(ID,'b',19,194)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator . LexToken(ID,'b',19,194)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator ID . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand assignB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID push_operand assignfunccallB . LexToken(;,';',19,195)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['x',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall . LexToken(;,';',19,195)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall ; . LexToken(},'}',20,198)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction . LexToken(},'}',20,198)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction empty . LexToken(},'}',20,198)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction instructionsOpt . LexToken(},'}',20,198)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt . LexToken(},'}',20,198)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt } . LexToken(ID,'b',21,202)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 286
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple block . LexToken(ID,'b',21,202)
INFO:root:Action : Reduce rule [else -> ELSE elsecondition_quadruple block] with ['else',None,None] and goto state 43
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 273
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block else . LexToken(ID,'b',21,202)
INFO:root:Action : Reduce rule [endcondition_quadruple -> <empty>] with [] and goto state 47
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple . LexToken(ID,'b',21,202)
INFO:root:Action : Reduce rule [condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple] with ['if','(',None,None,')',None,None,None] and goto state 42
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 69
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction condition . LexToken(ID,'b',21,202)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 53
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction . LexToken(ID,'b',21,202)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID . LexToken(=,'=',21,204)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand . LexToken(=,'=',21,204)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand empty . LexToken(=,'=',21,204)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt . LexToken(=,'=',21,204)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = . LexToken(ID,'a',21,206)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator . LexToken(ID,'a',21,206)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term . LexToken(+,'+',21,207)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(+,'+',21,207)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + . LexToken(ICONST,'2',21,208)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator . LexToken(ICONST,'2',21,208)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator empty . LexToken(ICONST,'2',21,208)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB . LexToken(ICONST,'2',21,208)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST . LexToken(*,'*',21,209)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST seen_iconst . LexToken(*,'*',21,209)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x109076f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB constant . LexToken(*,'*',21,209)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor . LexToken(*,'*',21,209)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor . LexToken(*,'*',21,209)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * . LexToken(ICONST,'4',21,210)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator . LexToken(ICONST,'4',21,210)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'4',21,210)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'4',21,210)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',21,211)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',21,211)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 102
INFO:root:Result : <str @ 0x1090f2fd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',21,211)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor . LexToken(/,'/',21,211)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',21,211)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'2',21,212)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'2',21,212)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'2',21,212)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'2',21,212)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x108fe03c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x109076f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator term . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor termB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term empty . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term expB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term + push_operator exp . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand assignB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction ID push_operand assignfunccallB . LexToken(;,';',21,213)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['b',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction assignfunccall . LexToken(;,';',21,213)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction assignfunccall ; . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instruction . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instruction empty . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',22,217)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',22,217)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 118
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . $end
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 30
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x108fe0508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x108f417f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x108f417f8> (None)
INFO:root:PLY: PARSE DEBUG END
