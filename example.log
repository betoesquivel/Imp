INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . error
ERROR:root:Error  : config declarationsOpt DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . error
ERROR:root:Error  : config declarationsOpt DEF . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . $end
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x1090127f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x1090127f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 149
DEBUG:root:
DEBUG:root:State  : 149
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 149
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . error
ERROR:root:Error  : config declarationsOpt DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . error
ERROR:root:Error  : config declarationsOpt DEF . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 163
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction } . $end
INFO:root:Action : Reduce rule [instructionsOpt -> }] with ['}'] and goto state 31
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . $end
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt] with ['{',None] and goto state 29
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . $end
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10e2917f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10e2917f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . error
ERROR:root:Error  : config declarationsOpt DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . error
ERROR:root:Error  : config declarationsOpt DEF . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(FLOAT,'float',1,92)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { FLOAT . LexToken(ID,'x',1,98)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 88
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'x',1,98)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,100)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,100)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,102)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(*,'*',1,104)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,106)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,106)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,106)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * term . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x102d667f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,107)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,109)
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,109)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF . error
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . error
ERROR:root:Error  : config declarationsOpt funcsOpt main . error
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . $end
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . error
ERROR:root:Error  : config declarationsOpt DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . error
ERROR:root:Error  : config declarationsOpt DEF . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(FLOAT,'float',1,92)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { FLOAT . LexToken(ID,'x',1,98)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 88
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'x',1,98)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,100)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,100)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,102)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,104)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(*,'*',1,104)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,106)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,106)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,106)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor * term . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,107)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10f9d07f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,107)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(IF,'if',1,111)
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(IF,'if',1,111)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . error
ERROR:root:Error  : config declarationsOpt funcsOpt main DEF . error
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . error
ERROR:root:Error  : config declarationsOpt funcsOpt main . error
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . error
ERROR:root:Error  : config declarationsOpt funcsOpt . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken((,'(',1,114)
ERROR:root:Error  : . LexToken((,'(',1,114)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(ID,'oneVar',1,116)
ERROR:root:Error  : . LexToken(ID,'oneVar',1,116)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(<,'<',1,123)
ERROR:root:Error  : . LexToken(<,'<',1,123)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(ICONST,'3',1,125)
ERROR:root:Error  : . LexToken(ICONST,'3',1,125)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(),')',1,127)
ERROR:root:Error  : . LexToken(),')',1,127)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken({,'{',1,129)
ERROR:root:Error  : . LexToken({,'{',1,129)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(ID,'x',1,135)
ERROR:root:Error  : . LexToken(ID,'x',1,135)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(=,'=',1,137)
ERROR:root:Error  : . LexToken(=,'=',1,137)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(ICONST,'2',1,139)
ERROR:root:Error  : . LexToken(ICONST,'2',1,139)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(*,'*',1,141)
ERROR:root:Error  : . LexToken(*,'*',1,141)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(ICONST,'2',1,143)
ERROR:root:Error  : . LexToken(ICONST,'2',1,143)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(;,';',1,144)
ERROR:root:Error  : . LexToken(;,';',1,144)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(},'}',1,148)
ERROR:root:Error  : . LexToken(},'}',1,148)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(},'}',1,150)
ERROR:root:Error  : . LexToken(},'}',1,150)
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . $end
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . error
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . error
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . error
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . error
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . error
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . error
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . error
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt ) . error
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( paramsOpt . error
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID ( . error
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . error
ERROR:root:Error  : config declarationsOpt DEF returntype ID . error
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . error
ERROR:root:Error  : config declarationsOpt DEF returntype . error
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . error
ERROR:root:Error  : config declarationsOpt DEF . error
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . error
ERROR:root:Error  : config declarationsOpt . error
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . error
ERROR:root:Error  : config . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . error
ERROR:root:Error  : . error
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(ID,'x',1,92)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID empty . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt . LexToken(=,'=',1,94)
DEBUG:root:Action : Shift and goto state 198
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = . LexToken(ID,'b',1,96)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID empty . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor . LexToken(*,'*',1,98)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,100)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term expB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignfunccallB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall . LexToken(;,';',1,101)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall ; . LexToken(IF,'if',1,105)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction . LexToken(IF,'if',1,105)
DEBUG:root:Action : Shift and goto state 143
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF . LexToken((,'(',1,108)
DEBUG:root:Action : Shift and goto state 179
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( . LexToken(ID,'oneVar',1,110)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID dimensionsOpt . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['oneVar',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor termB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term expB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp . LexToken(<,'<',1,117)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < empty . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB . LexToken(ICONST,'3',1,119)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB ICONST . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB constant . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor termB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term expB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < exp . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp expressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression superexpressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression . LexToken(),')',1,121)
DEBUG:root:Action : Shift and goto state 213
DEBUG:root:
DEBUG:root:State  : 213
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) . LexToken({,'{',1,123)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { . LexToken(ID,'x',1,129)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID empty . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt . LexToken(=,'=',1,131)
DEBUG:root:Action : Shift and goto state 198
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = empty . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB . LexToken(ICONST,'2',1,133)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB ICONST . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB constant . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor . LexToken(*,'*',1,135)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,137)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term expB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignfunccallB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall . LexToken(;,';',1,138)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall ; . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction empty . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction instructionsOpt . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt . LexToken(},'}',1,142)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt } . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 221
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 227
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [else -> empty] with [None] and goto state 38
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 226
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block else . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [condition -> IF ( superexpression ) block else] with ['if','(',None,')',None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction condition . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,144)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) block . $end
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo2','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10a1197f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10a1197f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression declarationD . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt declarationC . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['a',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type declarationB . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with [None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { declaration . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 43
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction empty . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,47)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt } . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) block . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt func . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt func empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt func funcsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 175
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(ID,'x',1,92)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID empty . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt . LexToken(=,'=',1,94)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = . LexToken(ID,'b',1,96)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID empty . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor . LexToken(*,'*',1,98)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,100)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term expB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignfunccallB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall . LexToken(;,';',1,101)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall ; . LexToken(IF,'if',1,105)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction . LexToken(IF,'if',1,105)
DEBUG:root:Action : Shift and goto state 143
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF . LexToken((,'(',1,108)
DEBUG:root:Action : Shift and goto state 178
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( . LexToken(ID,'oneVar',1,110)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID dimensionsOpt . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['oneVar',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor termB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term expB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp . LexToken(<,'<',1,117)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < empty . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB . LexToken(ICONST,'3',1,119)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB ICONST . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB constant . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor termB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term expB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < exp . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp expressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression superexpressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression . LexToken(),')',1,121)
DEBUG:root:Action : Shift and goto state 212
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) . LexToken({,'{',1,123)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { . LexToken(ID,'x',1,129)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID empty . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt . LexToken(=,'=',1,131)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = empty . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB . LexToken(ICONST,'2',1,133)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB ICONST . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB constant . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor . LexToken(*,'*',1,135)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,137)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term expB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignfunccallB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall . LexToken(;,';',1,138)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall ; . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction empty . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction instructionsOpt . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt . LexToken(},'}',1,142)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt } . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 220
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 226
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [else -> empty] with [None] and goto state 38
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block else . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [condition -> IF ( superexpression ) block else] with ['if','(',None,')',None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction condition . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,144)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) block . $end
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo2','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10cd137f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10cd137f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DECISIONSCONFIG,'#decisions',1,11)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DECISIONSCONFIG,'#decisions',1,11)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DECISIONSCONFIG,'#decisions',1,11)
DEBUG:root:Action : Shift and goto state 1
DEBUG:root:
DEBUG:root:State  : 1
DEBUG:root:Stack  : configdirective DECISIONSCONFIG . LexToken(=,'=',1,21)
DEBUG:root:Action : Shift and goto state 8
DEBUG:root:
DEBUG:root:State  : 8
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = . LexToken(ALL,'ALL',1,22)
DEBUG:root:Action : Shift and goto state 20
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = ALL . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [options -> ALL] with ['ALL'] and goto state 8
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 24
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = options . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [configdirective -> DECISIONSCONFIG = options] with ['#decisions','=',None] and goto state 5
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective configdirective . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective configdirective empty . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective configdirective config . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(INT,'int',1,27)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(INT,'int',1,27)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config INT . LexToken(ID,'cont',1,31)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config type . LexToken(ID,'cont',1,31)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config type ID . LexToken(=,'=',1,36)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type ID empty . LexToken(=,'=',1,36)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config type ID dimensionsOpt . LexToken(=,'=',1,36)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config type ID dimensionsOpt = . LexToken(ICONST,'0',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config type ID dimensionsOpt = empty . LexToken(ICONST,'0',1,38)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config type ID dimensionsOpt = signB . LexToken(ICONST,'0',1,38)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config type ID dimensionsOpt = signB ICONST . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['0'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config type ID dimensionsOpt = signB constant . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config type ID dimensionsOpt = factor . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config type ID dimensionsOpt = factor empty . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config type ID dimensionsOpt = factor termB . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config type ID dimensionsOpt = term . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type ID dimensionsOpt = term empty . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config type ID dimensionsOpt = term expB . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config type ID dimensionsOpt = exp . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config type ID dimensionsOpt = exp empty . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type ID dimensionsOpt = exp expressionB . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config type ID dimensionsOpt = expression . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config type ID dimensionsOpt = expression empty . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config type ID dimensionsOpt = expression superexpressionB . LexToken(,,',',1,39)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression . LexToken(,,',',1,39)
DEBUG:root:Action : Shift and goto state 102
DEBUG:root:
DEBUG:root:State  : 102
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , . LexToken(ID,'cont2',1,41)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID . LexToken(=,'=',1,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID empty . LexToken(=,'=',1,47)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt . LexToken(=,'=',1,47)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = . LexToken(ICONST,'1',1,49)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = empty . LexToken(ICONST,'1',1,49)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = signB . LexToken(ICONST,'1',1,49)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = signB ICONST . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['1'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = signB constant . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = factor . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = factor empty . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = factor termB . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = term . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = term empty . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = term expB . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = exp . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = exp empty . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = exp expressionB . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = expression . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = expression empty . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,50)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = superexpression . LexToken(;,';',1,50)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = superexpression ; . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt = superexpression declarationD . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , ID dimensionsOpt declarationC . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['cont2',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 150
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression , declarationB . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationD -> , declarationB] with [',',None] and goto state 23
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config type ID dimensionsOpt = superexpression declarationD . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config type ID dimensionsOpt declarationC . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['cont',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config type declarationB . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with [None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 18
DEBUG:root:Stack  : config declaration . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config declaration empty . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declaration declarationsOpt . LexToken(DEF,'def',1,53)
INFO:root:Action : Reduce rule [declarationsOpt -> declaration declarationsOpt] with [None,None] and goto state 16
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,53)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(INT,'int',1,57)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF INT . LexToken(ID,'sum',1,61)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt DEF type . LexToken(ID,'sum',1,61)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'sum',1,61)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,64)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(FLOAT,'float',1,65)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( FLOAT . LexToken(ID,'a',1,71)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 88
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 101
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type . LexToken(ID,'a',1,71)
DEBUG:root:Action : Shift and goto state 149
DEBUG:root:
DEBUG:root:State  : 149
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID . LexToken(,,',',1,72)
DEBUG:root:Action : Shift and goto state 184
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , . LexToken(FLOAT,'float',1,74)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , FLOAT . LexToken(ID,'b',1,80)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 88
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , type . LexToken(ID,'b',1,80)
DEBUG:root:Action : Shift and goto state 213
DEBUG:root:
DEBUG:root:State  : 213
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , type ID . LexToken(),')',1,81)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , type ID empty . LexToken(),')',1,81)
INFO:root:Action : Reduce rule [paramsB -> empty] with [None] and goto state 118
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 221
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID , type ID paramsB . LexToken(),')',1,81)
INFO:root:Action : Reduce rule [paramsB -> , type ID paramsB] with [',',None,'b',None] and goto state 117
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID paramsB . LexToken(),')',1,81)
INFO:root:Action : Reduce rule [params -> type ID paramsB] with [None,'a',None] and goto state 116
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 100
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params . LexToken(),')',1,81)
INFO:root:Action : Reduce rule [paramsOpt -> params] with [None] and goto state 27
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,81)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,83)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(RETURN,'return',1,88)
DEBUG:root:Action : Shift and goto state 123
DEBUG:root:
DEBUG:root:State  : 123
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN . LexToken(ID,'a',1,95)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN ID . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN ID empty . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN ID dimensionsOpt . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN factor . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN factor empty . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN factor termB . LexToken(+,'+',1,96)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term . LexToken(+,'+',1,96)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + . LexToken(ID,'b',1,97)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + ID . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + ID empty . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + ID dimensionsOpt . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + factor . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + factor empty . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + factor termB . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + term . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + term empty . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + term expB . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term + exp . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN term expB . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN exp . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN exp empty . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN exp expressionB . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN expression . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN expression empty . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN expression superexpressionB . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 161
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { RETURN superexpression . LexToken(;,';',1,98)
INFO:root:Action : Reduce rule [return -> RETURN superexpression] with ['return',None] and goto state 115
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { return . LexToken(;,';',1,98)
DEBUG:root:Action : Shift and goto state 170
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { return ; . LexToken(},'}',1,101)
INFO:root:Action : Reduce rule [instruction -> return ;] with [None,';'] and goto state 42
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction . LexToken(},'}',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction empty . LexToken(},'}',1,101)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,101)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,101)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt } . LexToken(MAIN,'main',1,105)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) block . LexToken(MAIN,'main',1,105)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'sum','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt func . LexToken(MAIN,'main',1,105)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt func empty . LexToken(MAIN,'main',1,105)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt func funcsOpt . LexToken(MAIN,'main',1,105)
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,105)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,110)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,111)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,113)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(#,'#',1,117)
DEBUG:root:Action : Shift and goto state 128
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # . LexToken(TRACK,'track',1,118)
DEBUG:root:Action : Shift and goto state 166
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # TRACK . LexToken(ID,'cont',1,124)
INFO:root:Action : Reduce rule [localvardirectiveB -> TRACK] with ['track'] and goto state 102
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # localvardirectiveB . LexToken(ID,'cont',1,124)
DEBUG:root:Action : Shift and goto state 192
DEBUG:root:
DEBUG:root:State  : 192
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # localvardirectiveB ID . LexToken(#,'#',1,131)
INFO:root:Action : Reduce rule [localvardirective -> # localvardirectiveB ID] with ['#',None,'cont'] and goto state 101
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { localvardirective . LexToken(#,'#',1,131)
INFO:root:Action : Reduce rule [localdirective -> localvardirective] with [None] and goto state 51
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { localdirective . LexToken(#,'#',1,131)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 47
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(#,'#',1,131)
DEBUG:root:Action : Shift and goto state 128
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # . LexToken(TRACK,'track',1,132)
DEBUG:root:Action : Shift and goto state 166
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # TRACK . LexToken(ID,'cont2',1,138)
INFO:root:Action : Reduce rule [localvardirectiveB -> TRACK] with ['track'] and goto state 102
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # localvardirectiveB . LexToken(ID,'cont2',1,138)
DEBUG:root:Action : Shift and goto state 192
DEBUG:root:
DEBUG:root:State  : 192
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # localvardirectiveB ID . LexToken(WHILE,'while',1,146)
INFO:root:Action : Reduce rule [localvardirective -> # localvardirectiveB ID] with ['#',None,'cont2'] and goto state 101
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction localvardirective . LexToken(WHILE,'while',1,146)
INFO:root:Action : Reduce rule [localdirective -> localvardirective] with [None] and goto state 51
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction localdirective . LexToken(WHILE,'while',1,146)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 47
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction . LexToken(WHILE,'while',1,146)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE . LexToken((,'(',1,151)
DEBUG:root:Action : Shift and goto state 163
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( . LexToken(ID,'cont2',1,152)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( ID . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( ID empty . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( ID dimensionsOpt . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont2',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( factor . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( factor empty . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( factor termB . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( term . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( term empty . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( term expB . LexToken(<,'<',1,158)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp . LexToken(<,'<',1,158)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < . LexToken(ICONST,'10',1,160)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < empty . LexToken(ICONST,'10',1,160)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < signB . LexToken(ICONST,'10',1,160)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < signB ICONST . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['10'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < signB constant . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < factor . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < factor empty . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < factor termB . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < term . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < term empty . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < term expB . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp < exp . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( exp expressionB . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( expression . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( expression empty . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( expression superexpressionB . LexToken(),')',1,162)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 187
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression . LexToken(),')',1,162)
DEBUG:root:Action : Shift and goto state 201
DEBUG:root:
DEBUG:root:State  : 201
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) . LexToken({,'{',1,164)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { . LexToken(ID,'cont2',1,172)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID . LexToken(=,'=',1,178)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID empty . LexToken(=,'=',1,178)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt . LexToken(=,'=',1,178)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = . LexToken(ID,'cont2',1,180)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = ID . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = ID empty . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont2',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = factor . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = factor empty . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = factor termB . LexToken(+,'+',1,186)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term . LexToken(+,'+',1,186)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + . LexToken(ICONST,'1',1,188)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + empty . LexToken(ICONST,'1',1,188)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + signB . LexToken(ICONST,'1',1,188)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + signB ICONST . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['1'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + signB constant . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + factor . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + factor empty . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + factor termB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + term . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + term empty . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + term expB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term + exp . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = term expB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = exp . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = expression . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID assignB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { ID assignfunccallB . LexToken(;,';',1,189)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['cont2',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { assignfunccall . LexToken(;,';',1,189)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { assignfunccall ; . LexToken(},'}',1,193)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { instruction . LexToken(},'}',1,193)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { instruction empty . LexToken(},'}',1,193)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { instruction instructionsOpt . LexToken(},'}',1,193)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { instructionsOpt . LexToken(},'}',1,193)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) { instructionsOpt } . LexToken(FORGETDECISION,'#forgetdecision',1,197)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 214
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE ( superexpression ) block . LexToken(FORGETDECISION,'#forgetdecision',1,197)
INFO:root:Action : Reduce rule [whileloop -> WHILE ( superexpression ) block] with ['while','(',None,')',None] and goto state 86
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction whileloop . LexToken(FORGETDECISION,'#forgetdecision',1,197)
INFO:root:Action : Reduce rule [instruction -> whileloop] with [None] and goto state 45
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction . LexToken(FORGETDECISION,'#forgetdecision',1,197)
DEBUG:root:Action : Shift and goto state 137
DEBUG:root:
DEBUG:root:State  : 137
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction FORGETDECISION . LexToken(FOR,'for',1,215)
INFO:root:Action : Reduce rule [localdecisiondirective -> FORGETDECISION] with [<str @ 0x108e842d0>] and goto state 106
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 146
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction localdecisiondirective . LexToken(FOR,'for',1,215)
INFO:root:Action : Reduce rule [localdirective -> localdecisiondirective] with [None] and goto state 52
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction localdirective . LexToken(FOR,'for',1,215)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 47
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction . LexToken(FOR,'for',1,215)
DEBUG:root:Action : Shift and goto state 135
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR . LexToken((,'(',1,219)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( . LexToken(ID,'cont',1,220)
DEBUG:root:Action : Shift and goto state 193
DEBUG:root:
DEBUG:root:State  : 193
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID . LexToken(=,'=',1,224)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID empty . LexToken(=,'=',1,224)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt . LexToken(=,'=',1,224)
DEBUG:root:Action : Shift and goto state 216
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = . LexToken(ICONST,'0',1,225)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = empty . LexToken(ICONST,'0',1,225)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = signB . LexToken(ICONST,'0',1,225)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = signB ICONST . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['0'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = signB constant . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = factor . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = factor empty . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = factor termB . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = term . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = term empty . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = term expB . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = exp . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = exp empty . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = exp expressionB . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = expression . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = expression empty . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 222
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID dimensionsOpt = superexpression . LexToken(;,';',1,226)
INFO:root:Action : Reduce rule [assign -> ID dimensionsOpt = superexpression] with ['cont',None,'=',None] and goto state 32
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 194
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign . LexToken(;,';',1,226)
DEBUG:root:Action : Shift and goto state 207
DEBUG:root:
DEBUG:root:State  : 207
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; . LexToken(ID,'cont',1,228)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; ID . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; ID empty . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; ID dimensionsOpt . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; factor . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; factor empty . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; factor termB . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; term . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; term empty . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; term expB . LexToken(<,'<',1,232)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp . LexToken(<,'<',1,232)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < . LexToken(ID,'cont2',1,233)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < ID . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < ID empty . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < ID dimensionsOpt . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont2',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < factor . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < factor empty . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < factor termB . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < term . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < term empty . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < term expB . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp < exp . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; exp expressionB . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; expression . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; expression empty . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; expression superexpressionB . LexToken(;,';',1,238)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression . LexToken(;,';',1,238)
DEBUG:root:Action : Shift and goto state 223
DEBUG:root:
DEBUG:root:State  : 223
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; . LexToken(ID,'cont',1,240)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; ID . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; ID empty . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; ID dimensionsOpt . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; factor . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; factor empty . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; factor termB . LexToken(+,'+',1,244)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term . LexToken(+,'+',1,244)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + . LexToken(ICONST,'1',1,245)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + empty . LexToken(ICONST,'1',1,245)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + signB . LexToken(ICONST,'1',1,245)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + signB ICONST . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['1'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + signB constant . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + factor . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + factor empty . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + factor termB . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + term . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + term empty . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + term expB . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term + exp . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; term expB . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; exp . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; exp empty . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; exp expressionB . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; expression . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; expression empty . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; expression superexpressionB . LexToken(),')',1,246)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 228
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression . LexToken(),')',1,246)
DEBUG:root:Action : Shift and goto state 230
DEBUG:root:
DEBUG:root:State  : 230
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) . LexToken({,'{',1,248)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { . LexToken(PRINT,'print',1,254)
DEBUG:root:Action : Shift and goto state 126
DEBUG:root:
DEBUG:root:State  : 126
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT . LexToken((,'(',1,259)
DEBUG:root:Action : Shift and goto state 164
DEBUG:root:
DEBUG:root:State  : 164
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( . LexToken(STRING,'"contador= "',1,260)
DEBUG:root:Action : Shift and goto state 188
DEBUG:root:
DEBUG:root:State  : 188
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING . LexToken(,,',',1,272)
DEBUG:root:Action : Shift and goto state 204
DEBUG:root:
DEBUG:root:State  : 204
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , . LexToken(ID,'cont',1,274)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , ID . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , ID empty . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , ID dimensionsOpt . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , factor . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , factor empty . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , factor termB . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , term . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , term empty . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , term expB . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , exp . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , exp empty . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , exp expressionB . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , expression . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , expression empty . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , expression superexpressionB . LexToken(),')',1,278)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 189
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , superexpression . LexToken(),')',1,278)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , superexpression ) . LexToken(;,';',1,279)
INFO:root:Action : Reduce rule [outputC -> )] with [')'] and goto state 99
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , superexpression outputC . LexToken(;,';',1,279)
INFO:root:Action : Reduce rule [outputB -> superexpression outputC] with [None,None] and goto state 98
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING , outputB . LexToken(;,';',1,279)
INFO:root:Action : Reduce rule [outputC -> , outputB] with [',',None] and goto state 100
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 203
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( STRING outputC . LexToken(;,';',1,279)
INFO:root:Action : Reduce rule [outputB -> STRING outputC] with ['"contador= "',None] and goto state 97
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { PRINT ( outputB . LexToken(;,';',1,279)
INFO:root:Action : Reduce rule [output -> PRINT ( outputB] with ['print','(',None] and goto state 96
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 147
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { output . LexToken(;,';',1,279)
DEBUG:root:Action : Shift and goto state 180
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { output ; . LexToken(},'}',1,283)
INFO:root:Action : Reduce rule [instruction -> output ;] with [None,';'] and goto state 40
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { instruction . LexToken(},'}',1,283)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { instruction empty . LexToken(},'}',1,283)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { instruction instructionsOpt . LexToken(},'}',1,283)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { instructionsOpt . LexToken(},'}',1,283)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) { instructionsOpt } . LexToken(PRINT,'print',1,285)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 231
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; superexpression ; superexpression ) block . LexToken(PRINT,'print',1,285)
INFO:root:Action : Reduce rule [forloop -> FOR ( assign ; superexpression ; superexpression ) block] with ['for','(',None,';',None,';',None,')',None] and goto state 92
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction forloop . LexToken(PRINT,'print',1,285)
INFO:root:Action : Reduce rule [instruction -> forloop] with [None] and goto state 46
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction . LexToken(PRINT,'print',1,285)
DEBUG:root:Action : Shift and goto state 126
DEBUG:root:
DEBUG:root:State  : 126
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT . LexToken((,'(',1,290)
DEBUG:root:Action : Shift and goto state 164
DEBUG:root:
DEBUG:root:State  : 164
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( . LexToken(ID,'miFunc',1,291)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID . LexToken((,'(',1,297)
DEBUG:root:Action : Shift and goto state 81
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( . LexToken(),')',1,298)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( ) . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( funccallB . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [funccall -> ID ( funccallB] with ['miFunc','(',None] and goto state 108
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( funccall . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [factor -> funccall] with [None] and goto state 76
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor empty . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor termB . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term empty . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term expB . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp empty . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp expressionB . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression empty . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression superexpressionB . LexToken(,,',',1,299)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 189
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression . LexToken(,,',',1,299)
DEBUG:root:Action : Shift and goto state 204
DEBUG:root:
DEBUG:root:State  : 204
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , . LexToken(ID,'sum',1,301)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID . LexToken((,'(',1,304)
DEBUG:root:Action : Shift and goto state 81
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( . LexToken(ID,'cont',1,305)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( ID . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( ID empty . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( ID dimensionsOpt . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( factor . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( factor empty . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( factor termB . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( term . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( term empty . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( term expB . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( exp . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( exp empty . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( exp expressionB . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( expression . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( expression empty . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( expression superexpressionB . LexToken(,,',',1,309)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression . LexToken(,,',',1,309)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:
DEBUG:root:State  : 154
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , . LexToken(ID,'cont2',1,310)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , ID . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , ID empty . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , ID dimensionsOpt . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['cont2',None] and goto state 77
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , factor . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , factor empty . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , factor termB . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , term . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , term empty . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , term expB . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , exp . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , exp empty . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , exp expressionB . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , expression . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , expression empty . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , expression superexpressionB . LexToken(),')',1,315)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 186
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , superexpression . LexToken(),')',1,315)
DEBUG:root:Action : Shift and goto state 153
DEBUG:root:
DEBUG:root:State  : 153
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , superexpression ) . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 112
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression , superexpression funccallC . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [funccallC -> , superexpression funccallC] with [',',None,None] and goto state 111
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( superexpression funccallC . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [funccallB -> superexpression funccallC] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , ID ( funccallB . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [funccall -> ID ( funccallB] with ['sum','(',None] and goto state 108
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , funccall . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [factor -> funccall] with [None] and goto state 76
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , factor . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , factor empty . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , factor termB . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , term . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , term empty . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , term expB . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , exp . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , exp empty . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , exp expressionB . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , expression . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , expression empty . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , expression superexpressionB . LexToken(),')',1,316)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 189
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , superexpression . LexToken(),')',1,316)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , superexpression ) . LexToken(;,';',1,317)
INFO:root:Action : Reduce rule [outputC -> )] with [')'] and goto state 99
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , superexpression outputC . LexToken(;,';',1,317)
INFO:root:Action : Reduce rule [outputB -> superexpression outputC] with [None,None] and goto state 98
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression , outputB . LexToken(;,';',1,317)
INFO:root:Action : Reduce rule [outputC -> , outputB] with [',',None] and goto state 100
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression outputC . LexToken(;,';',1,317)
INFO:root:Action : Reduce rule [outputB -> superexpression outputC] with [None,None] and goto state 98
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( outputB . LexToken(;,';',1,317)
INFO:root:Action : Reduce rule [output -> PRINT ( outputB] with ['print','(',None] and goto state 96
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 147
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction output . LexToken(;,';',1,317)
DEBUG:root:Action : Shift and goto state 180
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction output ; . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instruction -> output ;] with [None,';'] and goto state 40
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction empty . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,321)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,321)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,324)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,324)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,324)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(VOID,'void',1,328)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF VOID . LexToken(ID,'miFunc',1,333)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'miFunc',1,333)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,339)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,340)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,340)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,340)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,342)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(ID,'sum',1,347)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID . LexToken((,'(',1,350)
DEBUG:root:Action : Shift and goto state 175
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( . LexToken(ICONST,'1',1,351)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( empty . LexToken(ICONST,'1',1,351)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( signB . LexToken(ICONST,'1',1,351)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( signB ICONST . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['1'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( signB constant . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( factor . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( factor empty . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( factor termB . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( term . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( term empty . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( term expB . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( exp . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( exp empty . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( exp expressionB . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( expression . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( expression empty . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( expression superexpressionB . LexToken(,,',',1,352)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression . LexToken(,,',',1,352)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:
DEBUG:root:State  : 154
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , . LexToken(ICONST,'2',1,354)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , empty . LexToken(ICONST,'2',1,354)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , signB . LexToken(ICONST,'2',1,354)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , signB ICONST . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , signB constant . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , factor . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , factor empty . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , factor termB . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , term . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , term empty . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , term expB . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , exp . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , exp empty . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , exp expressionB . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , expression . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , expression empty . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , expression superexpressionB . LexToken(),')',1,355)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 186
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , superexpression . LexToken(),')',1,355)
DEBUG:root:Action : Shift and goto state 153
DEBUG:root:
DEBUG:root:State  : 153
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , superexpression ) . LexToken(;,';',1,356)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 112
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression , superexpression funccallC . LexToken(;,';',1,356)
INFO:root:Action : Reduce rule [funccallC -> , superexpression funccallC] with [',',None,None] and goto state 111
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( superexpression funccallC . LexToken(;,';',1,356)
INFO:root:Action : Reduce rule [funccallB -> superexpression funccallC] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID ( funccallB . LexToken(;,';',1,356)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignfunccallB . LexToken(;,';',1,356)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['sum',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall . LexToken(;,';',1,356)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall ; . LexToken(ID,'sum',1,360)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction . LexToken(ID,'sum',1,360)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID . LexToken((,'(',1,363)
DEBUG:root:Action : Shift and goto state 175
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( . LexToken(ICONST,'3',1,364)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( empty . LexToken(ICONST,'3',1,364)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( signB . LexToken(ICONST,'3',1,364)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( signB ICONST . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( signB constant . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( factor . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( factor empty . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( factor termB . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( term . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( term empty . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( term expB . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( exp . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( exp empty . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( exp expressionB . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( expression . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( expression empty . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( expression superexpressionB . LexToken(,,',',1,365)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression . LexToken(,,',',1,365)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:
DEBUG:root:State  : 154
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , . LexToken(-,'-',1,367)
DEBUG:root:Action : Shift and goto state 57
DEBUG:root:
DEBUG:root:State  : 57
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , - . LexToken(ICONST,'3',1,368)
INFO:root:Action : Reduce rule [sign -> -] with ['-'] and goto state 85
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 53
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , sign . LexToken(ICONST,'3',1,368)
INFO:root:Action : Reduce rule [signB -> sign] with [None] and goto state 78
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , signB . LexToken(ICONST,'3',1,368)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , signB ICONST . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , signB constant . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , factor . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , factor empty . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , factor termB . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , term . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , term empty . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , term expB . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , exp . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , exp empty . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , exp expressionB . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , expression . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , expression empty . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , expression superexpressionB . LexToken(),')',1,369)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 186
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , superexpression . LexToken(),')',1,369)
DEBUG:root:Action : Shift and goto state 153
DEBUG:root:
DEBUG:root:State  : 153
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , superexpression ) . LexToken(;,';',1,370)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 112
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression , superexpression funccallC . LexToken(;,';',1,370)
INFO:root:Action : Reduce rule [funccallC -> , superexpression funccallC] with [',',None,None] and goto state 111
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( superexpression funccallC . LexToken(;,';',1,370)
INFO:root:Action : Reduce rule [funccallB -> superexpression funccallC] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID ( funccallB . LexToken(;,';',1,370)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction ID assignfunccallB . LexToken(;,';',1,370)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['sum',None] and goto state 48
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction assignfunccall . LexToken(;,';',1,370)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction assignfunccall ; . LexToken(PRINT,'print',1,374)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction . LexToken(PRINT,'print',1,374)
DEBUG:root:Action : Shift and goto state 126
DEBUG:root:
DEBUG:root:State  : 126
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT . LexToken((,'(',1,379)
DEBUG:root:Action : Shift and goto state 164
DEBUG:root:
DEBUG:root:State  : 164
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( . LexToken(ID,'sum',1,381)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID . LexToken((,'(',1,384)
DEBUG:root:Action : Shift and goto state 81
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( . LexToken(ICONST,'4',1,385)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( empty . LexToken(ICONST,'4',1,385)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( signB . LexToken(ICONST,'4',1,385)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( signB ICONST . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['4'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( signB constant . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( factor . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( factor empty . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( factor termB . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( term . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( term empty . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( term expB . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( exp . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( exp empty . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( exp expressionB . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( expression . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( expression empty . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( expression superexpressionB . LexToken(,,',',1,386)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression . LexToken(,,',',1,386)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:
DEBUG:root:State  : 154
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , . LexToken(ICONST,'4',1,387)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , empty . LexToken(ICONST,'4',1,387)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , signB . LexToken(ICONST,'4',1,387)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , signB ICONST . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['4'] and goto state 81
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , signB constant . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , factor . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , factor empty . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , factor termB . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , term . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , term empty . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , term expB . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , exp . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , exp empty . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , exp expressionB . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , expression . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , expression empty . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , expression superexpressionB . LexToken(),')',1,388)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 186
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , superexpression . LexToken(),')',1,388)
DEBUG:root:Action : Shift and goto state 153
DEBUG:root:
DEBUG:root:State  : 153
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , superexpression ) . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 112
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression , superexpression funccallC . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [funccallC -> , superexpression funccallC] with [',',None,None] and goto state 111
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( superexpression funccallC . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [funccallB -> superexpression funccallC] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( ID ( funccallB . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [funccall -> ID ( funccallB] with ['sum','(',None] and goto state 108
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( funccall . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [factor -> funccall] with [None] and goto state 76
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( factor . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( factor empty . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( factor termB . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( term . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( term empty . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( term expB . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( exp . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( exp empty . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( exp expressionB . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( expression . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( expression empty . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( expression superexpressionB . LexToken(),')',1,389)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 189
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( superexpression . LexToken(),')',1,389)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( superexpression ) . LexToken(;,';',1,390)
INFO:root:Action : Reduce rule [outputC -> )] with [')'] and goto state 99
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( superexpression outputC . LexToken(;,';',1,390)
INFO:root:Action : Reduce rule [outputB -> superexpression outputC] with [None,None] and goto state 98
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction PRINT ( outputB . LexToken(;,';',1,390)
INFO:root:Action : Reduce rule [output -> PRINT ( outputB] with ['print','(',None] and goto state 96
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 147
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction output . LexToken(;,';',1,390)
DEBUG:root:Action : Shift and goto state 180
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction output ; . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [instruction -> output ;] with [None,';'] and goto state 40
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instruction . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instruction empty . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instruction instructionsOpt . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instructionsOpt . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,393)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,393)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) block . $end
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'miFunc','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10861c7f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10861c7f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression declarationD . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt declarationC . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['a',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type declarationB . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with [None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { declaration . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 43
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction empty . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,47)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt } . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) block . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt func . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt func empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt func funcsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 175
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(ID,'x',1,92)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID empty . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt . LexToken(=,'=',1,94)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = . LexToken(ID,'b',1,96)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID empty . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor . LexToken(*,'*',1,98)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,100)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term expB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignfunccallB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall . LexToken(;,';',1,101)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall ; . LexToken(IF,'if',1,105)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction . LexToken(IF,'if',1,105)
DEBUG:root:Action : Shift and goto state 143
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF . LexToken((,'(',1,108)
DEBUG:root:Action : Shift and goto state 178
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( . LexToken(ID,'oneVar',1,110)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID dimensionsOpt . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['oneVar',None] and goto state 77
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor termB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term expB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp . LexToken(<,'<',1,117)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < empty . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB . LexToken(ICONST,'3',1,119)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB ICONST . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB constant . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor termB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term expB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < exp . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp expressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression superexpressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression . LexToken(),')',1,121)
DEBUG:root:Action : Shift and goto state 212
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) . LexToken({,'{',1,123)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { . LexToken(ID,'x',1,129)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID empty . LexToken(=,'=',1,131)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt . LexToken(=,'=',1,131)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = empty . LexToken(ICONST,'2',1,133)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB . LexToken(ICONST,'2',1,133)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB ICONST . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = signB constant . LexToken(*,'*',1,135)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor . LexToken(*,'*',1,135)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,137)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,137)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = term expB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { ID assignfunccallB . LexToken(;,';',1,138)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall . LexToken(;,';',1,138)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { assignfunccall ; . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction empty . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instruction instructionsOpt . LexToken(},'}',1,142)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt . LexToken(},'}',1,142)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt } . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 220
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 226
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [else -> empty] with [None] and goto state 38
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block else . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [condition -> IF ( superexpression ) block else] with ['if','(',None,')',None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction condition . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction empty . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,144)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,144)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) block . $end
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo2','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x104f187f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x104f187f8> (None)
INFO:root:PLY: PARSE DEBUG END
INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> empty] with [None] and goto state 3
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config empty . LexToken(DEF,'def',1,12)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [None] and goto state 17
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',1,12)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',1,16)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',1,21)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 90
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',1,21)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',1,25)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( empty . LexToken(),')',1,26)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',1,26)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,28)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { . LexToken(INT,'int',1,32)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { INT . LexToken(ID,'a',1,36)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type . LexToken(ID,'a',1,36)
DEBUG:root:Action : Shift and goto state 34
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID empty . LexToken(=,'=',1,38)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt . LexToken(=,'=',1,38)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = . LexToken(ID,'b',1,40)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = ID dimensionsOpt . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor empty . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = factor termB . LexToken(+,'+',1,42)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term . LexToken(+,'+',1,42)
DEBUG:root:Action : Shift and goto state 83
DEBUG:root:
DEBUG:root:State  : 83
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + . LexToken(ID,'a',1,44)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + ID dimensionsOpt . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['a',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + factor termB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term + exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expB -> + exp] with ['+',None] and goto state 68
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = term expB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = exp expressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression empty . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,45)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression . LexToken(;,';',1,45)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression ; . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 24
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt = superexpression declarationD . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationC -> = superexpression declarationD] with ['=',None,None] and goto state 20
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type ID dimensionsOpt declarationC . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declarationB -> ID dimensionsOpt declarationC] with ['a',None,None] and goto state 19
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { type declarationB . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [declaration -> type declarationB] with [None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { declaration . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 43
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction empty . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,47)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,47)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) { instructionsOpt } . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) block . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt func . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt func empty . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt func funcsOpt . LexToken(MAIN,'main',1,50)
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 29
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',1,50)
DEBUG:root:Action : Shift and goto state 36
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',1,54)
DEBUG:root:Action : Shift and goto state 46
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',1,55)
DEBUG:root:Action : Shift and goto state 66
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',1,57)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'algo',1,61)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken((,'(',1,65)
DEBUG:root:Action : Shift and goto state 175
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( . LexToken(),')',1,66)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( ) . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [funccallB -> )] with [')'] and goto state 110
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID ( funccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB] with ['(',None] and goto state 49
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',1,67)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 48
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',1,67)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction empty . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',1,69)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',1,69)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . LexToken(DEF,'def',1,72)
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 25
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . LexToken(DEF,'def',1,72)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF . LexToken(INT,'int',1,76)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF INT . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 87
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF type . LexToken(ID,'algo2',1,80)
INFO:root:Action : Reduce rule [returntype -> type] with [None] and goto state 91
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype . LexToken(ID,'algo2',1,80)
DEBUG:root:Action : Shift and goto state 48
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID . LexToken((,'(',1,85)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 99
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( empty . LexToken(),')',1,86)
INFO:root:Action : Reduce rule [paramsOpt -> empty] with [None] and goto state 28
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt . LexToken(),')',1,86)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) . LexToken({,'{',1,88)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { . LexToken(ID,'x',1,92)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID empty . LexToken(=,'=',1,94)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt . LexToken(=,'=',1,94)
DEBUG:root:Action : Shift and goto state 197
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = . LexToken(ID,'b',1,96)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID empty . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = ID dimensionsOpt . LexToken(*,'*',1,98)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['b',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor . LexToken(*,'*',1,98)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * empty . LexToken(ICONST,'2',1,100)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB . LexToken(ICONST,'2',1,100)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB ICONST . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['2'] and goto state 81
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * signB constant . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor * term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [termB -> * term] with ['*',None] and goto state 72
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = factor termB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = term expB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 90
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expressionB -> empty] with [None] and goto state 65
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression empty . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID dimensionsOpt = superexpression . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = superexpression] with [None,'=',None] and goto state 33
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { ID assignfunccallB . LexToken(;,';',1,101)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 48
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall . LexToken(;,';',1,101)
DEBUG:root:Action : Shift and goto state 162
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { assignfunccall ; . LexToken(IF,'if',1,105)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 39
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction . LexToken(IF,'if',1,105)
DEBUG:root:Action : Shift and goto state 143
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF . LexToken((,'(',1,108)
DEBUG:root:Action : Shift and goto state 178
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( . LexToken(ID,'oneVar',1,110)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [None] and goto state 35
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 82
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( ID dimensionsOpt . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [factor -> ID dimensionsOpt] with ['oneVar',None] and goto state 77
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( factor termB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term empty . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( term expB . LexToken(<,'<',1,117)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp . LexToken(<,'<',1,117)
DEBUG:root:Action : Shift and goto state 89
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < empty . LexToken(ICONST,'3',1,119)
INFO:root:Action : Reduce rule [signB -> empty] with [None] and goto state 79
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB . LexToken(ICONST,'3',1,119)
DEBUG:root:Action : Shift and goto state 72
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB ICONST . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [constant -> ICONST] with ['3'] and goto state 81
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < signB constant . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [factor -> signB constant] with [None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [termB -> empty] with [None] and goto state 73
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < factor termB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [term -> factor termB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expB -> empty] with [None] and goto state 69
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < term expB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [exp -> term expB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp < exp . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expressionB -> < exp] with ['<',None] and goto state 59
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( exp expressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression empty . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [None] and goto state 57
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( expression superexpressionB . LexToken(),')',1,121)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression . LexToken(),')',1,121)
DEBUG:root:Action : Shift and goto state 212
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) . LexToken({,'{',1,123)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { . LexToken(},'}',1,127)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { empty . LexToken(},'}',1,127)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt . LexToken(},'}',1,127)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) { instructionsOpt } . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 220
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 226
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block empty . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [else -> empty] with [None] and goto state 38
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction IF ( superexpression ) block else . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [condition -> IF ( superexpression ) block else] with ['if','(',None,')',None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction condition . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 44
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction empty . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [None] and goto state 31
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instruction instructionsOpt . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instruction instructionsOpt . LexToken(},'}',1,129)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt . LexToken(},'}',1,129)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 29
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt main DEF returntype ID ( paramsOpt ) block . $end
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt ) block] with ['def',None,'algo2','(',None,')',None] and goto state 26
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [None] and goto state 15
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt main func funcsOpt . $end
INFO:root:Action : Reduce rule [funcsOpt -> func funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x1093ce7f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x1093ce7f8> (None)
INFO:root:PLY: PARSE DEBUG END
