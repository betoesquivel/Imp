INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 22
DEBUG:root:
DEBUG:root:State  : 22
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(INT,'int',3,12)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 26
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(INT,'int',3,12)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(INT,'int',3,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective empty . LexToken(INT,'int',3,12)
INFO:root:Action : Reduce rule [config -> empty] with [''] and goto state 3
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(INT,'int',3,12)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(INT,'int',3,12)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config INT . LexToken(ID,'a',3,16)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 104
INFO:root:Result : <str @ 0x100734828> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config type . LexToken(ID,'a',3,16)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config type push_type . LexToken(ID,'a',3,16)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type ID . LexToken(;,';',3,17)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type ID push_operand . LexToken(;,';',3,17)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config type push_type ID push_operand empty . LexToken(;,';',3,17)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 118
DEBUG:root:Stack  : config type push_type ID push_operand dimensionsOpt . LexToken(;,';',3,17)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['a',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config type push_type declarationB . LexToken(;,';',3,17)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config type push_type declarationB ; . LexToken(INT,'int',3,19)
INFO:root:Action : Reduce rule [declarationC -> ;] with [';'] and goto state 26
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config type push_type declarationB declarationC . LexToken(INT,'int',3,19)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config declaration . LexToken(INT,'int',3,19)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declaration INT . LexToken(ID,'b',3,23)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 104
INFO:root:Result : <str @ 0x100734850> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declaration type . LexToken(ID,'b',3,23)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declaration type push_type . LexToken(ID,'b',3,23)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declaration type push_type ID . LexToken(;,';',3,24)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declaration type push_type ID push_operand . LexToken(;,';',3,24)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declaration type push_type ID push_operand empty . LexToken(;,';',3,24)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 118
DEBUG:root:Stack  : config declaration type push_type ID push_operand dimensionsOpt . LexToken(;,';',3,24)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['b',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declaration type push_type declarationB . LexToken(;,';',3,24)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config declaration type push_type declarationB ; . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [declarationC -> ;] with [';'] and goto state 26
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declaration type push_type declarationB declarationC . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config declaration declaration . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : config declaration declaration empty . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [''] and goto state 17
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declaration declaration declarationsOpt . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [declarationsOpt -> declaration declarationsOpt] with [None,None] and goto state 16
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declaration declarationsOpt . LexToken(DEF,'def',5,27)
INFO:root:Action : Reduce rule [declarationsOpt -> declaration declarationsOpt] with [None,None] and goto state 16
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',5,27)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(VOID,'void',5,31)
DEBUG:root:Action : Shift and goto state 42
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt DEF VOID . LexToken(ID,'algo',5,36)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 108
INFO:root:Result : <str @ 0x101b77bd0> ('void')
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'algo',5,36)
DEBUG:root:Action : Shift and goto state 74
DEBUG:root:
DEBUG:root:State  : 74
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',5,40)
DEBUG:root:Action : Shift and goto state 117
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(INT,'int',5,41)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( INT . LexToken(ID,'x',5,45)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 104
INFO:root:Result : <str @ 0x1007348c8> ('int')
DEBUG:root:
DEBUG:root:State  : 165
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type . LexToken(ID,'x',5,45)
DEBUG:root:Action : Shift and goto state 212
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID . LexToken(),')',5,46)
INFO:root:Action : Reduce rule [params -> type ID] with ['int','x'] and goto state 135
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params . LexToken(),')',5,46)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params empty . LexToken(),')',5,46)
INFO:root:Action : Reduce rule [paramsB -> empty] with [''] and goto state 137
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params paramsB . LexToken(),')',5,46)
INFO:root:Action : Reduce rule [paramsOpt -> params paramsB] with [None,None] and goto state 32
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',5,46)
DEBUG:root:Action : Shift and goto state 208
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',5,48)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def','void','algo','(',None,')'] and goto state 31
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt func . LexToken({,'{',5,48)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt func { . LexToken(ID,'x',6,53)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt func { ID . LexToken(=,'=',6,55)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt func { ID empty . LexToken(=,'=',6,55)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt . LexToken(=,'=',6,55)
DEBUG:root:Action : Shift and goto state 160
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = . LexToken(ICONST,'2',6,57)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = empty . LexToken(ICONST,'2',6,57)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = signB . LexToken(ICONST,'2',6,57)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = signB ICONST . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = signB ICONST seen_iconst . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 97
INFO:root:Result : <str @ 0x100519f80> ('2')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = signB constant . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = factor . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = factor seen_factor . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = factor seen_factor empty . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = factor seen_factor termB . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term . LexToken(+,'+',6,59)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term . LexToken(+,'+',6,59)
DEBUG:root:Action : Shift and goto state 181
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + . LexToken(ICONST,'4',6,61)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 219
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator . LexToken(ICONST,'4',6,61)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator empty . LexToken(ICONST,'4',6,61)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator signB . LexToken(ICONST,'4',6,61)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator signB ICONST . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator signB ICONST seen_iconst . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 97
INFO:root:Result : <str @ 0x1005a5030> ('4')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator signB constant . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator factor . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator factor seen_factor . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator factor seen_factor empty . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator factor seen_factor termB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator term . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator term seen_term . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator term seen_term empty . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator term seen_term expB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term + push_operator exp . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 76
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = term seen_term expB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = exp . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = exp empty . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 72
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = exp expressionB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 65
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = expression . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 146
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = expression empty . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 64
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 145
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 62
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = superexpression . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = superexpression empty . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 61
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = superexpression hyperexpressionB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt func { ID dimensionsOpt = hyperexpression . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = hyperexpression] with ['','=',None] and goto state 38
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt func { ID assignB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 55
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt func { ID assignfunccallB . LexToken(;,';',6,62)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['x',None] and goto state 53
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : config declarationsOpt func { assignfunccall . LexToken(;,';',6,62)
DEBUG:root:Action : Shift and goto state 95
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt func { assignfunccall ; . LexToken(},'}',7,64)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 44
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt func { instruction . LexToken(},'}',7,64)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt func { instruction empty . LexToken(},'}',7,64)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 36
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt func { instruction instructionsOpt . LexToken(},'}',7,64)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 35
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt . LexToken(},'}',7,64)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt } . LexToken(MAIN,'main',9,67)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 34
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt func block . LexToken(MAIN,'main',9,67)
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 30
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt suprafunc . LexToken(MAIN,'main',9,67)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt suprafunc empty . LexToken(MAIN,'main',9,67)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt suprafunc funcsOpt . LexToken(MAIN,'main',9,67)
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',9,67)
DEBUG:root:Action : Shift and goto state 38
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',9,71)
DEBUG:root:Action : Shift and goto state 47
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',9,72)
DEBUG:root:Action : Shift and goto state 80
DEBUG:root:
DEBUG:root:State  : 80
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',9,74)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(ID,'a',10,78)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID . LexToken(=,'=',10,80)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID empty . LexToken(=,'=',10,80)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt . LexToken(=,'=',10,80)
DEBUG:root:Action : Shift and goto state 160
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = . LexToken(ID,'a',10,82)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = ID . LexToken(*,'*',10,84)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 88
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 134
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = ID seen_ID . LexToken(*,'*',10,84)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = ID seen_ID empty . LexToken(*,'*',10,84)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = ID seen_ID dimensionsOpt . LexToken(*,'*',10,84)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 86
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor . LexToken(*,'*',10,84)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor . LexToken(*,'*',10,84)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * . LexToken(ICONST,'3',10,86)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator . LexToken(ICONST,'3',10,86)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator empty . LexToken(ICONST,'3',10,86)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator signB . LexToken(ICONST,'3',10,86)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator signB ICONST . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 97
INFO:root:Result : <str @ 0x100596f80> ('3')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator signB constant . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator factor . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator factor seen_factor . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor * push_operator term . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = factor seen_factor termB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = term . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = term seen_term . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = term seen_term empty . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = term seen_term expB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = exp . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = exp empty . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 72
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = exp expressionB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 65
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = expression . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 146
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = expression empty . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 64
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 145
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = expression superexpressionB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 62
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = superexpression . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = superexpression empty . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 61
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = superexpression hyperexpressionB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID dimensionsOpt = hyperexpression . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = hyperexpression] with ['','=',None] and goto state 38
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 55
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { ID assignfunccallB . LexToken(;,';',10,87)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['a',None] and goto state 53
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall . LexToken(;,';',10,87)
DEBUG:root:Action : Shift and goto state 95
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { assignfunccall ; . LexToken(ID,'b',11,91)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 44
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(ID,'b',11,91)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID . LexToken(=,'=',11,93)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 113
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID empty . LexToken(=,'=',11,93)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 40
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 112
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt . LexToken(=,'=',11,93)
DEBUG:root:Action : Shift and goto state 160
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = . LexToken(ICONST,'2',11,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = empty . LexToken(ICONST,'2',11,95)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = signB . LexToken(ICONST,'2',11,95)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = signB ICONST . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = signB ICONST seen_iconst . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 97
INFO:root:Result : <str @ 0x100519f80> ('2')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = signB constant . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = factor . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = factor seen_factor . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = factor seen_factor empty . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = factor seen_factor termB . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term . LexToken(+,'+',11,97)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term . LexToken(+,'+',11,97)
DEBUG:root:Action : Shift and goto state 181
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + . LexToken(ICONST,'1',11,99)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 219
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator . LexToken(ICONST,'1',11,99)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator empty . LexToken(ICONST,'1',11,99)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator signB . LexToken(ICONST,'1',11,99)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator signB ICONST . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator signB ICONST seen_iconst . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 97
INFO:root:Result : <str @ 0x1002e3418> ('1')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator signB constant . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator factor . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator factor seen_factor . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator factor seen_factor empty . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator factor seen_factor termB . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term . LexToken(-,'-',11,101)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term . LexToken(-,'-',11,101)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - . LexToken(ICONST,'4',11,103)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 220
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator . LexToken(ICONST,'4',11,103)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator empty . LexToken(ICONST,'4',11,103)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator signB . LexToken(ICONST,'4',11,103)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator signB ICONST . LexToken(*,'*',11,105)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator signB ICONST seen_iconst . LexToken(*,'*',11,105)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 97
INFO:root:Result : <str @ 0x1005a5030> ('4')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator signB constant . LexToken(*,'*',11,105)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor . LexToken(*,'*',11,105)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor . LexToken(*,'*',11,105)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * . LexToken(ICONST,'2',11,107)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator . LexToken(ICONST,'2',11,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'2',11,107)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'2',11,107)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator signB ICONST . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 97
INFO:root:Result : <str @ 0x100519f80> ('2')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator signB constant . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator factor . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor * push_operator term . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator factor seen_factor termB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator term . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator term seen_term . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator term seen_term empty . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator term seen_term expB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term - push_operator exp . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [expB -> - push_operator exp] with ['-',None,None] and goto state 75
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator term seen_term expB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term + push_operator exp . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 76
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = term seen_term expB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = exp . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = exp empty . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 72
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = exp expressionB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 65
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = expression . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 146
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = expression empty . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 64
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 145
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = expression superexpressionB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 62
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = superexpression . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = superexpression empty . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 61
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = superexpression hyperexpressionB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID dimensionsOpt = hyperexpression . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = hyperexpression] with ['','=',None] and goto state 38
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID assignB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 55
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction ID assignfunccallB . LexToken(;,';',11,108)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['b',None] and goto state 53
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction assignfunccall . LexToken(;,';',11,108)
DEBUG:root:Action : Shift and goto state 95
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction assignfunccall ; . LexToken(ID,'algo',12,112)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 44
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction . LexToken(ID,'algo',12,112)
DEBUG:root:Action : Shift and goto state 67
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID . LexToken((,'(',12,116)
DEBUG:root:Action : Shift and goto state 109
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( . LexToken(ICONST,'8',12,117)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( empty . LexToken(ICONST,'8',12,117)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 90
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( signB . LexToken(ICONST,'8',12,117)
DEBUG:root:Action : Shift and goto state 125
DEBUG:root:
DEBUG:root:State  : 125
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( signB ICONST . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 92
INFO:root:Result : <str @ 0x1002773c8> ('int')
DEBUG:root:
DEBUG:root:State  : 170
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( signB ICONST seen_iconst . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 97
INFO:root:Result : <str @ 0x1005a5080> ('8')
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( signB constant . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 83
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( factor . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 129
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( factor seen_factor . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( factor seen_factor empty . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( factor seen_factor termB . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( term . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 74
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 135
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( term seen_term . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( term seen_term empty . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( term seen_term expB . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( exp . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 142
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( exp empty . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 72
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 138
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( exp expressionB . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 65
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( expression . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 146
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( expression empty . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 64
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 145
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( expression superexpressionB . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 62
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( superexpression . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( superexpression empty . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 61
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( superexpression hyperexpressionB . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( hyperexpression . LexToken(),')',12,118)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression] with [None] and goto state 127
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( funccallB . LexToken(),')',12,118)
DEBUG:root:Action : Shift and goto state 203
DEBUG:root:
DEBUG:root:State  : 203
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( funccallB ) . LexToken(;,';',12,119)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 130
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID ( funccallB funccallC . LexToken(;,';',12,119)
INFO:root:Action : Reduce rule [assignfunccallB -> ( funccallB funccallC] with ['(',None,None] and goto state 54
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction ID assignfunccallB . LexToken(;,';',12,119)
INFO:root:Action : Reduce rule [assignfunccall -> ID assignfunccallB] with ['algo',None] and goto state 53
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 50
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction assignfunccall . LexToken(;,';',12,119)
DEBUG:root:Action : Shift and goto state 95
DEBUG:root:
DEBUG:root:State  : 95
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction assignfunccall ; . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 44
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction empty . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 36
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instructionsOpt . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 35
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instructionsOpt . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 35
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',13,121)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 35
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',13,121)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 34
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . $end
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 29
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 138
INFO:root:Result : <str @ 0x100277508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10017ff80> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10017ff80> (None)
INFO:root:PLY: PARSE DEBUG END
