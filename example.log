INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(VARSCONFIG,'#vars',1,0)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:
DEBUG:root:State  : 2
DEBUG:root:Stack  : VARSCONFIG . LexToken(=,'=',1,5)
DEBUG:root:Action : Shift and goto state 9
DEBUG:root:
DEBUG:root:State  : 9
DEBUG:root:Stack  : VARSCONFIG = . LexToken(SOME,'SOME',1,6)
DEBUG:root:Action : Shift and goto state 22
DEBUG:root:
DEBUG:root:State  : 22
DEBUG:root:Stack  : VARSCONFIG = SOME . LexToken(DECISIONSCONFIG,'#decisions',2,11)
INFO:root:Action : Reduce rule [options -> SOME] with ['SOME'] and goto state 7
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 26
DEBUG:root:Stack  : VARSCONFIG = options . LexToken(DECISIONSCONFIG,'#decisions',2,11)
INFO:root:Action : Reduce rule [configdirective -> VARSCONFIG = options] with ['#vars','=',None] and goto state 4
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective . LexToken(DECISIONSCONFIG,'#decisions',2,11)
DEBUG:root:Action : Shift and goto state 1
DEBUG:root:
DEBUG:root:State  : 1
DEBUG:root:Stack  : configdirective DECISIONSCONFIG . LexToken(=,'=',2,21)
DEBUG:root:Action : Shift and goto state 8
DEBUG:root:
DEBUG:root:State  : 8
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = . LexToken(ALL,'ALL',2,22)
DEBUG:root:Action : Shift and goto state 21
DEBUG:root:
DEBUG:root:State  : 21
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = ALL . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [options -> ALL] with ['ALL'] and goto state 8
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 25
DEBUG:root:Stack  : configdirective DECISIONSCONFIG = options . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [configdirective -> DECISIONSCONFIG = options] with ['#decisions','=',None] and goto state 5
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 3
DEBUG:root:Stack  : configdirective configdirective . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : configdirective configdirective empty . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [config -> empty] with [''] and goto state 3
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective configdirective config . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 10
DEBUG:root:Stack  : configdirective config . LexToken(INT,'int',4,27)
INFO:root:Action : Reduce rule [config -> configdirective config] with [None,None] and goto state 2
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(INT,'int',4,27)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config INT . LexToken(ID,'cont',4,31)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x10b5ce5d0> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config type . LexToken(ID,'cont',4,31)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config type push_type . LexToken(ID,'cont',4,31)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type ID . LexToken(=,'=',4,36)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type ID push_operand . LexToken(=,'=',4,36)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config type push_type ID push_operand empty . LexToken(=,'=',4,36)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config type push_type ID push_operand dimensionsOpt . LexToken(=,'=',4,36)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['cont',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config type push_type declarationB . LexToken(=,'=',4,36)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config type push_type declarationB = . LexToken(ICONST,'0',4,38)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config type push_type declarationB = push_operator . LexToken(ICONST,'0',4,38)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type push_type declarationB = push_operator empty . LexToken(ICONST,'0',4,38)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config type push_type declarationB = push_operator signB . LexToken(ICONST,'0',4,38)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config type push_type declarationB = push_operator signB ICONST . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config type push_type declarationB = push_operator signB ICONST seen_iconst . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['0','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4293f0> ('0')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config type push_type declarationB = push_operator signB constant . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','0'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type push_type declarationB = push_operator factor . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config type push_type declarationB = push_operator factor seen_factor . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config type push_type declarationB = push_operator factor seen_factor empty . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config type push_type declarationB = push_operator factor seen_factor termB . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config type push_type declarationB = push_operator term . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config type push_type declarationB = push_operator term seen_term . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config type push_type declarationB = push_operator term seen_term empty . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config type push_type declarationB = push_operator term seen_term expB . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config type push_type declarationB = push_operator exp . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config type push_type declarationB = push_operator exp empty . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config type push_type declarationB = push_operator exp expressionB . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config type push_type declarationB = push_operator expression . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config type push_type declarationB = push_operator expression empty . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config type push_type declarationB = push_operator expression superexpressionB . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config type push_type declarationB = push_operator superexpression . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config type push_type declarationB = push_operator superexpression empty . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config type push_type declarationB = push_operator superexpression hyperexpressionB . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression . LexToken(,,',',4,39)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(,,',',4,39)
DEBUG:root:Action : Shift and goto state 242
DEBUG:root:
DEBUG:root:State  : 242
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , . LexToken(ID,'cont2',4,41)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 263
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type . LexToken(ID,'cont2',4,41)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type ID . LexToken(=,'=',4,47)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type ID push_operand . LexToken(=,'=',4,47)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type ID push_operand empty . LexToken(=,'=',4,47)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type ID push_operand dimensionsOpt . LexToken(=,'=',4,47)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['cont2',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 275
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB . LexToken(=,'=',4,47)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = . LexToken(ICONST,'1',4,49)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator . LexToken(ICONST,'1',4,49)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator empty . LexToken(ICONST,'1',4,49)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator signB . LexToken(ICONST,'1',4,49)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator signB ICONST . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator signB ICONST seen_iconst . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 102
INFO:root:Result : <str @ 0x10b429418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator signB constant . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator factor . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator factor seen_factor . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator factor seen_factor empty . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator factor seen_factor termB . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator term . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator term seen_term . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator term seen_term empty . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator term seen_term expB . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator exp . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator exp empty . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator exp expressionB . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator expression . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator expression empty . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator expression superexpressionB . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator superexpression . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator superexpression empty . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator hyperexpression . LexToken(;,';',4,50)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',4,50)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 282
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign , repush_type declarationB declarationC . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationD -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 28
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config type push_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config type push_type declarationB declarationC . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config declaration . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : config declaration empty . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [''] and goto state 17
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declaration declarationsOpt . LexToken(DEF,'def',6,53)
INFO:root:Action : Reduce rule [declarationsOpt -> declaration declarationsOpt] with [None,None] and goto state 16
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',6,53)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(INT,'int',6,57)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF INT . LexToken(ID,'sum',6,61)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x10b5ce620> ('int')
DEBUG:root:
DEBUG:root:State  : 44
DEBUG:root:Stack  : config declarationsOpt DEF type . LexToken(ID,'sum',6,61)
INFO:root:Action : Reduce rule [returntype -> type] with ['int'] and goto state 117
INFO:root:Result : <str @ 0x10b5ce620> ('int')
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'sum',6,61)
DEBUG:root:Action : Shift and goto state 74
DEBUG:root:
DEBUG:root:State  : 74
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',6,64)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(FLOAT,'float',6,65)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( FLOAT . LexToken(ID,'a',6,71)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 113
INFO:root:Result : <str @ 0x10b8d6030> ('float')
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type . LexToken(ID,'a',6,71)
DEBUG:root:Action : Shift and goto state 206
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID . LexToken(,,',',6,72)
INFO:root:Action : Reduce rule [params -> type ID] with ['float','a'] and goto state 151
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 161
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params . LexToken(,,',',6,72)
DEBUG:root:Action : Shift and goto state 204
DEBUG:root:
DEBUG:root:State  : 204
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , . LexToken(INT,'int',6,74)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , INT . LexToken(ID,'b',6,78)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x10b5ce648> ('int')
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , type . LexToken(ID,'b',6,78)
DEBUG:root:Action : Shift and goto state 206
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , type ID . LexToken(),')',6,80)
INFO:root:Action : Reduce rule [params -> type ID] with ['int','b'] and goto state 151
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 238
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params . LexToken(),')',6,80)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params empty . LexToken(),')',6,80)
INFO:root:Action : Reduce rule [paramsB -> empty] with [''] and goto state 153
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 261
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params paramsB . LexToken(),')',6,80)
INFO:root:Action : Reduce rule [paramsB -> , params paramsB] with [',',None,None] and goto state 152
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 203
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params paramsB . LexToken(),')',6,80)
INFO:root:Action : Reduce rule [paramsOpt -> params paramsB] with [None,None] and goto state 33
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',6,80)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',6,82)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def','int','sum','(',None,')'] and goto state 32
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt func . LexToken({,'{',6,82)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt func { . LexToken(RETURN,'return',8,87)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { RETURN . LexToken(ICONST,'0',8,94)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt func { RETURN empty . LexToken(ICONST,'0',8,94)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt func { RETURN signB . LexToken(ICONST,'0',8,94)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt func { RETURN signB ICONST . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt func { RETURN signB ICONST seen_iconst . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['0','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4293f0> ('0')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt func { RETURN signB constant . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','0'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor empty . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor termB . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { RETURN term . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term empty . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term expB . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp empty . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp expressionB . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression empty . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression superexpressionB . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression empty . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression hyperexpressionB . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt func { RETURN hyperexpression . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [return_quadruple -> <empty>] with [] and goto state 150
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 126
DEBUG:root:Stack  : config declarationsOpt func { RETURN hyperexpression return_quadruple . LexToken(;,';',8,95)
INFO:root:Action : Reduce rule [return -> RETURN hyperexpression return_quadruple] with ['return',None,None] and goto state 149
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 61
DEBUG:root:Stack  : config declarationsOpt func { return . LexToken(;,';',8,95)
DEBUG:root:Action : Shift and goto state 103
DEBUG:root:
DEBUG:root:State  : 103
DEBUG:root:Stack  : config declarationsOpt func { return ; . LexToken(},'}',10,98)
INFO:root:Action : Reduce rule [instruction -> return ;] with [None,';'] and goto state 50
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt func { instruction . LexToken(},'}',10,98)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt func { instruction empty . LexToken(},'}',10,98)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt func { instruction instructionsOpt . LexToken(},'}',10,98)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt . LexToken(},'}',10,98)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt } . LexToken(DEF,'def',12,101)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt func block . LexToken(DEF,'def',12,101)
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt suprafunc . LexToken(DEF,'def',12,101)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF . LexToken(VOID,'void',12,105)
DEBUG:root:Action : Shift and goto state 42
DEBUG:root:
DEBUG:root:State  : 42
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF VOID . LexToken(ID,'miFunc',12,110)
INFO:root:Action : Reduce rule [returntype -> VOID] with ['void'] and goto state 116
INFO:root:Result : <str @ 0x10b8d6120> ('void')
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype . LexToken(ID,'miFunc',12,110)
DEBUG:root:Action : Shift and goto state 74
DEBUG:root:
DEBUG:root:State  : 74
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID . LexToken((,'(',12,116)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( . LexToken(INT,'int',12,117)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( INT . LexToken(ID,'cont3',12,121)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 112
INFO:root:Result : <str @ 0x10b5ce5f8> ('int')
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( type . LexToken(ID,'cont3',12,121)
DEBUG:root:Action : Shift and goto state 206
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( type ID . LexToken(),')',12,126)
INFO:root:Action : Reduce rule [params -> type ID] with ['int','cont3'] and goto state 151
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 161
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( params . LexToken(),')',12,126)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( params empty . LexToken(),')',12,126)
INFO:root:Action : Reduce rule [paramsB -> empty] with [''] and goto state 153
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 203
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( params paramsB . LexToken(),')',12,126)
INFO:root:Action : Reduce rule [paramsOpt -> params paramsB] with [None,None] and goto state 33
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( paramsOpt . LexToken(),')',12,126)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt suprafunc DEF returntype ID ( paramsOpt ) . LexToken({,'{',12,128)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def','void','miFunc','(',None,')'] and goto state 32
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt suprafunc func . LexToken({,'{',12,128)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt suprafunc func { . LexToken(ID,'sum',13,133)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID . LexToken((,'(',13,136)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand . LexToken((,'(',13,136)
DEBUG:root:Action : Shift and goto state 156
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( . LexToken(ICONST,'8',13,137)
INFO:root:Action : Reduce rule [pop_operand -> <empty>] with [] and goto state 58
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand . LexToken(ICONST,'8',13,137)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand empty . LexToken(ICONST,'8',13,137)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand signB . LexToken(ICONST,'8',13,137)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand signB ICONST . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand signB ICONST seen_iconst . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4e3058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand signB constant . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand factor . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand factor seen_factor . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand factor seen_factor empty . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand factor seen_factor termB . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand term . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand term seen_term . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand term seen_term empty . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand term seen_term expB . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand exp . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand exp empty . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand exp expressionB . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand expression . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand expression empty . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand expression superexpressionB . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand superexpression . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand superexpression empty . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand superexpression hyperexpressionB . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand hyperexpression . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand hyperexpression seen_param . LexToken(,,',',13,138)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 235
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB . LexToken(,,',',13,138)
DEBUG:root:Action : Shift and goto state 216
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , . LexToken(ICONST,'3',13,140)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , empty . LexToken(ICONST,'3',13,140)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , signB . LexToken(ICONST,'3',13,140)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , signB ICONST . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , signB ICONST seen_iconst . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4cff58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , signB constant . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , factor . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , factor seen_factor . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , factor seen_factor empty . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , factor seen_factor termB . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , term . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , term seen_term . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , term seen_term empty . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , term seen_term expB . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , exp . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , exp empty . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , exp expressionB . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , expression . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , expression empty . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , expression superexpressionB . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , superexpression . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , superexpression empty . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , superexpression hyperexpressionB . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , hyperexpression . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , hyperexpression seen_param . LexToken(),')',13,141)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 247
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , funccallB . LexToken(),')',13,141)
DEBUG:root:Action : Shift and goto state 215
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , funccallB ) . LexToken(;,';',13,142)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 145
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 264
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB , funccallB funccallC . LexToken(;,';',13,142)
INFO:root:Action : Reduce rule [funccallC -> , funccallB funccallC] with [',',None,None] and goto state 144
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 258
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand ( pop_operand funccallB funccallC . LexToken(;,';',13,142)
INFO:root:Action : Reduce rule [assignfunccallB -> ( pop_operand funccallB funccallC] with ['(',None,None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt suprafunc func { ID push_operand assignfunccallB . LexToken(;,';',13,142)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['sum',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt suprafunc func { assignfunccall . LexToken(;,';',13,142)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt suprafunc func { assignfunccall ; . LexToken(ID,'sum',14,147)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction . LexToken(ID,'sum',14,147)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID . LexToken((,'(',14,150)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand . LexToken((,'(',14,150)
DEBUG:root:Action : Shift and goto state 156
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( . LexToken(ICONST,'8',14,151)
INFO:root:Action : Reduce rule [pop_operand -> <empty>] with [] and goto state 58
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand . LexToken(ICONST,'8',14,151)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand empty . LexToken(ICONST,'8',14,151)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand signB . LexToken(ICONST,'8',14,151)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand signB ICONST . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand signB ICONST seen_iconst . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4e3058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand signB constant . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand factor . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand factor seen_factor . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand factor seen_factor empty . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand factor seen_factor termB . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term . LexToken(+,'+',14,153)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term . LexToken(+,'+',14,153)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + . LexToken(ICONST,'1',14,155)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator . LexToken(ICONST,'1',14,155)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator empty . LexToken(ICONST,'1',14,155)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator signB . LexToken(ICONST,'1',14,155)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator signB ICONST . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator signB ICONST seen_iconst . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 102
INFO:root:Result : <str @ 0x10b429418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator signB constant . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator factor . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator factor seen_factor . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator factor seen_factor empty . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator factor seen_factor termB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator term . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator term seen_term . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator term seen_term empty . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator term seen_term expB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term + push_operator exp . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand term seen_term expB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand exp . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand exp empty . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand exp expressionB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand expression . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand expression empty . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand expression superexpressionB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand superexpression . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand superexpression empty . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand superexpression hyperexpressionB . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand hyperexpression . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand hyperexpression seen_param . LexToken(,,',',14,156)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 235
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB . LexToken(,,',',14,156)
DEBUG:root:Action : Shift and goto state 216
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , . LexToken(ICONST,'3',14,158)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , empty . LexToken(ICONST,'3',14,158)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , signB . LexToken(ICONST,'3',14,158)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , signB ICONST . LexToken(/,'/',14,159)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , signB ICONST seen_iconst . LexToken(/,'/',14,159)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4cff58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , signB constant . LexToken(/,'/',14,159)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor . LexToken(/,'/',14,159)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor . LexToken(/,'/',14,159)
DEBUG:root:Action : Shift and goto state 176
DEBUG:root:
DEBUG:root:State  : 176
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / . LexToken(ICONST,'2',14,160)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator . LexToken(ICONST,'2',14,160)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator empty . LexToken(ICONST,'2',14,160)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator signB . LexToken(ICONST,'2',14,160)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator signB ICONST . LexToken(*,'*',14,162)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(*,'*',14,162)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 102
INFO:root:Result : <str @ 0x10b453f58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator signB constant . LexToken(*,'*',14,162)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor . LexToken(*,'*',14,162)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor . LexToken(*,'*',14,162)
DEBUG:root:Action : Shift and goto state 173
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * . LexToken(ICONST,'54',14,164)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator . LexToken(ICONST,'54',14,164)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'54',14,164)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'54',14,164)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['54','int'] and goto state 102
INFO:root:Result : <str @ 0x10b5ce6e8> ('54')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator signB constant . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','54'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator factor . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor * push_operator term . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 86
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator factor seen_factor termB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor / push_operator term . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , factor seen_factor termB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , term . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , term seen_term . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , term seen_term empty . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , term seen_term expB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , exp . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , exp empty . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , exp expressionB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , expression . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , expression empty . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , expression superexpressionB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , superexpression . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , superexpression empty . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , superexpression hyperexpressionB . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , hyperexpression . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , hyperexpression seen_param . LexToken(),')',14,166)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 247
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , funccallB . LexToken(),')',14,166)
DEBUG:root:Action : Shift and goto state 215
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , funccallB ) . LexToken(;,';',14,167)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 145
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 264
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB , funccallB funccallC . LexToken(;,';',14,167)
INFO:root:Action : Reduce rule [funccallC -> , funccallB funccallC] with [',',None,None] and goto state 144
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 258
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand ( pop_operand funccallB funccallC . LexToken(;,';',14,167)
INFO:root:Action : Reduce rule [assignfunccallB -> ( pop_operand funccallB funccallC] with ['(',None,None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction ID push_operand assignfunccallB . LexToken(;,';',14,167)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['sum',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction assignfunccall . LexToken(;,';',14,167)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction assignfunccall ; . LexToken(ID,'sum',15,171)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction . LexToken(ID,'sum',15,171)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID . LexToken((,'(',15,175)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand . LexToken((,'(',15,175)
DEBUG:root:Action : Shift and goto state 156
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( . LexToken(ICONST,'234',15,177)
INFO:root:Action : Reduce rule [pop_operand -> <empty>] with [] and goto state 58
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand . LexToken(ICONST,'234',15,177)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand empty . LexToken(ICONST,'234',15,177)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand signB . LexToken(ICONST,'234',15,177)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand signB ICONST . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand signB ICONST seen_iconst . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['234','int'] and goto state 102
INFO:root:Result : <str @ 0x10b5ce698> ('234')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand signB constant . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','234'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand factor . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand factor seen_factor . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand factor seen_factor empty . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand factor seen_factor termB . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand term . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand term seen_term . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand term seen_term empty . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand term seen_term expB . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand exp . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand exp empty . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand exp expressionB . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand expression . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand expression empty . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand expression superexpressionB . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand superexpression . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand superexpression empty . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand superexpression hyperexpressionB . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand hyperexpression . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand hyperexpression seen_param . LexToken(,,',',15,180)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 235
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB . LexToken(,,',',15,180)
DEBUG:root:Action : Shift and goto state 216
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , . LexToken(ICONST,'234',15,182)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , empty . LexToken(ICONST,'234',15,182)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , signB . LexToken(ICONST,'234',15,182)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , signB ICONST . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , signB ICONST seen_iconst . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['234','int'] and goto state 102
INFO:root:Result : <str @ 0x10b5ce710> ('234')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , signB constant . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','234'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , factor . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , factor seen_factor . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , factor seen_factor empty . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , factor seen_factor termB . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , term . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , term seen_term . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , term seen_term empty . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , term seen_term expB . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , exp . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , exp empty . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , exp expressionB . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , expression . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , expression empty . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , expression superexpressionB . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , superexpression . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , superexpression empty . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , superexpression hyperexpressionB . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , hyperexpression . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , hyperexpression seen_param . LexToken(),')',15,186)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 247
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , funccallB . LexToken(),')',15,186)
DEBUG:root:Action : Shift and goto state 215
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , funccallB ) . LexToken(;,';',15,187)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 145
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 264
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB , funccallB funccallC . LexToken(;,';',15,187)
INFO:root:Action : Reduce rule [funccallC -> , funccallB funccallC] with [',',None,None] and goto state 144
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 258
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand ( pop_operand funccallB funccallC . LexToken(;,';',15,187)
INFO:root:Action : Reduce rule [assignfunccallB -> ( pop_operand funccallB funccallC] with ['(',None,None,None] and goto state 59
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction ID push_operand assignfunccallB . LexToken(;,';',15,187)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['sum',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction assignfunccall . LexToken(;,';',15,187)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction assignfunccall ; . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction instruction . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction instruction empty . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction instruction instructionsOpt . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instruction instructionsOpt . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instruction instructionsOpt . LexToken(},'}',16,189)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instructionsOpt . LexToken(},'}',16,189)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt suprafunc func { instructionsOpt } . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt suprafunc func block . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 31
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt suprafunc suprafunc . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt suprafunc suprafunc empty . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt suprafunc suprafunc funcsOpt . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt suprafunc funcsOpt . LexToken(MAIN,'main',18,192)
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',18,192)
DEBUG:root:Action : Shift and goto state 38
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',18,197)
DEBUG:root:Action : Shift and goto state 47
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',18,198)
DEBUG:root:Action : Shift and goto state 80
DEBUG:root:
DEBUG:root:State  : 80
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',18,200)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { . LexToken(#,'#',19,204)
DEBUG:root:Action : Shift and goto state 55
DEBUG:root:
DEBUG:root:State  : 55
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # . LexToken(TRACK,'track',19,205)
DEBUG:root:Action : Shift and goto state 101
DEBUG:root:
DEBUG:root:State  : 101
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # TRACK . LexToken(ID,'cont',19,211)
INFO:root:Action : Reduce rule [localvardirectiveB -> TRACK] with ['track'] and goto state 134
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 102
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # localvardirectiveB . LexToken(ID,'cont',19,211)
DEBUG:root:Action : Shift and goto state 152
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { # localvardirectiveB ID . LexToken(#,'#',20,218)
INFO:root:Action : Reduce rule [localvardirective -> # localvardirectiveB ID] with ['#',None,'cont'] and goto state 133
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 56
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { localvardirective . LexToken(#,'#',20,218)
INFO:root:Action : Reduce rule [localdirective -> localvardirective] with [None] and goto state 61
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { localdirective . LexToken(#,'#',20,218)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 56
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction . LexToken(#,'#',20,218)
DEBUG:root:Action : Shift and goto state 55
DEBUG:root:
DEBUG:root:State  : 55
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # . LexToken(TRACK,'track',20,219)
DEBUG:root:Action : Shift and goto state 101
DEBUG:root:
DEBUG:root:State  : 101
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # TRACK . LexToken(ID,'cont2',20,225)
INFO:root:Action : Reduce rule [localvardirectiveB -> TRACK] with ['track'] and goto state 134
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 102
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # localvardirectiveB . LexToken(ID,'cont2',20,225)
DEBUG:root:Action : Shift and goto state 152
DEBUG:root:
DEBUG:root:State  : 152
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction # localvardirectiveB ID . LexToken(WHILE,'while',21,233)
INFO:root:Action : Reduce rule [localvardirective -> # localvardirectiveB ID] with ['#',None,'cont2'] and goto state 133
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 56
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction localvardirective . LexToken(WHILE,'while',21,233)
INFO:root:Action : Reduce rule [localdirective -> localvardirective] with [None] and goto state 61
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction localdirective . LexToken(WHILE,'while',21,233)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 56
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction . LexToken(WHILE,'while',21,233)
DEBUG:root:Action : Shift and goto state 52
DEBUG:root:
DEBUG:root:State  : 52
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE . LexToken((,'(',21,238)
INFO:root:Action : Reduce rule [init_while -> <empty>] with [] and goto state 109
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 97
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while . LexToken((,'(',21,238)
DEBUG:root:Action : Shift and goto state 147
DEBUG:root:
DEBUG:root:State  : 147
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( . LexToken(ID,'cont2',21,239)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( ID . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( ID seen_ID . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( ID seen_ID empty . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( ID seen_ID dimensionsOpt . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont2','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( factor . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( factor seen_factor . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( factor seen_factor empty . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( factor seen_factor termB . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( term . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( term seen_term . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( term seen_term empty . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( term seen_term expB . LexToken(<,'<',21,245)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp . LexToken(<,'<',21,245)
DEBUG:root:Action : Shift and goto state 139
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < . LexToken(ICONST,'10',21,247)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator . LexToken(ICONST,'10',21,247)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator empty . LexToken(ICONST,'10',21,247)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator signB . LexToken(ICONST,'10',21,247)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator signB ICONST . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator signB ICONST seen_iconst . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['10','int'] and goto state 102
INFO:root:Result : <str @ 0x10b5ce788> ('10')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator signB constant . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','10'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator factor . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator factor seen_factor . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator factor seen_factor empty . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator factor seen_factor termB . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator term . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator term seen_term . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator term seen_term empty . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator term seen_term expB . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 224
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp < push_operator exp . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [expressionB -> < push_operator exp] with ['<',None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( exp expressionB . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( expression . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( expression empty . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( expression superexpressionB . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( superexpression . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( superexpression empty . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( superexpression hyperexpressionB . LexToken(),')',21,249)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 194
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression . LexToken(),')',21,249)
DEBUG:root:Action : Shift and goto state 228
DEBUG:root:
DEBUG:root:State  : 228
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) . LexToken({,'{',21,251)
INFO:root:Action : Reduce rule [while_quadruple -> <empty>] with [] and goto state 110
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 253
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple . LexToken({,'{',21,251)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { . LexToken(ID,'cont2',22,259)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID . LexToken(=,'=',22,265)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand . LexToken(=,'=',22,265)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand empty . LexToken(=,'=',22,265)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt . LexToken(=,'=',22,265)
DEBUG:root:Action : Shift and goto state 200
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = . LexToken(ID,'cont2',22,267)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator . LexToken(ID,'cont2',22,267)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator ID . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont2','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator factor . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term . LexToken(+,'+',22,273)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(+,'+',22,273)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + . LexToken(ICONST,'1',22,275)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator . LexToken(ICONST,'1',22,275)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator empty . LexToken(ICONST,'1',22,275)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB . LexToken(ICONST,'1',22,275)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST seen_iconst . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 102
INFO:root:Result : <str @ 0x10b429418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator signB constant . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor empty . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor termB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term empty . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term expB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term + push_operator exp . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 39
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand assignB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { ID push_operand assignfunccallB . LexToken(;,';',22,276)
INFO:root:Action : Reduce rule [assignfunccall -> ID push_operand assignfunccallB] with ['cont2',None,None] and goto state 57
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 51
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { assignfunccall . LexToken(;,';',22,276)
DEBUG:root:Action : Shift and goto state 96
DEBUG:root:
DEBUG:root:State  : 96
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { assignfunccall ; . LexToken(},'}',23,280)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 48
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { instruction . LexToken(},'}',23,280)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { instruction empty . LexToken(},'}',23,280)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { instruction instructionsOpt . LexToken(},'}',23,280)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { instructionsOpt . LexToken(},'}',23,280)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple { instructionsOpt } . LexToken(FORGETDECISION,'#forgetdecision',24,284)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 267
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple block . LexToken(FORGETDECISION,'#forgetdecision',24,284)
INFO:root:Action : Reduce rule [endwhile_quadruple -> <empty>] with [] and goto state 111
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 277
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple . LexToken(FORGETDECISION,'#forgetdecision',24,284)
INFO:root:Action : Reduce rule [whileloop -> WHILE init_while ( hyperexpression ) while_quadruple block endwhile_quadruple] with ['while',None,'(',None,')',None,None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 54
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction whileloop . LexToken(FORGETDECISION,'#forgetdecision',24,284)
INFO:root:Action : Reduce rule [instruction -> whileloop] with [None] and goto state 54
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction . LexToken(FORGETDECISION,'#forgetdecision',24,284)
DEBUG:root:Action : Shift and goto state 65
DEBUG:root:
DEBUG:root:State  : 65
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction FORGETDECISION . LexToken(FOR,'for',25,302)
INFO:root:Action : Reduce rule [localdecisiondirective -> FORGETDECISION] with [<str @ 0x10b5c88f0>] and goto state 138
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 72
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction localdecisiondirective . LexToken(FOR,'for',25,302)
INFO:root:Action : Reduce rule [localdirective -> localdecisiondirective] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 66
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction localdirective . LexToken(FOR,'for',25,302)
INFO:root:Action : Reduce rule [instruction -> localdirective] with [None] and goto state 56
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction . LexToken(FOR,'for',25,302)
DEBUG:root:Action : Shift and goto state 62
DEBUG:root:
DEBUG:root:State  : 62
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR . LexToken((,'(',25,306)
DEBUG:root:Action : Shift and goto state 104
DEBUG:root:
DEBUG:root:State  : 104
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( . LexToken(ID,'cont2',25,307)
DEBUG:root:Action : Shift and goto state 153
DEBUG:root:
DEBUG:root:State  : 153
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID . LexToken(=,'=',25,312)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand . LexToken(=,'=',25,312)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand empty . LexToken(=,'=',25,312)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 233
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt . LexToken(=,'=',25,312)
DEBUG:root:Action : Shift and goto state 256
DEBUG:root:
DEBUG:root:State  : 256
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = . LexToken(ICONST,'0',25,313)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 268
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator . LexToken(ICONST,'0',25,313)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'0',25,313)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'0',25,313)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator signB ICONST . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['0','int'] and goto state 102
INFO:root:Result : <str @ 0x10b4293f0> ('0')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator signB constant . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','0'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator factor . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator term . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator exp . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator expression . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 278
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 284
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',25,314)
INFO:root:Action : Reduce rule [assign -> ID push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['cont2',None,'','=',None,None,None] and goto state 38
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 154
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign . LexToken(;,';',25,314)
DEBUG:root:Action : Shift and goto state 198
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; . LexToken(ID,'cont',25,316)
INFO:root:Action : Reduce rule [init_while -> <empty>] with [] and goto state 109
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 234
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while . LexToken(ID,'cont',25,316)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while ID . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while ID seen_ID . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while ID seen_ID empty . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while ID seen_ID dimensionsOpt . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while factor . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while factor seen_factor . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while factor seen_factor empty . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while factor seen_factor termB . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while term . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while term seen_term . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while term seen_term empty . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while term seen_term expB . LexToken(<,'<',25,320)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp . LexToken(<,'<',25,320)
DEBUG:root:Action : Shift and goto state 139
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < . LexToken(ID,'cont2',25,321)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 190
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator . LexToken(ID,'cont2',25,321)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator ID . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator ID seen_ID . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator ID seen_ID empty . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator ID seen_ID dimensionsOpt . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont2','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator factor . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator factor seen_factor . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator factor seen_factor empty . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator factor seen_factor termB . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator term . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator term seen_term . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator term seen_term empty . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator term seen_term expB . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 224
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp < push_operator exp . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [expressionB -> < push_operator exp] with ['<',None,None] and goto state 71
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while exp expressionB . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while expression . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while expression empty . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while expression superexpressionB . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while superexpression . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while superexpression empty . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while superexpression hyperexpressionB . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 257
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression . LexToken(;,';',25,326)
INFO:root:Action : Reduce rule [for_quadruple -> <empty>] with [] and goto state 119
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 269
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple . LexToken(;,';',25,326)
DEBUG:root:Action : Shift and goto state 279
DEBUG:root:
DEBUG:root:State  : 279
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; . LexToken(ID,'cont',25,328)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; ID . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; ID seen_ID . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; ID seen_ID empty . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; ID seen_ID dimensionsOpt . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; factor . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; factor seen_factor . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; factor seen_factor empty . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; factor seen_factor termB . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term . LexToken(+,'+',25,332)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term . LexToken(+,'+',25,332)
DEBUG:root:Action : Shift and goto state 182
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + . LexToken(ICONST,'1',25,333)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator . LexToken(ICONST,'1',25,333)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator empty . LexToken(ICONST,'1',25,333)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator signB . LexToken(ICONST,'1',25,333)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator signB ICONST . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 97
INFO:root:Result : <str @ 0x10b3bd3c8> ('int')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator signB ICONST seen_iconst . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 102
INFO:root:Result : <str @ 0x10b429418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator signB constant . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator factor . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator factor seen_factor . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator factor seen_factor empty . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator factor seen_factor termB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator term . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator term seen_term . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator term seen_term empty . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator term seen_term expB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term + push_operator exp . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 81
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; term seen_term expB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; exp . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; exp empty . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; exp expressionB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; expression . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; expression empty . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; expression superexpressionB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; superexpression . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; superexpression empty . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; superexpression hyperexpressionB . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 285
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression . LexToken(),')',25,334)
INFO:root:Action : Reduce rule [for_expression -> <empty>] with [] and goto state 120
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 288
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression . LexToken(),')',25,334)
DEBUG:root:Action : Shift and goto state 289
DEBUG:root:
DEBUG:root:State  : 289
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) . LexToken({,'{',25,336)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { . LexToken(PRINT,'print',26,342)
DEBUG:root:Action : Shift and goto state 53
DEBUG:root:
DEBUG:root:State  : 53
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT . LexToken((,'(',26,347)
DEBUG:root:Action : Shift and goto state 98
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( . LexToken(SCONST,'"contador= "',26,348)
DEBUG:root:Action : Shift and goto state 148
DEBUG:root:
DEBUG:root:State  : 148
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST . LexToken(,,',',26,360)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 195
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand . LexToken(,,',',26,360)
INFO:root:Action : Reduce rule [print_quadruple -> <empty>] with [] and goto state 130
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 229
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple . LexToken(,,',',26,360)
DEBUG:root:Action : Shift and goto state 231
DEBUG:root:
DEBUG:root:State  : 231
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , . LexToken(ID,'cont',26,362)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , ID . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 93
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , ID seen_ID . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , ID seen_ID empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 41
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , ID seen_ID dimensionsOpt . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['cont','',''] and goto state 91
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , factor . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , factor seen_factor . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , factor seen_factor empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , factor seen_factor termB . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , term . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , term seen_term . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , term seen_term empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , term seen_term expB . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , exp . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , exp empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , exp expressionB . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , expression . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , expression empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , expression superexpressionB . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , superexpression . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , superexpression empty . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , superexpression hyperexpressionB . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 149
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , hyperexpression . LexToken(),')',26,366)
INFO:root:Action : Reduce rule [print_quadruple -> <empty>] with [] and goto state 130
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , hyperexpression print_quadruple . LexToken(),')',26,366)
DEBUG:root:Action : Shift and goto state 230
DEBUG:root:
DEBUG:root:State  : 230
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , hyperexpression print_quadruple ) . LexToken(;,';',26,367)
INFO:root:Action : Reduce rule [outputC -> )] with [')'] and goto state 131
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 232
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , hyperexpression print_quadruple outputC . LexToken(;,';',26,367)
INFO:root:Action : Reduce rule [outputB -> hyperexpression print_quadruple outputC] with [None,None,None] and goto state 129
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 255
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple , outputB . LexToken(;,';',26,367)
INFO:root:Action : Reduce rule [outputC -> , outputB] with [',',None] and goto state 132
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 254
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( SCONST push_operand print_quadruple outputC . LexToken(;,';',26,367)
INFO:root:Action : Reduce rule [outputB -> SCONST push_operand print_quadruple outputC] with ['"contador= "',None,None,None] and goto state 128
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 150
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { PRINT ( outputB . LexToken(;,';',26,367)
INFO:root:Action : Reduce rule [output -> PRINT ( outputB] with ['print','(',None] and goto state 127
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { output . LexToken(;,';',26,367)
DEBUG:root:Action : Shift and goto state 110
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { output ; . LexToken(},'}',27,371)
INFO:root:Action : Reduce rule [instruction -> output ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { instruction . LexToken(},'}',27,371)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { instruction empty . LexToken(},'}',27,371)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { instruction instructionsOpt . LexToken(},'}',27,371)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { instructionsOpt . LexToken(},'}',27,371)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) { instructionsOpt } . LexToken(PRINT,'print',27,373)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 290
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block . LexToken(PRINT,'print',27,373)
INFO:root:Action : Reduce rule [endfor_quadruple -> <empty>] with [] and goto state 121
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 291
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple . LexToken(PRINT,'print',27,373)
INFO:root:Action : Reduce rule [forloop -> FOR ( assign ; init_while hyperexpression for_quadruple ; hyperexpression for_expression ) block endfor_quadruple] with ['for','(',None,';',None,None,None,';',None,None,')',None,None] and goto state 118
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction forloop . LexToken(PRINT,'print',27,373)
INFO:root:Action : Reduce rule [instruction -> forloop] with [None] and goto state 55
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction . LexToken(PRINT,'print',27,373)
DEBUG:root:Action : Shift and goto state 53
DEBUG:root:
DEBUG:root:State  : 53
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT . LexToken((,'(',27,378)
DEBUG:root:Action : Shift and goto state 98
DEBUG:root:
DEBUG:root:State  : 98
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( . LexToken(ID,'miFunc',27,379)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID . LexToken((,'(',27,385)
DEBUG:root:Action : Shift and goto state 131
DEBUG:root:
DEBUG:root:State  : 131
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( . LexToken(SCONST,'"hola"',27,386)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( empty . LexToken(SCONST,'"hola"',27,386)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 95
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( signB . LexToken(SCONST,'"hola"',27,386)
DEBUG:root:Action : Shift and goto state 121
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( signB SCONST . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [seen_sconst -> <empty>] with [] and goto state 98
INFO:root:Result : <str @ 0x10b4c8d80> ('string')
DEBUG:root:
DEBUG:root:State  : 168
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( signB SCONST seen_sconst . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [constant -> SCONST seen_sconst] with ['"hola"','string'] and goto state 103
INFO:root:Result : <str @ 0x10b8d63c0> ('"hola"')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( signB constant . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','"hola"'] and goto state 88
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( factor . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( factor seen_factor . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( factor seen_factor empty . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( factor seen_factor termB . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( term . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( term seen_term . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( term seen_term empty . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( term seen_term expB . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( exp . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( exp empty . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( exp expressionB . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( expression . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( expression empty . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( expression superexpressionB . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( superexpression . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( superexpression empty . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( superexpression hyperexpressionB . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( hyperexpression . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( hyperexpression seen_param . LexToken(),')',27,392)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 141
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( funccallB . LexToken(),')',27,392)
DEBUG:root:Action : Shift and goto state 215
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( funccallB ) . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 145
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 214
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( ID ( funccallB funccallC . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [funccall -> ID ( funccallB funccallC] with ['miFunc','(',None,None] and goto state 140
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 88
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( funccall . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [factor -> funccall] with [None] and goto state 90
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor seen_factor . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 175
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor seen_factor empty . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 87
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( factor seen_factor termB . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 79
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term seen_term . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 185
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term seen_term empty . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 82
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 184
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( term seen_term expB . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 78
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp empty . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 77
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( exp expressionB . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 70
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression empty . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 69
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( expression superexpressionB . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 67
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression empty . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 66
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( superexpression hyperexpressionB . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 64
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 149
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( hyperexpression . LexToken(),')',27,393)
INFO:root:Action : Reduce rule [print_quadruple -> <empty>] with [] and goto state 130
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 196
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( hyperexpression print_quadruple . LexToken(),')',27,393)
DEBUG:root:Action : Shift and goto state 230
DEBUG:root:
DEBUG:root:State  : 230
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( hyperexpression print_quadruple ) . LexToken(;,';',27,394)
INFO:root:Action : Reduce rule [outputC -> )] with [')'] and goto state 131
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 232
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( hyperexpression print_quadruple outputC . LexToken(;,';',27,394)
INFO:root:Action : Reduce rule [outputB -> hyperexpression print_quadruple outputC] with [None,None,None] and goto state 129
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 150
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction PRINT ( outputB . LexToken(;,';',27,394)
INFO:root:Action : Reduce rule [output -> PRINT ( outputB] with ['print','(',None] and goto state 127
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 73
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction output . LexToken(;,';',27,394)
DEBUG:root:Action : Shift and goto state 110
DEBUG:root:
DEBUG:root:State  : 110
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction output ; . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instruction -> output ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 59
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction empty . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 37
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instruction instructionsOpt . LexToken(},'}',29,397)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 36
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt . LexToken(},'}',29,397)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) { instructionsOpt } . $end
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 35
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 118
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) block . $end
INFO:root:Action : Reduce rule [main -> MAIN ( ) block] with ['main','(',')',None] and goto state 30
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 39
DEBUG:root:Stack  : config declarationsOpt funcsOpt main . $end
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 154
INFO:root:Result : <str @ 0x10b3bd508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt funcsOpt main empty . $end
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 48
DEBUG:root:Stack  : config declarationsOpt funcsOpt main funcsOpt . $end
INFO:root:Action : Reduce rule [body -> declarationsOpt funcsOpt main funcsOpt] with [None,None,None,None] and goto state 13
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 12
DEBUG:root:Stack  : config body . $end
INFO:root:Action : Reduce rule [program -> config body] with [None,None] and goto state 1
INFO:root:Result : <NoneType @ 0x10b31d7f8> (None)
DEBUG:root:
DEBUG:root:State  : 5
DEBUG:root:Stack  : program . $end
INFO:root:Done   : Returning <NoneType @ 0x10b31d7f8> (None)
INFO:root:PLY: PARSE DEBUG END
