INFO:root:PLY: PARSE DEBUG START
DEBUG:root:
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(INT,'int',1,0)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 7
DEBUG:root:Stack  : empty . LexToken(INT,'int',1,0)
INFO:root:Action : Reduce rule [config -> empty] with [''] and goto state 3
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 6
DEBUG:root:Stack  : config . LexToken(INT,'int',1,0)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config INT . LexToken(ID,'j',1,4)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 114
INFO:root:Result : <str @ 0x10f7de698> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config type . LexToken(ID,'j',1,4)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config type push_type . LexToken(ID,'j',1,4)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type ID . LexToken(,,',',1,5)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type ID push_operand . LexToken(,,',',1,5)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config type push_type ID push_operand empty . LexToken(,,',',1,5)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config type push_type ID push_operand dimensionsOpt . LexToken(,,',',1,5)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['j',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config type push_type declarationB . LexToken(,,',',1,5)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config type push_type declarationB , . LexToken(ID,'k',1,7)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config type push_type declarationB , repush_type . LexToken(ID,'k',1,7)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type declarationB , repush_type ID . LexToken(,,',',1,8)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type declarationB , repush_type ID push_operand . LexToken(,,',',1,8)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config type push_type declarationB , repush_type ID push_operand empty . LexToken(,,',',1,8)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config type push_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(,,',',1,8)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['k',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB . LexToken(,,',',1,8)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , . LexToken(ID,'l',1,10)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type . LexToken(ID,'l',1,10)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type ID . LexToken(=,'=',1,12)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type ID push_operand . LexToken(=,'=',1,12)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type ID push_operand empty . LexToken(=,'=',1,12)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(=,'=',1,12)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['l',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB . LexToken(=,'=',1,12)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = . LexToken(ICONST,'8',1,14)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator . LexToken(ICONST,'8',1,14)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator empty . LexToken(ICONST,'8',1,14)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator signB . LexToken(ICONST,'8',1,14)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator signB ICONST . LexToken(*,'*',1,16)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator signB ICONST seen_iconst . LexToken(*,'*',1,16)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6ef058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator signB constant . LexToken(*,'*',1,16)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor . LexToken(*,'*',1,16)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor . LexToken(*,'*',1,16)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * . LexToken(ICONST,'2',1,18)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator . LexToken(ICONST,'2',1,18)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'2',1,18)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'2',1,18)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator signB ICONST . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator signB constant . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator factor . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor * push_operator term . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator factor seen_factor termB . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term . LexToken(-,'-',1,20)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term . LexToken(-,'-',1,20)
DEBUG:root:Action : Shift and goto state 181
DEBUG:root:
DEBUG:root:State  : 181
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - . LexToken(ICONST,'1',1,22)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 219
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator . LexToken(ICONST,'1',1,22)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator empty . LexToken(ICONST,'1',1,22)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator signB . LexToken(ICONST,'1',1,22)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator signB ICONST . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator signB ICONST seen_iconst . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 104
INFO:root:Result : <str @ 0x10f635418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator signB constant . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator factor . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator factor seen_factor . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator factor seen_factor empty . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator factor seen_factor termB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator term . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator term seen_term . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator term seen_term empty . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator term seen_term expB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 249
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term - push_operator exp . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [expB -> - push_operator exp] with ['-',None,None] and goto state 82
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator term seen_term expB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator exp . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator exp empty . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator exp expressionB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator expression . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator expression empty . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator expression superexpressionB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator superexpression . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator superexpression empty . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator hyperexpression . LexToken(;,';',1,23)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',1,23)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB , repush_type declarationB declarationC . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config type push_type declarationB , repush_type declarationB declarationC . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config type push_type declarationB declarationC . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 19
DEBUG:root:Stack  : config declaration . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 20
DEBUG:root:Stack  : config declaration empty . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationsOpt -> empty] with [''] and goto state 17
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 36
DEBUG:root:Stack  : config declaration declarationsOpt . LexToken(DEF,'def',2,25)
INFO:root:Action : Reduce rule [declarationsOpt -> declaration declarationsOpt] with [None,None] and goto state 16
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 13
DEBUG:root:Stack  : config declarationsOpt . LexToken(DEF,'def',2,25)
DEBUG:root:Action : Shift and goto state 33
DEBUG:root:
DEBUG:root:State  : 33
DEBUG:root:Stack  : config declarationsOpt DEF . LexToken(FLOAT,'float',2,29)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt DEF FLOAT . LexToken(ID,'suma',2,35)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 115
INFO:root:Result : <str @ 0x10f7ecde0> ('float')
DEBUG:root:
DEBUG:root:State  : 44
DEBUG:root:Stack  : config declarationsOpt DEF type . LexToken(ID,'suma',2,35)
INFO:root:Action : Reduce rule [returntype -> type] with ['float'] and goto state 119
INFO:root:Result : <str @ 0x10f7ecde0> ('float')
DEBUG:root:
DEBUG:root:State  : 43
DEBUG:root:Stack  : config declarationsOpt DEF returntype . LexToken(ID,'suma',2,35)
DEBUG:root:Action : Shift and goto state 74
DEBUG:root:
DEBUG:root:State  : 74
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID . LexToken((,'(',2,39)
DEBUG:root:Action : Shift and goto state 111
DEBUG:root:
DEBUG:root:State  : 111
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( . LexToken(INT,'int',2,40)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( INT . LexToken(ID,'x',2,44)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 114
INFO:root:Result : <str @ 0x10f7de760> ('int')
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type . LexToken(ID,'x',2,44)
DEBUG:root:Action : Shift and goto state 206
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( type ID . LexToken(,,',',2,45)
INFO:root:Action : Reduce rule [params -> type ID] with ['int','x'] and goto state 153
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 158
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params . LexToken(,,',',2,45)
DEBUG:root:Action : Shift and goto state 204
DEBUG:root:
DEBUG:root:State  : 204
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , . LexToken(FLOAT,'float',2,47)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:
DEBUG:root:State  : 17
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , FLOAT . LexToken(ID,'y',2,53)
INFO:root:Action : Reduce rule [type -> FLOAT] with ['float'] and goto state 115
INFO:root:Result : <str @ 0x10f7ecf30> ('float')
DEBUG:root:
DEBUG:root:State  : 160
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , type . LexToken(ID,'y',2,53)
DEBUG:root:Action : Shift and goto state 206
DEBUG:root:
DEBUG:root:State  : 206
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , type ID . LexToken(),')',2,54)
INFO:root:Action : Reduce rule [params -> type ID] with ['float','y'] and goto state 153
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 238
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params . LexToken(),')',2,54)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 205
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params empty . LexToken(),')',2,54)
INFO:root:Action : Reduce rule [paramsB -> empty] with [''] and goto state 155
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 261
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params , params paramsB . LexToken(),')',2,54)
INFO:root:Action : Reduce rule [paramsB -> , params paramsB] with [',',None,None] and goto state 154
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 203
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( params paramsB . LexToken(),')',2,54)
INFO:root:Action : Reduce rule [paramsOpt -> params paramsB] with [None,None] and goto state 34
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 157
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt . LexToken(),')',2,54)
DEBUG:root:Action : Shift and goto state 202
DEBUG:root:
DEBUG:root:State  : 202
DEBUG:root:Stack  : config declarationsOpt DEF returntype ID ( paramsOpt ) . LexToken({,'{',2,55)
INFO:root:Action : Reduce rule [func -> DEF returntype ID ( paramsOpt )] with ['def','float','suma','(',None,')'] and goto state 33
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 32
DEBUG:root:Stack  : config declarationsOpt func . LexToken({,'{',2,55)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt func { . LexToken(RETURN,'return',3,59)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:
DEBUG:root:State  : 49
DEBUG:root:Stack  : config declarationsOpt func { RETURN . LexToken(ID,'y',3,66)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt func { RETURN ID . LexToken(*,'*',3,68)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt func { RETURN ID seen_ID . LexToken(*,'*',3,68)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt func { RETURN ID seen_ID empty . LexToken(*,'*',3,68)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt func { RETURN ID seen_ID dimensionsOpt . LexToken(*,'*',3,68)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['y','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor . LexToken(*,'*',3,68)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor . LexToken(*,'*',3,68)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * . LexToken(ID,'x',3,70)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator . LexToken(ID,'x',3,70)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator ID . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator ID seen_ID . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator ID seen_ID empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator ID seen_ID dimensionsOpt . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['x','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator factor . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator factor seen_factor . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor * push_operator term . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt func { RETURN factor seen_factor termB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt func { RETURN term . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt func { RETURN term seen_term expB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt func { RETURN exp expressionB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt func { RETURN expression superexpressionB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression empty . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt func { RETURN superexpression hyperexpressionB . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 85
DEBUG:root:Stack  : config declarationsOpt func { RETURN hyperexpression . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [return_quadruple -> <empty>] with [] and goto state 152
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 126
DEBUG:root:Stack  : config declarationsOpt func { RETURN hyperexpression return_quadruple . LexToken(;,';',3,71)
INFO:root:Action : Reduce rule [return -> RETURN hyperexpression return_quadruple] with ['return',None,None] and goto state 151
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 60
DEBUG:root:Stack  : config declarationsOpt func { return . LexToken(;,';',3,71)
DEBUG:root:Action : Shift and goto state 102
DEBUG:root:
DEBUG:root:State  : 102
DEBUG:root:Stack  : config declarationsOpt func { return ; . LexToken(},'}',4,73)
INFO:root:Action : Reduce rule [instruction -> return ;] with [None,';'] and goto state 51
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt func { instruction . LexToken(},'}',4,73)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt func { instruction empty . LexToken(},'}',4,73)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 38
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt func { instruction instructionsOpt . LexToken(},'}',4,73)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt . LexToken(},'}',4,73)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt func { instructionsOpt } . LexToken(MAIN,'main',6,76)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 36
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 41
DEBUG:root:Stack  : config declarationsOpt func block . LexToken(MAIN,'main',6,76)
INFO:root:Action : Reduce rule [suprafunc -> func block] with [None,None] and goto state 32
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 30
DEBUG:root:Stack  : config declarationsOpt suprafunc . LexToken(MAIN,'main',6,76)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 34
DEBUG:root:Stack  : config declarationsOpt suprafunc empty . LexToken(MAIN,'main',6,76)
INFO:root:Action : Reduce rule [funcsOpt -> empty] with [''] and goto state 15
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 37
DEBUG:root:Stack  : config declarationsOpt suprafunc funcsOpt . LexToken(MAIN,'main',6,76)
INFO:root:Action : Reduce rule [funcsOpt -> suprafunc funcsOpt] with [None,None] and goto state 14
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 31
DEBUG:root:Stack  : config declarationsOpt funcsOpt . LexToken(MAIN,'main',6,76)
DEBUG:root:Action : Shift and goto state 38
DEBUG:root:
DEBUG:root:State  : 38
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN . LexToken((,'(',6,80)
DEBUG:root:Action : Shift and goto state 47
DEBUG:root:
DEBUG:root:State  : 47
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( . LexToken(),')',6,81)
DEBUG:root:Action : Shift and goto state 80
DEBUG:root:
DEBUG:root:State  : 80
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) . LexToken({,'{',6,83)
INFO:root:Action : Reduce rule [seen_main -> <empty>] with [] and goto state 31
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 118
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main . LexToken({,'{',6,83)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { . LexToken(INT,'int',7,87)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { INT . LexToken(ID,'b',7,91)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 114
INFO:root:Result : <str @ 0x10f7de738> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type . LexToken(ID,'b',7,91)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type . LexToken(ID,'b',7,91)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type ID . LexToken(=,'=',7,93)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type ID push_operand . LexToken(=,'=',7,93)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type ID push_operand empty . LexToken(=,'=',7,93)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type ID push_operand dimensionsOpt . LexToken(=,'=',7,93)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['b',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB . LexToken(=,'=',7,93)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = . LexToken(ICONST,'8',7,95)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator . LexToken(ICONST,'8',7,95)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator empty . LexToken(ICONST,'8',7,95)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator signB . LexToken(ICONST,'8',7,95)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator signB ICONST . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator signB ICONST seen_iconst . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6ef058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator signB constant . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator factor . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator factor seen_factor . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator factor seen_factor empty . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator factor seen_factor termB . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator term . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator term seen_term . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator term seen_term empty . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator term seen_term expB . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator exp . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator exp empty . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator exp expressionB . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator expression . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator expression empty . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator expression superexpressionB . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator superexpression . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator superexpression empty . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator hyperexpression . LexToken(;,';',7,96)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',7,96)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(INT,'int',8,99)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(INT,'int',8,99)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { type push_type declarationB declarationC . LexToken(INT,'int',8,99)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { declaration . LexToken(INT,'int',8,99)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 53
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction . LexToken(INT,'int',8,99)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction INT . LexToken(ID,'x',8,103)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 114
INFO:root:Result : <str @ 0x10f7de7b0> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type . LexToken(ID,'x',8,103)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type . LexToken(ID,'x',8,103)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type ID . LexToken(,,',',8,104)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type ID push_operand . LexToken(,,',',8,104)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type ID push_operand empty . LexToken(,,',',8,104)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type ID push_operand dimensionsOpt . LexToken(,,',',8,104)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['x',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB . LexToken(,,',',8,104)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , . LexToken(ID,'y',8,106)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type . LexToken(ID,'y',8,106)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type ID . LexToken(,,',',8,107)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type ID push_operand . LexToken(,,',',8,107)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type ID push_operand empty . LexToken(,,',',8,107)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(,,',',8,107)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['y',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB . LexToken(,,',',8,107)
DEBUG:root:Action : Shift and goto state 76
DEBUG:root:
DEBUG:root:State  : 76
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , . LexToken(ID,'z',8,109)
INFO:root:Action : Reduce rule [repush_type -> <empty>] with [] and goto state 22
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 116
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type . LexToken(ID,'z',8,109)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type ID . LexToken(;,';',8,110)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand . LexToken(;,';',8,110)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand empty . LexToken(;,';',8,110)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type ID push_operand dimensionsOpt . LexToken(;,';',8,110)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['z',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 162
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB . LexToken(;,';',8,110)
DEBUG:root:Action : Shift and goto state 77
DEBUG:root:
DEBUG:root:State  : 77
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB ; . LexToken(ID,'z',10,114)
INFO:root:Action : Reduce rule [declarationC -> ;] with [';'] and goto state 27
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB , repush_type declarationB declarationC . LexToken(ID,'z',10,114)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 208
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB , repush_type declarationB declarationC . LexToken(ID,'z',10,114)
INFO:root:Action : Reduce rule [declarationC -> , repush_type declarationB declarationC] with [',',None,None,None] and goto state 26
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction type push_type declarationB declarationC . LexToken(ID,'z',10,114)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction declaration . LexToken(ID,'z',10,114)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 53
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction . LexToken(ID,'z',10,114)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f6dbbc0> ('z')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand empty . LexToken(=,'=',10,116)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',10,116)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = . LexToken(ICONST,'8',10,118)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ICONST,'8',10,118)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'8',10,118)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'8',10,118)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST . LexToken(*,'*',10,120)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(*,'*',10,120)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6ef058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB constant . LexToken(*,'*',10,120)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',10,120)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',10,120)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'1',10,122)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'1',10,122)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'1',10,122)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'1',10,122)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 104
INFO:root:Result : <str @ 0x10f635418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand assignB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction ID seen_funccall push_operand assignfunccallB . LexToken(;,';',10,123)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['z','z',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction assignfunccall . LexToken(;,';',10,123)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction assignfunccall ; . LexToken(ID,'x',12,128)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction . LexToken(ID,'x',12,128)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID . LexToken(=,'=',12,130)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f5c9d00> ('x')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall . LexToken(=,'=',12,130)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand . LexToken(=,'=',12,130)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand empty . LexToken(=,'=',12,130)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',12,130)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = . LexToken(ICONST,'1',12,132)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ICONST,'1',12,132)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'1',12,132)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'1',12,132)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST . LexToken(*,'*',12,134)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(*,'*',12,134)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['1','int'] and goto state 104
INFO:root:Result : <str @ 0x10f635418> ('1')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator signB constant . LexToken(*,'*',12,134)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','1'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',12,134)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',12,134)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'3',12,136)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'3',12,136)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'3',12,136)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'3',12,136)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(*,'*',12,138)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(*,'*',12,138)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbf58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(*,'*',12,138)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(*,'*',12,138)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(*,'*',12,138)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * . LexToken(ICONST,'4',12,140)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator . LexToken(ICONST,'4',12,140)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'4',12,140)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'4',12,140)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',12,142)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',12,142)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbfd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',12,142)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor . LexToken(/,'/',12,142)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',12,142)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'4',12,144)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'4',12,144)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'4',12,144)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'4',12,144)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbfd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 87
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor * push_operator term . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand assignB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction ID seen_funccall push_operand assignfunccallB . LexToken(;,';',12,145)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['x','x',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction assignfunccall . LexToken(;,';',12,145)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction assignfunccall ; . LexToken(INT,'int',13,149)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction . LexToken(INT,'int',13,149)
DEBUG:root:Action : Shift and goto state 15
DEBUG:root:
DEBUG:root:State  : 15
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction INT . LexToken(ID,'a',13,153)
INFO:root:Action : Reduce rule [type -> INT] with ['int'] and goto state 114
INFO:root:Result : <str @ 0x10f7de7d8> ('int')
DEBUG:root:
DEBUG:root:State  : 16
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type . LexToken(ID,'a',13,153)
INFO:root:Action : Reduce rule [push_type -> <empty>] with [] and goto state 21
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 35
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type . LexToken(ID,'a',13,153)
DEBUG:root:Action : Shift and goto state 45
DEBUG:root:
DEBUG:root:State  : 45
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type ID . LexToken(=,'=',13,155)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 75
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type ID push_operand . LexToken(=,'=',13,155)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type ID push_operand empty . LexToken(=,'=',13,155)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 114
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type ID push_operand dimensionsOpt . LexToken(=,'=',13,155)
INFO:root:Action : Reduce rule [declarationB -> ID push_operand dimensionsOpt] with ['a',None,''] and goto state 19
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 46
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB . LexToken(=,'=',13,155)
DEBUG:root:Action : Shift and goto state 79
DEBUG:root:
DEBUG:root:State  : 79
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = . LexToken(ICONST,'2',13,157)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 117
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator . LexToken(ICONST,'2',13,157)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator empty . LexToken(ICONST,'2',13,157)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator signB . LexToken(ICONST,'2',13,157)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator signB ICONST . LexToken(/,'/',13,159)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator signB ICONST seen_iconst . LexToken(/,'/',13,159)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator signB constant . LexToken(/,'/',13,159)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor . LexToken(/,'/',13,159)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor . LexToken(/,'/',13,159)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / . LexToken(ICONST,'3',13,161)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator . LexToken(ICONST,'3',13,161)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'3',13,161)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'3',13,161)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB ICONST . LexToken(*,'*',13,163)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(*,'*',13,163)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbf58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator signB constant . LexToken(*,'*',13,163)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor . LexToken(*,'*',13,163)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor . LexToken(*,'*',13,163)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * . LexToken(ID,'x',13,165)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator . LexToken(ID,'x',13,165)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator ID seen_ID dimensionsOpt . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['x','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor * push_operator term . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor / push_operator term . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 87
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator factor seen_factor termB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator term . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator term seen_term expB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator exp . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator exp empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator exp expressionB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator expression . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator expression empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator expression superexpressionB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression empty . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator superexpression hyperexpressionB . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 163
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression . LexToken(;,';',13,166)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 209
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign . LexToken(;,';',13,166)
DEBUG:root:Action : Shift and goto state 243
DEBUG:root:
DEBUG:root:State  : 243
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign ; . LexToken(IF,'if',14,169)
INFO:root:Action : Reduce rule [declarationD -> ;] with [';'] and goto state 29
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 244
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB = push_operator hyperexpression quadruple_assign declarationD . LexToken(IF,'if',14,169)
INFO:root:Action : Reduce rule [declarationC -> = push_operator hyperexpression quadruple_assign declarationD] with ['=',None,None,None,None] and goto state 25
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 78
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction type push_type declarationB declarationC . LexToken(IF,'if',14,169)
INFO:root:Action : Reduce rule [declaration -> type push_type declarationB declarationC] with ['int',None,None,None] and goto state 18
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 67
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction declaration . LexToken(IF,'if',14,169)
INFO:root:Action : Reduce rule [instruction -> declaration] with [None] and goto state 53
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction . LexToken(IF,'if',14,169)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF . LexToken((,'(',14,172)
DEBUG:root:Action : Shift and goto state 108
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( . LexToken(ID,'a',14,173)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( ID . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( ID seen_ID . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( ID seen_ID empty . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( ID seen_ID dimensionsOpt . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( factor . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( factor seen_factor . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( factor seen_factor empty . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( factor seen_factor termB . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( term . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( term seen_term . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( term seen_term empty . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( term seen_term expB . LexToken(>,'>',14,175)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp . LexToken(>,'>',14,175)
DEBUG:root:Action : Shift and goto state 141
DEBUG:root:
DEBUG:root:State  : 141
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > . LexToken(ID,'b',14,177)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 189
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator . LexToken(ID,'b',14,177)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator ID . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID empty . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator ID seen_ID dimensionsOpt . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator factor . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor empty . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator factor seen_factor termB . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term . LexToken(+,'+',14,178)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term . LexToken(+,'+',14,178)
DEBUG:root:Action : Shift and goto state 180
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + . LexToken(ID,'a',14,179)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator . LexToken(ID,'a',14,179)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID . LexToken(/,'/',14,180)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID . LexToken(/,'/',14,180)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID empty . LexToken(/,'/',14,180)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator ID seen_ID dimensionsOpt . LexToken(/,'/',14,180)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor . LexToken(/,'/',14,180)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor . LexToken(/,'/',14,180)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / . LexToken(ICONST,'2',14,181)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator . LexToken(ICONST,'2',14,181)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'2',14,181)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'2',14,181)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB ICONST . LexToken(*,'*',14,182)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(*,'*',14,182)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator signB constant . LexToken(*,'*',14,182)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor . LexToken(*,'*',14,182)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor . LexToken(*,'*',14,182)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * . LexToken(ICONST,'5',14,183)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator . LexToken(ICONST,'5',14,183)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'5',14,183)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'5',14,183)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',14,184)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',14,184)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['5','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65fe90> ('5')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',14,184)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','5'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor . LexToken(/,'/',14,184)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',14,184)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'8',14,185)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'8',14,185)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'8',14,185)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'8',14,185)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['8','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6ef058> ('8')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','8'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 87
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor * push_operator term . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor / push_operator term . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 87
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator factor seen_factor termB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term empty . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator term seen_term expB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term + push_operator exp . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator term seen_term expB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 225
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp > push_operator exp . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [expressionB -> > push_operator exp] with ['>',None,None] and goto state 74
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( exp expressionB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( expression . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( expression empty . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( expression superexpressionB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( superexpression . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( superexpression empty . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( superexpression hyperexpressionB . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression . LexToken(),')',14,186)
INFO:root:Action : Reduce rule [condition_quadruple -> <empty>] with [] and goto state 46
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 201
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple . LexToken(),')',14,186)
DEBUG:root:Action : Shift and goto state 237
DEBUG:root:
DEBUG:root:State  : 237
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) . LexToken({,'{',14,188)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { . LexToken(ID,'x',15,191)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID . LexToken(=,'=',15,192)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f5c9d00> ('x')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall . LexToken(=,'=',15,192)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand . LexToken(=,'=',15,192)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand empty . LexToken(=,'=',15,192)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',15,192)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = . LexToken(ID,'a',15,193)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ID,'a',15,193)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator ID . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand assignB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand assignfunccallB . LexToken(;,';',15,194)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['x','x',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { assignfunccall . LexToken(;,';',15,194)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { assignfunccall ; . LexToken(IF,'if',16,199)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction . LexToken(IF,'if',16,199)
DEBUG:root:Action : Shift and goto state 70
DEBUG:root:
DEBUG:root:State  : 70
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF . LexToken((,'(',16,202)
DEBUG:root:Action : Shift and goto state 108
DEBUG:root:
DEBUG:root:State  : 108
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( . LexToken(ID,'b',16,203)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID empty . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( ID seen_ID dimensionsOpt . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor empty . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( factor seen_factor termB . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term empty . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( term seen_term expB . LexToken(<,'<',16,204)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp . LexToken(<,'<',16,204)
DEBUG:root:Action : Shift and goto state 139
DEBUG:root:
DEBUG:root:State  : 139
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < . LexToken(ID,'a',16,205)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 188
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator . LexToken(ID,'a',16,205)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID empty . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator ID seen_ID dimensionsOpt . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor empty . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator factor seen_factor termB . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term empty . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator term seen_term expB . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 224
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp < push_operator exp . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [expressionB -> < push_operator exp] with ['<',None,None] and goto state 73
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( exp expressionB . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression empty . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( expression superexpressionB . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression empty . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( superexpression hyperexpressionB . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 156
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression . LexToken(),')',16,206)
INFO:root:Action : Reduce rule [condition_quadruple -> <empty>] with [] and goto state 46
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 201
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple . LexToken(),')',16,206)
DEBUG:root:Action : Shift and goto state 237
DEBUG:root:
DEBUG:root:State  : 237
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) . LexToken({,'{',16,207)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { . LexToken(ID,'x',17,212)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID . LexToken(=,'=',17,213)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f5c9d00> ('x')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall . LexToken(=,'=',17,213)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand . LexToken(=,'=',17,213)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand empty . LexToken(=,'=',17,213)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',17,213)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = . LexToken(ICONST,'2',17,214)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ICONST,'2',17,214)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'2',17,214)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'2',17,214)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator signB constant . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand assignB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { ID seen_funccall push_operand assignfunccallB . LexToken(;,';',17,215)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['x','x',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { assignfunccall . LexToken(;,';',17,215)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { assignfunccall ; . LexToken(},'}',18,220)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction . LexToken(},'}',18,220)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction empty . LexToken(},'}',18,220)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 38
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instruction instructionsOpt . LexToken(},'}',18,220)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt . LexToken(},'}',18,220)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt } . LexToken(ELSE,'else',19,225)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 36
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 260
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block . LexToken(ELSE,'else',19,225)
DEBUG:root:Action : Shift and goto state 272
DEBUG:root:
DEBUG:root:State  : 272
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE . LexToken({,'{',19,230)
INFO:root:Action : Reduce rule [elsecondition_quadruple -> <empty>] with [] and goto state 47
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 282
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple . LexToken({,'{',19,230)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { . LexToken(ID,'x',20,235)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID . LexToken(=,'=',20,236)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f5c9d00> ('x')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall . LexToken(=,'=',20,236)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand . LexToken(=,'=',20,236)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand empty . LexToken(=,'=',20,236)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',20,236)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = . LexToken(ICONST,'3',20,237)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ICONST,'3',20,237)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator empty . LexToken(ICONST,'3',20,237)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator signB . LexToken(ICONST,'3',20,237)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST . LexToken(*,'*',20,238)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator signB ICONST seen_iconst . LexToken(*,'*',20,238)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['3','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbf58> ('3')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator signB constant . LexToken(*,'*',20,238)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','3'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(*,'*',20,238)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(*,'*',20,238)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * . LexToken(ICONST,'5',20,239)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator . LexToken(ICONST,'5',20,239)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'5',20,239)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'5',20,239)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['5','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65fe90> ('5')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator signB constant . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','5'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor empty . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor * push_operator term . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand assignB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand assignfunccallB . LexToken(;,';',20,240)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['x','x',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall . LexToken(;,';',20,240)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall ; . LexToken(},'}',21,252)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction . LexToken(},'}',21,252)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction empty . LexToken(},'}',21,252)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 38
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction instructionsOpt . LexToken(},'}',21,252)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt . LexToken(},'}',21,252)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt } . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 36
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 288
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple block . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [else -> ELSE elsecondition_quadruple block] with ['else',None,None] and goto state 44
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 274
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block else . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [endcondition_quadruple -> <empty>] with [] and goto state 48
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 283
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple] with ['if','(',None,None,')',None,None,None] and goto state 43
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 69
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction condition . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 54
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction empty . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 38
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instruction instructionsOpt . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instruction instructionsOpt . LexToken(},'}',22,255)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt . LexToken(},'}',22,255)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) { instructionsOpt } . LexToken(ELSE,'else',23,258)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 36
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 260
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block . LexToken(ELSE,'else',23,258)
DEBUG:root:Action : Shift and goto state 272
DEBUG:root:
DEBUG:root:State  : 272
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE . LexToken({,'{',23,263)
INFO:root:Action : Reduce rule [elsecondition_quadruple -> <empty>] with [] and goto state 47
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 282
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple . LexToken({,'{',23,263)
DEBUG:root:Action : Shift and goto state 40
DEBUG:root:
DEBUG:root:State  : 40
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { . LexToken(ID,'x',24,266)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID . LexToken(=,'=',24,267)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f5c9d00> ('x')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall . LexToken(=,'=',24,267)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand . LexToken(=,'=',24,267)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand empty . LexToken(=,'=',24,267)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',24,267)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = . LexToken(ID,'b',24,268)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ID,'b',24,268)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator ID . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['b','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand assignB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { ID seen_funccall push_operand assignfunccallB . LexToken(;,';',24,269)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['x','x',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall . LexToken(;,';',24,269)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { assignfunccall ; . LexToken(},'}',25,272)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction . LexToken(},'}',25,272)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 58
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction empty . LexToken(},'}',25,272)
INFO:root:Action : Reduce rule [instructionsOpt -> empty] with [''] and goto state 38
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 109
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instruction instructionsOpt . LexToken(},'}',25,272)
INFO:root:Action : Reduce rule [instructionsOpt -> instruction instructionsOpt] with [None,None] and goto state 37
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 63
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt . LexToken(},'}',25,272)
DEBUG:root:Action : Shift and goto state 105
DEBUG:root:
DEBUG:root:State  : 105
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple { instructionsOpt } . LexToken(ID,'b',26,276)
INFO:root:Action : Reduce rule [block -> { instructionsOpt }] with ['{',None,'}'] and goto state 36
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 288
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block ELSE elsecondition_quadruple block . LexToken(ID,'b',26,276)
INFO:root:Action : Reduce rule [else -> ELSE elsecondition_quadruple block] with ['else',None,None] and goto state 44
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 274
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block else . LexToken(ID,'b',26,276)
INFO:root:Action : Reduce rule [endcondition_quadruple -> <empty>] with [] and goto state 48
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 283
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple . LexToken(ID,'b',26,276)
INFO:root:Action : Reduce rule [condition -> IF ( hyperexpression condition_quadruple ) block else endcondition_quadruple] with ['if','(',None,None,')',None,None,None] and goto state 43
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 69
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction condition . LexToken(ID,'b',26,276)
INFO:root:Action : Reduce rule [instruction -> condition] with [None] and goto state 54
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction . LexToken(ID,'b',26,276)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID . LexToken(=,'=',26,278)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f635580> ('b')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall . LexToken(=,'=',26,278)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand . LexToken(=,'=',26,278)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand empty . LexToken(=,'=',26,278)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 200
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt . LexToken(=,'=',26,278)
DEBUG:root:Action : Shift and goto state 236
DEBUG:root:
DEBUG:root:State  : 236
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = . LexToken(ID,'a',26,280)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 259
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator . LexToken(ID,'a',26,280)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:
DEBUG:root:State  : 91
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator ID . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [seen_ID -> <empty>] with [] and goto state 95
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 132
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 115
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID empty . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [dimensionsOpt -> empty] with [''] and goto state 42
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 179
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator ID seen_ID dimensionsOpt . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [factor -> ID seen_ID dimensionsOpt] with ['a','',''] and goto state 93
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor empty . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator factor seen_factor termB . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term . LexToken(+,'+',26,281)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term . LexToken(+,'+',26,281)
DEBUG:root:Action : Shift and goto state 180
DEBUG:root:
DEBUG:root:State  : 180
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + . LexToken(ICONST,'2',26,282)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 218
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator . LexToken(ICONST,'2',26,282)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator empty . LexToken(ICONST,'2',26,282)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator signB . LexToken(ICONST,'2',26,282)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST . LexToken(*,'*',26,283)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator signB ICONST seen_iconst . LexToken(*,'*',26,283)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator signB constant . LexToken(*,'*',26,283)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor . LexToken(*,'*',26,283)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor . LexToken(*,'*',26,283)
DEBUG:root:Action : Shift and goto state 171
DEBUG:root:
DEBUG:root:State  : 171
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * . LexToken(ICONST,'4',26,284)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 211
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator . LexToken(ICONST,'4',26,284)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator empty . LexToken(ICONST,'4',26,284)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB . LexToken(ICONST,'4',26,284)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB ICONST . LexToken(/,'/',26,285)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB ICONST seen_iconst . LexToken(/,'/',26,285)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['4','int'] and goto state 104
INFO:root:Result : <str @ 0x10f6dbfd0> ('4')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator signB constant . LexToken(/,'/',26,285)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','4'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor . LexToken(/,'/',26,285)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor . LexToken(/,'/',26,285)
DEBUG:root:Action : Shift and goto state 174
DEBUG:root:
DEBUG:root:State  : 174
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / . LexToken(ICONST,'2',26,286)
INFO:root:Action : Reduce rule [push_operator -> <empty>] with [] and goto state 23
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 212
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator . LexToken(ICONST,'2',26,286)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 87
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator empty . LexToken(ICONST,'2',26,286)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB . LexToken(ICONST,'2',26,286)
DEBUG:root:Action : Shift and goto state 122
DEBUG:root:
DEBUG:root:State  : 122
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [seen_iconst -> <empty>] with [] and goto state 99
INFO:root:Result : <str @ 0x10f5c93c8> ('int')
DEBUG:root:
DEBUG:root:State  : 167
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB ICONST seen_iconst . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [constant -> ICONST seen_iconst] with ['2','int'] and goto state 104
INFO:root:Result : <str @ 0x10f65ff58> ('2')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator signB constant . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','2'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor empty . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator factor seen_factor termB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 246
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor / push_operator term . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [termB -> / push_operator term] with ['/',None,None] and goto state 87
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator factor seen_factor termB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 245
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor * push_operator term . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [termB -> * push_operator term] with ['*',None,None] and goto state 88
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator factor seen_factor termB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator term . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term empty . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator term seen_term expB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 248
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term + push_operator exp . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [expB -> + push_operator exp] with ['+',None,None] and goto state 83
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator term seen_term expB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp empty . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator exp expressionB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression empty . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator expression superexpressionB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression empty . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator superexpression hyperexpressionB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 271
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [quadruple_assign -> <empty>] with [] and goto state 24
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 281
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand dimensionsOpt = push_operator hyperexpression quadruple_assign . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [assignB -> dimensionsOpt = push_operator hyperexpression quadruple_assign] with ['','=',None,None,None] and goto state 40
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 199
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand assignB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [assignfunccallB -> assignB] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand assignfunccallB . LexToken(;,';',26,287)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['b','b',None,None] and goto state 58
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 64
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction assignfunccall . LexToken(;,';',26,287)
DEBUG:root:Action : Shift and goto state 106
DEBUG:root:
DEBUG:root:State  : 106
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction assignfunccall ; . LexToken(ID,'suma',27,291)
INFO:root:Action : Reduce rule [instruction -> assignfunccall ;] with [None,';'] and goto state 49
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 71
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction . LexToken(ID,'suma',27,291)
DEBUG:root:Action : Shift and goto state 68
DEBUG:root:
DEBUG:root:State  : 68
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID . LexToken((,'(',27,295)
INFO:root:Action : Reduce rule [seen_funccall -> <empty>] with [] and goto state 59
INFO:root:Result : <str @ 0x10f7ece40> ('suma')
DEBUG:root:
DEBUG:root:State  : 107
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall . LexToken((,'(',27,295)
INFO:root:Action : Reduce rule [push_operand -> <empty>] with [] and goto state 20
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 155
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand . LexToken((,'(',27,295)
DEBUG:root:Action : Shift and goto state 198
DEBUG:root:
DEBUG:root:State  : 198
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( . LexToken(SCONST,'"HOla"',27,296)
INFO:root:Action : Reduce rule [pop_operand -> <empty>] with [] and goto state 60
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 235
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand . LexToken(SCONST,'"HOla"',27,296)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand empty . LexToken(SCONST,'"HOla"',27,296)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand signB . LexToken(SCONST,'"HOla"',27,296)
DEBUG:root:Action : Shift and goto state 121
DEBUG:root:
DEBUG:root:State  : 121
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand signB SCONST . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [seen_sconst -> <empty>] with [] and goto state 100
INFO:root:Result : <str @ 0x10f6d4d50> ('string')
DEBUG:root:
DEBUG:root:State  : 166
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand signB SCONST seen_sconst . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [constant -> SCONST seen_sconst] with ['"HOla"','string'] and goto state 105
INFO:root:Result : <str @ 0x10f7ecf00> ('"HOla"')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand signB constant . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','"HOla"'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand factor . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand factor seen_factor . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand factor seen_factor empty . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand factor seen_factor termB . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand term . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand term seen_term . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand term seen_term empty . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand term seen_term expB . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand exp . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand exp empty . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand exp expressionB . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand expression . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand expression empty . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand expression superexpressionB . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand superexpression . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand superexpression empty . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand superexpression hyperexpressionB . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand hyperexpression . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 145
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand hyperexpression seen_param . LexToken(,,',',27,302)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 143
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 258
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB . LexToken(,,',',27,302)
DEBUG:root:Action : Shift and goto state 216
DEBUG:root:
DEBUG:root:State  : 216
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , . LexToken(TRUE,'true',27,304)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 178
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , empty . LexToken(TRUE,'true',27,304)
INFO:root:Action : Reduce rule [signB -> empty] with [''] and goto state 97
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 81
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , signB . LexToken(TRUE,'true',27,304)
DEBUG:root:Action : Shift and goto state 124
DEBUG:root:
DEBUG:root:State  : 124
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , signB TRUE . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [seen_true -> <empty>] with [] and goto state 101
INFO:root:Result : <str @ 0x10f5fa990> ('bool')
DEBUG:root:
DEBUG:root:State  : 169
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , signB TRUE seen_true . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [constant -> TRUE seen_true] with ['true','bool'] and goto state 106
INFO:root:Result : <str @ 0x10f7ece70> ('true')
DEBUG:root:
DEBUG:root:State  : 119
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , signB constant . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [factor -> signB constant] with ['','true'] and goto state 90
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 86
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , factor . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [seen_factor -> <empty>] with [] and goto state 86
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 127
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , factor seen_factor . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 173
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , factor seen_factor empty . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [termB -> empty] with [''] and goto state 89
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 172
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , factor seen_factor termB . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [term -> factor seen_factor termB] with [None,None,None] and goto state 85
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 92
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , term . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [seen_term -> <empty>] with [] and goto state 81
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 133
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , term seen_term . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 183
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , term seen_term empty . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [expB -> empty] with [''] and goto state 84
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 182
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , term seen_term expB . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [exp -> term seen_term expB] with [None,None,None] and goto state 80
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 93
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , exp . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 140
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , exp empty . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [expressionB -> empty] with [''] and goto state 79
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 136
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , exp expressionB . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [expression -> exp expressionB] with [None,None] and goto state 72
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 94
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , expression . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 144
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , expression empty . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [superexpressionB -> empty] with [''] and goto state 71
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 143
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , expression superexpressionB . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [superexpression -> expression superexpressionB] with [None,None] and goto state 69
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 89
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , superexpression . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
INFO:root:Result : <str @ 0x10f5c9508> ('')
DEBUG:root:
DEBUG:root:State  : 130
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , superexpression empty . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [hyperexpressionB -> empty] with [''] and goto state 68
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 128
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , superexpression hyperexpressionB . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [hyperexpression -> superexpression hyperexpressionB] with [None,None] and goto state 66
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 177
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , hyperexpression . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [seen_param -> <empty>] with [] and goto state 145
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 217
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , hyperexpression seen_param . LexToken(),')',27,308)
INFO:root:Action : Reduce rule [funccallB -> hyperexpression seen_param] with [None,None] and goto state 143
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 247
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , funccallB . LexToken(),')',27,308)
DEBUG:root:Action : Shift and goto state 215
DEBUG:root:
DEBUG:root:State  : 215
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , funccallB ) . LexToken(;,';',27,309)
INFO:root:Action : Reduce rule [funccallC -> )] with [')'] and goto state 147
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 264
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB , funccallB funccallC . LexToken(;,';',27,309)
INFO:root:Action : Reduce rule [funccallC -> , funccallB funccallC] with [',',None,None] and goto state 146
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 270
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand ( pop_operand funccallB funccallC . LexToken(;,';',27,309)
INFO:root:Action : Reduce rule [assignfunccallB -> ( pop_operand funccallB funccallC] with ['(',None,None,None] and goto state 61
INFO:root:Result : <NoneType @ 0x10f5287f8> (None)
DEBUG:root:
DEBUG:root:State  : 197
DEBUG:root:Stack  : config declarationsOpt funcsOpt MAIN ( ) seen_main { instruction instruction instruction instruction instruction instruction instruction ID seen_funccall push_operand assignfunccallB . LexToken(;,';',27,309)
INFO:root:Action : Reduce rule [assignfunccall -> ID seen_funccall push_operand assignfunccallB] with ['suma','suma',None,None] and goto state 58
