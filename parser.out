Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    TRACKDECISION
    FORGETDECISION
    BOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> config body
Rule 2     config -> configdirective config
Rule 3     config -> empty
Rule 4     configdirective -> VARSCONFIG = options
Rule 5     configdirective -> DECISIONSCONFIG = options
Rule 6     configdirective -> COMPLEXITYCONFIG = optionsyesno
Rule 7     options -> SOME
Rule 8     options -> ALL
Rule 9     options -> MOST
Rule 10    options -> NONE
Rule 11    optionsyesno -> YES
Rule 12    optionsyesno -> NO
Rule 13    body -> declarationsOpt funcsOpt main funcsOpt
Rule 14    funcsOpt -> func funcsOpt
Rule 15    funcsOpt -> empty
Rule 16    declarationsOpt -> declaration declarationsOpt
Rule 17    declarationsOpt -> empty
Rule 18    declaration -> type assign
Rule 19    main -> MAIN ( ) block
Rule 20    func -> DEF returntype ID ( paramsOpt ) block
Rule 21    paramsOpt -> params
Rule 22    paramsOpt -> empty
Rule 23    block -> { instructionsOpt }
Rule 24    instructionsOpt -> instruction instructionsOpt
Rule 25    instructionsOpt -> empty
Rule 26    assign -> ID dimensionsOpt = superexpression
Rule 27    assignB -> dimensionsOpt = superexpression
Rule 28    dimensionsOpt -> dimensions
Rule 29    dimensionsOpt -> empty
Rule 30    condition -> IF ( superexpression ) block else
Rule 31    else -> ELSE block
Rule 32    else -> empty
Rule 33    instruction -> assignfunccall ;
Rule 34    instruction -> output ;
Rule 35    instruction -> input ;
Rule 36    instruction -> return ;
Rule 37    instruction -> declaration ;
Rule 38    instruction -> condition
Rule 39    instruction -> whileloop
Rule 40    instruction -> forloop
Rule 41    instruction -> localdirective
Rule 42    assignfunccall -> ID assignfunccallB
Rule 43    assignfunccallB -> ( funccallB
Rule 44    assignfunccallB -> assignB
Rule 45    localdirective -> localvardirective
Rule 46    localdirective -> localdecisiondirective
Rule 47    localdirective -> localmsgdirective
Rule 48    superexpression -> expression superexpressionB
Rule 49    superexpressionB -> & & superexpression
Rule 50    superexpressionB -> | | superexpression
Rule 51    superexpressionB -> empty
Rule 52    expression -> exp expressionB
Rule 53    expressionB -> < exp
Rule 54    expressionB -> > exp
Rule 55    expressionB -> < > exp
Rule 56    expressionB -> = = exp
Rule 57    expressionB -> < = exp
Rule 58    expressionB -> > = exp
Rule 59    expressionB -> empty
Rule 60    exp -> term expB
Rule 61    expB -> - exp
Rule 62    expB -> + exp
Rule 63    expB -> empty
Rule 64    term -> factor termB
Rule 65    termB -> / term
Rule 66    termB -> * term
Rule 67    termB -> empty
Rule 68    factor -> signB constant
Rule 69    factor -> ( superexpression )
Rule 70    factor -> funccall
Rule 71    factor -> ID dimensionB
Rule 72    signB -> sign
Rule 73    signB -> empty
Rule 74    constant -> FCONST
Rule 75    constant -> ICONST
Rule 76    constant -> TRUE
Rule 77    constant -> FALSE
Rule 78    sign -> +
Rule 79    sign -> -
Rule 80    whileloop -> WHILE ( superexpression ) block
Rule 81    type -> INT
Rule 82    type -> FLOAT
Rule 83    type -> STRING
Rule 84    returntype -> VOID
Rule 85    returntype -> type
Rule 86    forloop -> FOR ( asign ; superexpression ; superexpression ) block
Rule 87    input -> INPUT ( ID inputB )
Rule 88    inputB -> , ID inputB
Rule 89    inputB -> empty
Rule 90    output -> PRINT ( outputB
Rule 91    outputB -> STRING outputC
Rule 92    outputB -> superexpression outputC
Rule 93    outputC -> )
Rule 94    outputC -> , outputB
Rule 95    localvardirective -> # localvardirectiveB ID
Rule 96    localvardirectiveB -> TRACK
Rule 97    localvardirectiveB -> FORGET
Rule 98    localmsgdirective -> # SHOW STRING
Rule 99    localdecisiondirective -> # localdecisiondirectiveB DECISION
Rule 100   localdecisiondirective -> empty
Rule 101   localdecisiondirectiveB -> TRACK
Rule 102   localdecisiondirectiveB -> FORGET
Rule 103   funccallB -> superexpression funccallC
Rule 104   funccallB -> )
Rule 105   funccallC -> , superexpression funccallC
Rule 106   funccallC -> )
Rule 107   dimensions -> [ superexpression ] dimensionsB
Rule 108   dimensionsB -> [ superexpression ]
Rule 109   return -> RETURN superexpression
Rule 110   params -> type ID paramsB
Rule 111   paramsB -> , type ID paramsB
Rule 112   paramsB -> empty
Rule 113   empty -> <empty>

Terminals, with rules where they appear

#                    : 95 98 99
&                    : 49 49
(                    : 19 20 30 43 69 80 86 87 90
)                    : 19 20 30 69 80 86 87 93 104 106
*                    : 66
+                    : 62 78
,                    : 88 94 105 111
-                    : 61 79
/                    : 65
;                    : 33 34 35 36 37 86 86
<                    : 53 55 57
=                    : 4 5 6 26 27 56 56 57 58
>                    : 54 55 58
ALL                  : 8
BOOL                 : 
COMPLEXITYCONFIG     : 6
DECISIONSCONFIG      : 5
DEF                  : 20
ELSE                 : 31
FALSE                : 77
FCONST               : 74
FLOAT                : 82
FOR                  : 86
FORGET               : 97 102
FORGETDECISION       : 
ICONST               : 75
ID                   : 20 26 42 71 87 88 95 110 111
IF                   : 30
INPUT                : 87
INT                  : 81
MAIN                 : 19
MOST                 : 9
NO                   : 12
NONE                 : 10
PRINT                : 90
RETURN               : 109
SHOW                 : 98
SOME                 : 7
STRING               : 83 91 98
TRACK                : 96 101
TRACKDECISION        : 
TRUE                 : 76
VARSCONFIG           : 4
VOID                 : 84
WHILE                : 80
YES                  : 11
[                    : 107 108
]                    : 107 108
error                : 
{                    : 23
|                    : 50 50
}                    : 23

Nonterminals, with rules where they appear

DECISION             : 99
asign                : 86
assign               : 18
assignB              : 44
assignfunccall       : 33
assignfunccallB      : 42
block                : 19 20 30 31 80 86
body                 : 1
condition            : 38
config               : 1 2
configdirective      : 2
constant             : 68
declaration          : 16 37
declarationsOpt      : 13 16
dimensionB           : 71
dimensions           : 28
dimensionsB          : 107
dimensionsOpt        : 26 27
else                 : 30
empty                : 3 15 17 22 25 29 32 51 59 63 67 73 89 100 112
exp                  : 52 53 54 55 56 57 58 61 62
expB                 : 60
expression           : 48
expressionB          : 52
factor               : 64
forloop              : 40
func                 : 14
funccall             : 70
funccallB            : 43
funccallC            : 103 105
funcsOpt             : 13 13 14
input                : 35
inputB               : 87 88
instruction          : 24
instructionsOpt      : 23 24
localdecisiondirective : 46
localdecisiondirectiveB : 99
localdirective       : 41
localmsgdirective    : 47
localvardirective    : 45
localvardirectiveB   : 95
main                 : 13
options              : 4 5
optionsyesno         : 6
output               : 34
outputB              : 90 94
outputC              : 91 92
params               : 21
paramsB              : 110 111
paramsOpt            : 20
program              : 0
return               : 36
returntype           : 20
sign                 : 72
signB                : 68
superexpression      : 26 27 30 49 50 69 80 86 86 92 103 105 107 108 109
superexpressionB     : 48
term                 : 60 65 66
termB                : 64
type                 : 18 85 110 111
whileloop            : 39

